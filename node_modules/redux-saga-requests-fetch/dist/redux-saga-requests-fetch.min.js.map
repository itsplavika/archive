{"version":3,"sources":["webpack://ReduxSagaRequestsFetch/webpack/universalModuleDefinition","webpack://ReduxSagaRequestsFetch/webpack/bootstrap","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/@babel/runtime/regenerator/index.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/@babel/runtime/helpers/extends.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/regenerator-runtime/runtime-module.js","webpack://ReduxSagaRequestsFetch//home/klis87/projects/redux-saga-requests/node_modules/regenerator-runtime/runtime.js","webpack://ReduxSagaRequestsFetch/./src/fetch-api-driver.js","webpack://ReduxSagaRequestsFetch/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","this","excluded","sourceKeys","keys","indexOf","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","args","err","undefined","url","test","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","push","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","responseTypes","getResponseData","response","responseType","prepareSuccessPayload","data","DummyAbortController","abort","createDriver","fetchInstance","_temp","_sendRequest","_ref","_ref$baseURL","baseURL","_ref$AbortController","AbortController","requestInstance","getAbortSource","abortRequest","abortSource","sendRequest","asyncToGenerator_default","regenerator_default","a","_callee","_ref2","_ref2$responseType","requestConfig","_context","objectWithoutPropertiesLoose_default","isAbsoluteUrl","extends_default","signal","ok","json","t0","_x","_x2","getSuccessPayload","Array","isArray","map","getErrorPayload","__webpack_exports__","fetch_api_driver_createDriver"],"mappings":"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","file":"redux-saga-requests-fetch.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxSagaRequestsFetch\"] = factory();\n\telse\n\t\troot[\"ReduxSagaRequestsFetch\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"regenerator-runtime\");\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","import isAbsoluteUrl from 'axios/lib/helpers/isAbsoluteURL';\n\nconst responseTypes = ['arraybuffer', 'blob', 'formData', 'json', 'text', null];\n\nconst getResponseData = (response, responseType) => {\n  if (responseTypes.indexOf(responseType) === -1) {\n    throw new Error(\n      \"responseType must be one of the following: 'arraybuffer', 'blob', 'formData', 'json', 'text', null\",\n    );\n  }\n\n  if (responseType === null) {\n    return Promise.resolve(null);\n  }\n\n  return response[responseType]();\n};\n\nconst prepareSuccessPayload = response => response.data;\n\nclass DummyAbortController {\n  /* eslint-disable-next-line class-methods-use-this */\n  abort() {}\n}\n\nexport const createDriver = (\n  fetchInstance,\n  { baseURL = '', AbortController = DummyAbortController } = {},\n) => ({\n  requestInstance: fetchInstance,\n  getAbortSource() {\n    return new AbortController();\n  },\n  abortRequest(abortSource) {\n    abortSource.abort();\n  },\n  sendRequest: async (\n    { url, responseType = 'json', ...requestConfig },\n    abortSource,\n  ) => {\n    const response = await fetchInstance(\n      isAbsoluteUrl(url) ? url : baseURL + url,\n      { signal: abortSource.signal, ...requestConfig },\n    );\n\n    if (!response.ok) {\n      try {\n        response.data = await response.json();\n      } catch (e) {\n        // no response data from server\n      }\n\n      throw response;\n    }\n\n    response.data = await getResponseData(response, responseType);\n    return response;\n  },\n  getSuccessPayload(response) {\n    if (Array.isArray(response)) {\n      return response.map(prepareSuccessPayload);\n    }\n\n    return prepareSuccessPayload(response);\n  },\n  getErrorPayload(error) {\n    return error;\n  },\n});\n","export { createDriver } from './fetch-api-driver';\n"],"sourceRoot":""}