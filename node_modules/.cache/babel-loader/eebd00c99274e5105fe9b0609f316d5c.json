{"ast":null,"code":"import produce from 'immer';\nimport actionTypes from '../../actions/types';\nimport { createSelector } from 'reselect';\nimport { orderBy, uniq } from 'lodash';\nimport { deepClone } from 'fast-json-patch';\n\nconst reducer = (state = {}, action) => {\n  const {\n    type,\n    value,\n    eqpLocCode,\n    eqpOrLoc = \"\",\n    wrkGrpCode = \"\",\n    parentEqpCode = \"\",\n    planningGrpCode,\n    parentCode\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.EQUIPMENT_LOCATIONS.REQUEST:\n        if (!draft.equipmentLocations) {\n          draft.equipmentLocations = {};\n        }\n\n        if (!draft.equipmentLocations[eqpOrLoc]) {\n          draft.equipmentLocations[eqpOrLoc] = {\n            items: [],\n            itemTextList: []\n          };\n        }\n\n        draft.equipmentLocations[eqpOrLoc].status = 'requested';\n        break;\n\n      case actionTypes.EQUIPMENT_LOCATIONS.RECEIVED:\n        if (draft.equipmentLocations[eqpOrLoc].itemTextList.indexOf(eqpLocCode) === -1) {\n          draft.equipmentLocations[eqpOrLoc].itemTextList.push(eqpLocCode);\n        }\n\n        const mergedItems = [...deepClone(draft.equipmentLocations[eqpOrLoc].items), ...value];\n        draft.equipmentLocations[eqpOrLoc].items = uniq(mergedItems, 'EqpLocCode');\n        draft.equipmentLocations[eqpOrLoc].status = 'success';\n        break;\n\n      case actionTypes.EQUIPMENT_LOCATIONS.FAILED:\n        // if(!draft.workflowItems){\n        //     draft.workflowItems = {};\n        // }\n        draft.equipmentLocations[eqpOrLoc].status = 'failed';\n        break;\n\n      case actionTypes.EQUIPMENT_LOCATIONS.MAP_LOCATIONS.REQUEST:\n        if (!draft.equipmentMapLocations) {\n          draft.equipmentMapLocations = {};\n        }\n\n        draft.equipmentMapLocations.status = 'requested';\n        break;\n\n      case actionTypes.EQUIPMENT_LOCATIONS.MAP_LOCATIONS.RECEIVED:\n        draft.equipmentMapLocations.status = 'success';\n        draft.equipmentMapLocations.defaultCenterInformation = value.defaultCenterInformation;\n        draft.equipmentMapLocations.defaultZoominformation = value.defaultZoominformation;\n        draft.equipmentMapLocations.markersInformation = value.markersInformation;\n        draft.equipmentMapLocations.wayPointsInformation = value.wayPointsInformation;\n        break;\n\n      case actionTypes.EQUIPMENT_LOCATIONS.GROUP_EQP_AND_LOC.REQUEST:\n        {\n          const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`;\n\n          if (!draft.eqpGroup) {\n            draft.eqpGroup = {};\n          }\n\n          if (!draft.eqpGroup[key]) {\n            draft.eqpGroup[key] = {\n              status: 'requested'\n            };\n          }\n\n          break;\n        }\n\n      case actionTypes.EQUIPMENT_LOCATIONS.GROUP_EQP_AND_LOC.RECEIVED:\n        {\n          const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`;\n          draft.eqpGroup[key].status = 'requested';\n          draft.eqpGroup[key].value = value;\n          break;\n        }\n\n      case actionTypes.EQUIPMENT_LOCATIONS.PLANNING_GROUP.REQUEST:\n        {\n          const key = `${planningGrpCode}-${parentCode}`;\n\n          if (!draft.planningGroup) {\n            draft.planningGroup = {};\n          }\n\n          if (!draft.planningGroup[key]) {\n            draft.planningGroup[key] = {\n              status: 'requested'\n            };\n          }\n\n          break;\n        }\n\n      case actionTypes.EQUIPMENT_LOCATIONS.PLANNING_GROUP.RECEIVED:\n        {\n          const key = `${planningGrpCode}-${parentCode}`;\n          draft.planningGroup[key].status = 'requested';\n          draft.planningGroup[key].value = value;\n          break;\n        }\n\n      default:\n    }\n  });\n};\n\nexport default reducer;\nconst emptySet = [];\nconst emptyObj = {};\nexport const selectors = {}; // selectors.workflow = (state) => {\n//     if (!state) {\n//       return emptyObj;\n//     }\n//     return state.workflow || emptyObj;\n// };\n\nselectors.equipmentLocations = (state, eqpOrLoc) => {\n  var _state$equipmentLocat;\n\n  if (!state) {\n    return emptyObj;\n  }\n\n  return ((_state$equipmentLocat = state.equipmentLocations) === null || _state$equipmentLocat === void 0 ? void 0 : _state$equipmentLocat[eqpOrLoc]) || emptyObj;\n};\n\nselectors.equipmentLocationDetail = (state, eqpLocCode, eqpOrLoc) => {\n  var _state$equipmentLocat2, _state$equipmentLocat3, _state$equipmentLocat4;\n\n  if (!state) {\n    return emptyObj;\n  }\n\n  return ((_state$equipmentLocat2 = state.equipmentLocations) === null || _state$equipmentLocat2 === void 0 ? void 0 : (_state$equipmentLocat3 = _state$equipmentLocat2[eqpOrLoc]) === null || _state$equipmentLocat3 === void 0 ? void 0 : (_state$equipmentLocat4 = _state$equipmentLocat3.items) === null || _state$equipmentLocat4 === void 0 ? void 0 : _state$equipmentLocat4.find(item => {\n    return item.EqpLocCode === eqpLocCode;\n  })) || emptyObj;\n};\n\nselectors.equipmentLocationsByCode = createSelector((state, eqpLocCode, eqpOrLoc) => {\n  var _state$equipmentLocat5, _state$equipmentLocat6;\n\n  return (state === null || state === void 0 ? void 0 : (_state$equipmentLocat5 = state.equipmentLocations) === null || _state$equipmentLocat5 === void 0 ? void 0 : (_state$equipmentLocat6 = _state$equipmentLocat5[eqpOrLoc]) === null || _state$equipmentLocat6 === void 0 ? void 0 : _state$equipmentLocat6.items) || emptySet;\n}, (state, eqpLocCode) => eqpLocCode, (equipmentLocations, eqpLocCode) => {\n  return equipmentLocations.filter(loc => {\n    var _loc$EqpLocCode;\n\n    return (_loc$EqpLocCode = loc.EqpLocCode) === null || _loc$EqpLocCode === void 0 ? void 0 : _loc$EqpLocCode.startsWith(eqpLocCode);\n  }) || emptySet;\n});\nselectors.findEquipmentLocation = createSelector((state, eqpLocCode, eqpOrLoc) => {\n  var _state$equipmentLocat7, _state$equipmentLocat8;\n\n  return (state === null || state === void 0 ? void 0 : (_state$equipmentLocat7 = state.equipmentLocations) === null || _state$equipmentLocat7 === void 0 ? void 0 : (_state$equipmentLocat8 = _state$equipmentLocat7[eqpOrLoc]) === null || _state$equipmentLocat8 === void 0 ? void 0 : _state$equipmentLocat8.items) || emptySet;\n}, (state, eqpLocCode) => eqpLocCode, (equipmentLocations, eqpLocCode) => {\n  return equipmentLocations.find(loc => {\n    var _loc$EqpLocCode2;\n\n    return (_loc$EqpLocCode2 = loc.EqpLocCode) === null || _loc$EqpLocCode2 === void 0 ? void 0 : _loc$EqpLocCode2.startsWith(eqpLocCode);\n  }) || emptySet;\n});\n\nselectors.equipmentMapLocations = state => {\n  return (state === null || state === void 0 ? void 0 : state.equipmentMapLocations) || emptySet;\n};\n\nselectors.groupEqpAndLoc = createSelector((state, {\n  wrkGrpCode,\n  eqpLocCode,\n  parentEqpCode\n}) => {\n  var _state$eqpGroup;\n\n  const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`;\n\n  if (!state) {\n    return emptyObj;\n  }\n\n  return ((_state$eqpGroup = state.eqpGroup) === null || _state$eqpGroup === void 0 ? void 0 : _state$eqpGroup[key]) || emptyObj;\n}, equipmentLocationsObj => {\n  const {\n    value: equipmentLocations = [],\n    status\n  } = equipmentLocationsObj;\n  const sortedItems = orderBy(equipmentLocations, [\"EQP_description\"], [\"asc\"]) || emptySet;\n  return {\n    value: sortedItems,\n    status\n  };\n});\nselectors.locationPlanningGroup = createSelector((state, {\n  planningGrpCode,\n  parentCode\n}) => {\n  var _state$planningGroup;\n\n  const key = `${planningGrpCode}-${parentCode}`;\n\n  if (!state) {\n    return emptyObj;\n  }\n\n  return ((_state$planningGroup = state.planningGroup) === null || _state$planningGroup === void 0 ? void 0 : _state$planningGroup[key]) || emptyObj;\n}, planningGroupObj => {\n  const {\n    value: planningGroups = [],\n    status\n  } = planningGroupObj;\n  const sortedItems = orderBy(planningGroups, [\"Description\"], [\"asc\"]) || emptySet;\n  return {\n    value: sortedItems,\n    status\n  };\n});","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/equipmentLocations/index.js"],"names":["produce","actionTypes","createSelector","orderBy","uniq","deepClone","reducer","state","action","type","value","eqpLocCode","eqpOrLoc","wrkGrpCode","parentEqpCode","planningGrpCode","parentCode","draft","EQUIPMENT_LOCATIONS","REQUEST","equipmentLocations","items","itemTextList","status","RECEIVED","indexOf","push","mergedItems","FAILED","MAP_LOCATIONS","equipmentMapLocations","defaultCenterInformation","defaultZoominformation","markersInformation","wayPointsInformation","GROUP_EQP_AND_LOC","key","eqpGroup","PLANNING_GROUP","planningGroup","emptySet","emptyObj","selectors","equipmentLocationDetail","find","item","EqpLocCode","equipmentLocationsByCode","filter","loc","startsWith","findEquipmentLocation","groupEqpAndLoc","equipmentLocationsObj","sortedItems","locationPlanningGroup","planningGroupObj","planningGroups"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport actionTypes from '../../actions/types'\nimport { createSelector } from 'reselect';\nimport { orderBy, uniq } from 'lodash'\nimport { deepClone } from 'fast-json-patch';\nconst reducer = (state = {}, action) => {\n  const { type, value, eqpLocCode, eqpOrLoc = \"\", wrkGrpCode = \"\", parentEqpCode = \"\", planningGrpCode, parentCode } = action;\n  return produce(state, draft => {\n    switch (type) {\n\n      case actionTypes.EQUIPMENT_LOCATIONS.REQUEST:\n        if (!draft.equipmentLocations) {\n          draft.equipmentLocations = {};\n        }\n        if (!draft.equipmentLocations[eqpOrLoc]) {\n          draft.equipmentLocations[eqpOrLoc] = { items: [], itemTextList: [] };\n        }\n        draft.equipmentLocations[eqpOrLoc].status = 'requested';\n\n        break;\n      case actionTypes.EQUIPMENT_LOCATIONS.RECEIVED:\n        if (draft.equipmentLocations[eqpOrLoc].itemTextList.indexOf(eqpLocCode) === -1) {\n          draft.equipmentLocations[eqpOrLoc].itemTextList.push(eqpLocCode)\n        }\n        const mergedItems = [...deepClone(draft.equipmentLocations[eqpOrLoc].items), ...value,];\n        draft.equipmentLocations[eqpOrLoc].items = uniq(mergedItems, 'EqpLocCode')\n        draft.equipmentLocations[eqpOrLoc].status = 'success';\n        break;\n      case actionTypes.EQUIPMENT_LOCATIONS.FAILED:\n        // if(!draft.workflowItems){\n        //     draft.workflowItems = {};\n        // }\n        draft.equipmentLocations[eqpOrLoc].status = 'failed';\n        break;\n      case actionTypes.EQUIPMENT_LOCATIONS.MAP_LOCATIONS.REQUEST:\n        if (!draft.equipmentMapLocations) {\n          draft.equipmentMapLocations = {};\n        }\n        draft.equipmentMapLocations.status = 'requested';\n        break;\n      case actionTypes.EQUIPMENT_LOCATIONS.MAP_LOCATIONS.RECEIVED:\n        draft.equipmentMapLocations.status = 'success';\n        draft.equipmentMapLocations.defaultCenterInformation = value.defaultCenterInformation\n        draft.equipmentMapLocations.defaultZoominformation = value.defaultZoominformation\n        draft.equipmentMapLocations.markersInformation = value.markersInformation\n        draft.equipmentMapLocations.wayPointsInformation = value.wayPointsInformation\n        break;\n      case actionTypes.EQUIPMENT_LOCATIONS.GROUP_EQP_AND_LOC.REQUEST: {\n        const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`\n        if (!draft.eqpGroup) {\n          draft.eqpGroup = {};\n        }\n        if (!draft.eqpGroup[key]) {\n          draft.eqpGroup[key] = {\n            status: 'requested'\n          };\n        }\n        break;\n      }\n      case actionTypes.EQUIPMENT_LOCATIONS.GROUP_EQP_AND_LOC.RECEIVED: {\n        const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`\n        draft.eqpGroup[key].status = 'requested';\n        draft.eqpGroup[key].value = value;\n        break;\n      }\n      case actionTypes.EQUIPMENT_LOCATIONS.PLANNING_GROUP.REQUEST: {\n        const key = `${planningGrpCode}-${parentCode}`\n        if (!draft.planningGroup) {\n          draft.planningGroup = {};\n        }\n        if (!draft.planningGroup[key]) {\n          draft.planningGroup[key] = {\n            status: 'requested'\n          };\n        }\n        break;\n      }\n      case actionTypes.EQUIPMENT_LOCATIONS.PLANNING_GROUP.RECEIVED: {\n        const key = `${planningGrpCode}-${parentCode}`\n        draft.planningGroup[key].status = 'requested';\n        draft.planningGroup[key].value = value;\n        break;\n      }\n\n      default:\n\n    }\n  })\n}\n\nexport default reducer;\nconst emptySet = [];\nconst emptyObj = {};\nexport const selectors = {};\n// selectors.workflow = (state) => {\n//     if (!state) {\n//       return emptyObj;\n//     }\n\n//     return state.workflow || emptyObj;\n// };\n\nselectors.equipmentLocations = (state, eqpOrLoc) => {\n  if (!state) {\n    return emptyObj;\n  }\n  return state.equipmentLocations?.[eqpOrLoc] || emptyObj;\n};\n\nselectors.equipmentLocationDetail = (state, eqpLocCode, eqpOrLoc) => {\n  if (!state) {\n    return emptyObj;\n  }\n  return state.equipmentLocations?.[eqpOrLoc]?.items?.find(item => {\n    return item.EqpLocCode === eqpLocCode\n  }) || emptyObj;\n};\n\n\nselectors.equipmentLocationsByCode = createSelector(\n  (state, eqpLocCode, eqpOrLoc) => state?.equipmentLocations?.[eqpOrLoc]?.items || emptySet,\n  (state, eqpLocCode) => eqpLocCode,\n  (equipmentLocations, eqpLocCode) => {\n    return equipmentLocations.filter(loc => loc.EqpLocCode?.startsWith(eqpLocCode)) || emptySet\n  }\n);\n\nselectors.findEquipmentLocation = createSelector(\n  (state, eqpLocCode, eqpOrLoc) => state?.equipmentLocations?.[eqpOrLoc]?.items || emptySet,\n  (state, eqpLocCode) => eqpLocCode,\n  (equipmentLocations, eqpLocCode) => {\n    return equipmentLocations.find(loc => loc.EqpLocCode?.startsWith(eqpLocCode)) || emptySet\n  }\n);\n\n\nselectors.equipmentMapLocations = (state) => {\n  return state?.equipmentMapLocations || emptySet\n}\n\n\n\nselectors.groupEqpAndLoc = createSelector(\n  (state, { wrkGrpCode, eqpLocCode, parentEqpCode }) => {\n    const key = `${wrkGrpCode}-${eqpLocCode}-${parentEqpCode}`;\n    if (!state) {\n      return emptyObj;\n    }\n\n    return state.eqpGroup?.[key] || emptyObj;\n  },\n  (equipmentLocationsObj) => {\n    const { value: equipmentLocations = [], status } = equipmentLocationsObj\n    const sortedItems = orderBy(equipmentLocations, [\"EQP_description\"], [\"asc\"]) || emptySet;\n    return { value: sortedItems, status }\n  }\n);\n\nselectors.locationPlanningGroup = createSelector(\n  (state, { planningGrpCode, parentCode }) => {\n    const key = `${planningGrpCode}-${parentCode}`;\n    if (!state) {\n      return emptyObj;\n    }\n\n    return state.planningGroup?.[key] || emptyObj;\n  },\n  (planningGroupObj) => {\n    const { value: planningGroups = [], status } = planningGroupObj\n    const sortedItems = orderBy(planningGroups, [\"Description\"], [\"asc\"]) || emptySet;\n    return { value: sortedItems, status }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}