{"ast":null,"code":"import { call, takeEvery, put, select } from \"redux-saga/effects\";\nimport { apiCallWithRetry } from \"..\";\nimport actions from \"../../actions\";\nimport actionTypes from \"../../actions/types\";\nimport { selectors } from \"../../reducers\";\nimport { downloadFileV2 } from \"../../queries/workRequest/downloadFileV2\";\nexport function* requestAssets({\n  fileId,\n  relativePath\n}) {\n  const assetObj = yield select(selectors.assets, {\n    fileId,\n    relativePath\n  });\n\n  if (assetObj.status === 'received') {\n    return;\n  }\n\n  const query = downloadFileV2({\n    fileId,\n    relativePath\n  });\n\n  try {\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      hidden: true\n    }); // if(resp?.['workRequest_getPlanningMetaData']?.getPlanningMetaData){\n    // const data = resp['workRequest_getPlanningMetaData']?.getPlanningMetaData || [];             \n\n    if (resp.downloadFile) {\n      return yield put(actions.assets.received({\n        fileId,\n        relativePath,\n        byteArr: resp.downloadFile\n      }));\n    } // }\n\n  } catch (e) {}\n}\nexport const assetsSagas = [takeEvery(actionTypes.ASSETS.REQUEST, requestAssets)];","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/sagas/assets/index.js"],"names":["call","takeEvery","put","select","apiCallWithRetry","actions","actionTypes","selectors","downloadFileV2","requestAssets","fileId","relativePath","assetObj","assets","status","query","resp","opts","hidden","downloadFile","received","byteArr","e","assetsSagas","ASSETS","REQUEST"],"mappings":"AACA,SACEA,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,MAJF,QAKO,oBALP;AAMA,SAASC,gBAAT,QAAiC,IAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,0CAA/B;AAEA,OAAO,UAAUC,aAAV,CAAwB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAxB,EAAkD;AACvD,QAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACI,SAAS,CAACM,MAAX,EAAmB;AAAEH,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAnB,CAA7B;;AACA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,UAAxB,EAAoC;AAClC;AACD;;AACD,QAAMC,KAAK,GAAGP,cAAc,CAAC;AAC3BE,IAAAA,MAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA5B;;AAIA,MAAI;AACF,UAAMK,IAAI,GAAG,MAAMhB,IAAI,CAACI,gBAAD,EAAmB;AACxCa,MAAAA,IAAI,EAAE,EADkC;AAExCF,MAAAA,KAAK,EAAEA,KAFiC;AAGxCG,MAAAA,MAAM,EAAE;AAHgC,KAAnB,CAAvB,CADE,CAMF;AACA;;AACA,QAAIF,IAAI,CAACG,YAAT,EAAuB;AACrB,aAAO,MAAMjB,GAAG,CAACG,OAAO,CAACQ,MAAR,CAAeO,QAAf,CAAwB;AACvCV,QAAAA,MADuC;AAEvCC,QAAAA,YAFuC;AAGvCU,QAAAA,OAAO,EAAEL,IAAI,CAACG;AAHyB,OAAxB,CAAD,CAAhB;AAKD,KAdC,CAgBF;;AAED,GAlBD,CAkBE,OAAOG,CAAP,EAAU,CACX;AACF;AAID,OAAO,MAAMC,WAAW,GAAG,CACzBtB,SAAS,CAACK,WAAW,CAACkB,MAAZ,CAAmBC,OAApB,EAA6BhB,aAA7B,CADgB,CAApB","sourcesContent":["\nimport {\n  call,\n  takeEvery,\n  put,\n  select,\n} from \"redux-saga/effects\";\nimport { apiCallWithRetry } from \"..\";\nimport actions from \"../../actions\";\nimport actionTypes from \"../../actions/types\";\nimport { selectors } from \"../../reducers\";\nimport { downloadFileV2 } from \"../../queries/workRequest/downloadFileV2\";\n\nexport function* requestAssets({ fileId, relativePath }) {\n  const assetObj = yield select(selectors.assets, { fileId, relativePath });\n  if (assetObj.status === 'received') {\n    return;\n  }\n  const query = downloadFileV2({\n    fileId,\n    relativePath\n  });\n  try {\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      hidden: true,\n    })\n    // if(resp?.['workRequest_getPlanningMetaData']?.getPlanningMetaData){\n    // const data = resp['workRequest_getPlanningMetaData']?.getPlanningMetaData || [];             \n    if (resp.downloadFile) {\n      return yield put(actions.assets.received({\n        fileId,\n        relativePath,\n        byteArr: resp.downloadFile,\n      }));\n    }\n\n    // }\n\n  } catch (e) {\n  }\n}\n\n\n\nexport const assetsSagas = [\n  takeEvery(actionTypes.ASSETS.REQUEST, requestAssets),\n];\n"]},"metadata":{},"sourceType":"module"}