{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Detail/View/Timeline/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport actions from \"../../../../../actions\";\nimport { selectors } from \"../../../../../reducers\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport EAMTimeline from \"../../../../../components/EAMTimeline\";\nimport Spinner from \"../../../../../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  spinner: {\n    margin: 'auto'\n  }\n});\nconst emptySet = [];\nexport default function WrTimeline({\n  wrNo\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    value: timeline = emptySet,\n    status\n  } = useSelector(state => selectors.wrTimeline(state, wrNo), shallowEqual);\n  useEffect(() => {\n    dispatch(actions.workRequestV2.timeline.request(wrNo));\n  }, [dispatch, wrNo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['received', 'error'].includes(status) ? /*#__PURE__*/_jsxDEV(EAMTimeline, {\n      value: timeline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      speed: 0.5,\n      className: classes.spinner,\n      type: \"moon\",\n      size: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WrTimeline, \"XPWlPncECXTSUwjt5rLTc72t72o=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = WrTimeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"WrTimeline\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Detail/View/Timeline/index.jsx"],"names":["useEffect","shallowEqual","useDispatch","useSelector","actions","selectors","makeStyles","EAMTimeline","Spinner","useStyles","spinner","margin","emptySet","WrTimeline","wrNo","dispatch","classes","value","timeline","status","state","wrTimeline","workRequestV2","request","includes"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,OAAP,MAAoB,mCAApB;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AADkB,CAAD,CAA5B;AAOA,MAAMC,QAAQ,GAAG,EAAjB;AACA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAAA;;AAC3C,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAAEQ,IAAAA,KAAK,EAAEC,QAAQ,GAAGN,QAApB;AAA8BO,IAAAA;AAA9B,MAAyChB,WAAW,CAACiB,KAAK,IAAIf,SAAS,CAACgB,UAAV,CAAqBD,KAArB,EAA4BN,IAA5B,CAAV,EAA6Cb,YAA7C,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACX,OAAO,CAACkB,aAAR,CAAsBJ,QAAtB,CAA+BK,OAA/B,CAAuCT,IAAvC,CAAD,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,EAAWD,IAAX,CAFM,CAAT;AAIA,sBACE;AAAA,cACG,CAAC,UAAD,EAAa,OAAb,EAAsBU,QAAtB,CAA+BL,MAA/B,iBACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,gBAIC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,GAAhB;AAAqB,MAAA,SAAS,EAAEF,OAAO,CAACN,OAAxC;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,IAAI,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA;AALJ,mBADF;AAUD;;GAnBuBG,U;UACLX,W,EACDO,S,EAC+BN,W;;;KAHzBU,U","sourcesContent":["import { useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\"\nimport actions from \"../../../../../actions\";\nimport { selectors } from \"../../../../../reducers\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport EAMTimeline from \"../../../../../components/EAMTimeline\";\nimport Spinner from \"../../../../../components/Spinner\";\n\nconst useStyles = makeStyles({\n  spinner: {\n    margin: 'auto',\n  },\n})\n\n\nconst emptySet = [];\nexport default function WrTimeline({ wrNo }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { value: timeline = emptySet, status } = useSelector(state => selectors.wrTimeline(state, wrNo), shallowEqual);\n\n  useEffect(() => {\n    dispatch(actions.workRequestV2.timeline.request(wrNo))\n  }, [dispatch, wrNo])\n\n  return (\n    <>\n      {['received', 'error'].includes(status) ? (\n        (<EAMTimeline value={timeline} />)\n      )\n        :\n        <Spinner speed={0.5} className={classes.spinner} type=\"moon\" size={100} />\n      }\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}