{"ast":null,"code":"export const genSelectors = (selectors, subSelectors) => {\n  const selectorNameSet = new Set();\n  Object.keys(subSelectors).forEach(subName => {\n    Object.keys(subSelectors[subName]).forEach(k => {\n      if (k === 'default') return;\n      if (selectorNameSet.has(k)) throw new Error(`duplicate selector name ${k} from ${subName}!`);\n      selectorNameSet.add(k);\n      const subSelector = subSelectors[subName];\n\n      if (subSelector[k].length === 0 && (k.startsWith('mk') || k.startsWith('make'))) {\n        // eslint-disable-next-line no-param-reassign\n        selectors[k] = () => {\n          const sel = subSelector[k]();\n          return (state, ...args) => sel(state === null || state === void 0 ? void 0 : state[subName], ...args);\n        };\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        selectors[k] = (state, ...args) => subSelector[k](state === null || state === void 0 ? void 0 : state[subName], ...args);\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/util.js"],"names":["genSelectors","selectors","subSelectors","selectorNameSet","Set","Object","keys","forEach","subName","k","has","Error","add","subSelector","length","startsWith","sel","state","args"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACrD,QAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,OAA1B,CAAkCC,OAAO,IAAI;AAC3CH,IAAAA,MAAM,CAACC,IAAP,CAAYJ,YAAY,CAACM,OAAD,CAAxB,EAAmCD,OAAnC,CAA2CE,CAAC,IAAI;AAC9C,UAAIA,CAAC,KAAK,SAAV,EAAqB;AACrB,UAAIN,eAAe,CAACO,GAAhB,CAAoBD,CAApB,CAAJ,EAA4B,MAAM,IAAIE,KAAJ,CAAW,2BAA0BF,CAAE,SAAQD,OAAQ,GAAvD,CAAN;AAC5BL,MAAAA,eAAe,CAACS,GAAhB,CAAoBH,CAApB;AACA,YAAMI,WAAW,GAAGX,YAAY,CAACM,OAAD,CAAhC;;AAEA,UAAIK,WAAW,CAACJ,CAAD,CAAX,CAAeK,MAAf,KAA0B,CAA1B,KAAgCL,CAAC,CAACM,UAAF,CAAa,IAAb,KAAsBN,CAAC,CAACM,UAAF,CAAa,MAAb,CAAtD,CAAJ,EAAiF;AAC/E;AACAd,QAAAA,SAAS,CAACQ,CAAD,CAAT,GAAe,MAAM;AACnB,gBAAMO,GAAG,GAAGH,WAAW,CAACJ,CAAD,CAAX,EAAZ;AAEA,iBAAO,CAACQ,KAAD,EAAQ,GAAGC,IAAX,KAAoBF,GAAG,CAACC,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAGT,OAAH,CAAN,EAAmB,GAAGU,IAAtB,CAA9B;AACD,SAJD;AAKD,OAPD,MAOO;AACL;AACAjB,QAAAA,SAAS,CAACQ,CAAD,CAAT,GAAe,CAACQ,KAAD,EAAQ,GAAGC,IAAX,KAAoBL,WAAW,CAACJ,CAAD,CAAX,CAAeQ,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAGT,OAAH,CAApB,EAAiC,GAAGU,IAApC,CAAnC;AACD;AACF,KAjBD;AAkBD,GAnBD;AAoBD,CAvBI","sourcesContent":["export const genSelectors = (selectors, subSelectors) => {\n    const selectorNameSet = new Set();\n  \n    Object.keys(subSelectors).forEach(subName => {\n      Object.keys(subSelectors[subName]).forEach(k => {\n        if (k === 'default') return;\n        if (selectorNameSet.has(k)) throw new Error(`duplicate selector name ${k} from ${subName}!`);\n        selectorNameSet.add(k);\n        const subSelector = subSelectors[subName];\n  \n        if (subSelector[k].length === 0 && (k.startsWith('mk') || k.startsWith('make'))) {\n          // eslint-disable-next-line no-param-reassign\n          selectors[k] = () => {\n            const sel = subSelector[k]();\n  \n            return (state, ...args) => sel(state?.[subName], ...args);\n          };\n        } else {\n          // eslint-disable-next-line no-param-reassign\n          selectors[k] = (state, ...args) => subSelector[k](state?.[subName], ...args);\n        }\n      });\n    });\n  };\n  "]},"metadata":{},"sourceType":"module"}