{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMConfirmDialog/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EAMButton from \"../EAMButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmationDialog = ({\n  open,\n  title,\n  message,\n  onConfirm,\n  onDismiss\n}) => {\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(EAMButton, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EAMButton, {\n        variant: \"primary\",\n        onClick: onConfirm,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ConfirmationDialog;\nconst ConfirmationDialogContext = /*#__PURE__*/React.createContext({});\n\nconst ConfirmationDialogProvider = ({\n  children\n}) => {\n  _s();\n\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [dialogConfig, setDialogConfig] = React.useState({});\n\n  const openDialog = ({\n    title,\n    message,\n    actionCallback\n  }) => {\n    console.log('openDialog -> setDialogOpen', setDialogOpen);\n    console.log('openDialog -> dialogOpen', dialogOpen);\n    setDialogOpen(true);\n    setDialogConfig({\n      title,\n      message,\n      actionCallback\n    });\n  };\n\n  const resetDialog = () => {\n    setDialogOpen(false);\n    setDialogConfig({});\n  };\n\n  const onConfirm = () => {\n    resetDialog();\n    dialogConfig.actionCallback(true);\n  };\n\n  const onDismiss = () => {\n    resetDialog();\n    dialogConfig.actionCallback(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConfirmationDialogContext.Provider, {\n    value: {\n      openDialog\n    },\n    children: [/*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      open: dialogOpen,\n      title: dialogConfig === null || dialogConfig === void 0 ? void 0 : dialogConfig.title,\n      message: dialogConfig === null || dialogConfig === void 0 ? void 0 : dialogConfig.message,\n      onConfirm: onConfirm,\n      onDismiss: onDismiss\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmationDialogProvider, \"2Vr0vBrRpEBf9iGB7b3CW0MWlQ0=\");\n\n_c2 = ConfirmationDialogProvider;\n\nconst useConfirmationDialog = () => {\n  _s2();\n\n  const {\n    openDialog\n  } = React.useContext(ConfirmationDialogContext);\n\n  const getConfirmation = ({ ...options\n  }) => new Promise(res => {\n    openDialog({\n      actionCallback: res,\n      ...options\n    });\n  });\n\n  return {\n    getConfirmation\n  };\n};\n\n_s2(useConfirmationDialog, \"tx5NDzE+84qPhfSauyT4NGXbWdc=\");\n\nexport default ConfirmationDialog;\nexport { ConfirmationDialogProvider, useConfirmationDialog };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfirmationDialog\");\n$RefreshReg$(_c2, \"ConfirmationDialogProvider\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMConfirmDialog/index.jsx"],"names":["React","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","EAMButton","ConfirmationDialog","open","title","message","onConfirm","onDismiss","ConfirmationDialogContext","createContext","ConfirmationDialogProvider","children","dialogOpen","setDialogOpen","useState","dialogConfig","setDialogConfig","openDialog","actionCallback","console","log","resetDialog","useConfirmationDialog","useContext","getConfirmation","options","Promise","res"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EAMButton from \"../EAMButton\";\n\nconst ConfirmationDialog = ({ open, title, message, onConfirm, onDismiss }) => {\n  return (\n    <Dialog open={open} onClose={onDismiss}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{message}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <EAMButton variant=\"secondary\" onClick={onDismiss}>Cancel</EAMButton>\n        <EAMButton variant=\"primary\" onClick={onConfirm}>\n          Confirm\n        </EAMButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst ConfirmationDialogContext = React.createContext({});\n\nconst ConfirmationDialogProvider = ({ children }) => {\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [dialogConfig, setDialogConfig] = React.useState({});\n\n  const openDialog = ({ title, message, actionCallback }) => {\n    console.log('openDialog -> setDialogOpen', setDialogOpen)\n    console.log('openDialog -> dialogOpen', dialogOpen)\n    setDialogOpen(true);\n    setDialogConfig({ title, message, actionCallback });\n  };\n\n  const resetDialog = () => {\n    setDialogOpen(false);\n    setDialogConfig({});\n  };\n\n  const onConfirm = () => {\n    resetDialog();\n    dialogConfig.actionCallback(true);\n  };\n\n  const onDismiss = () => {\n    resetDialog();\n    dialogConfig.actionCallback(false);\n  };\n\n  return (\n    <ConfirmationDialogContext.Provider value={{ openDialog }}>\n      <ConfirmationDialog\n        open={dialogOpen}\n        title={dialogConfig?.title}\n        message={dialogConfig?.message}\n        onConfirm={onConfirm}\n        onDismiss={onDismiss}\n      />\n      {children}\n    </ConfirmationDialogContext.Provider>\n  );\n};\n\nconst useConfirmationDialog = () => {\n  const { openDialog } = React.useContext(ConfirmationDialogContext);\n\n  const getConfirmation = ({ ...options }) =>\n    new Promise((res) => {\n      openDialog({ actionCallback: res, ...options });\n    });\n\n  return { getConfirmation };\n};\n\nexport default ConfirmationDialog;\nexport { ConfirmationDialogProvider, useConfirmationDialog };\n"]},"metadata":{},"sourceType":"module"}