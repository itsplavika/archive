{"ast":null,"code":"import produce from 'immer';\nimport actionTypes from '../../actions/types';\n\nconst reducer = (state = {}, action) => {\n  const {\n    type,\n    fileId,\n    relativePath,\n    byteArr\n  } = action;\n  const key = `${fileId}-${relativePath}`;\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.ASSETS.REQUEST:\n        if (!draft.assets) {\n          draft.assets = {};\n        }\n\n        if (!draft.assets[key]) {\n          draft.assets[key] = {\n            status: 'requested'\n          };\n        }\n\n        break;\n\n      case actionTypes.ASSETS.RECEIVED:\n        draft.assets[key].byteArr = byteArr;\n        draft.assets[key].status = 'received';\n        break;\n\n      default:\n    }\n  });\n};\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\n\nselectors.assets = (state, {\n  fileId,\n  relativePath\n}) => {\n  var _state$assets;\n\n  if (!state) {\n    return emptyObj;\n  }\n\n  const key = `${fileId}-${relativePath}`;\n  return (state === null || state === void 0 ? void 0 : (_state$assets = state.assets) === null || _state$assets === void 0 ? void 0 : _state$assets[key]) || emptyObj;\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/assets/index.js"],"names":["produce","actionTypes","reducer","state","action","type","fileId","relativePath","byteArr","key","draft","ASSETS","REQUEST","assets","status","RECEIVED","emptyObj","selectors"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAA0CJ,MAAhD;AACA,QAAMK,GAAG,GAAI,GAAEH,MAAO,IAAGC,YAAa,EAAtC;AACA,SAAOP,OAAO,CAACG,KAAD,EAAQO,KAAK,IAAI;AAC7B,YAAQL,IAAR;AAEE,WAAKJ,WAAW,CAACU,MAAZ,CAAmBC,OAAxB;AACE,YAAI,CAACF,KAAK,CAACG,MAAX,EAAmB;AACjBH,UAAAA,KAAK,CAACG,MAAN,GAAe,EAAf;AACD;;AACD,YAAI,CAACH,KAAK,CAACG,MAAN,CAAaJ,GAAb,CAAL,EAAwB;AACtBC,UAAAA,KAAK,CAACG,MAAN,CAAaJ,GAAb,IAAoB;AAClBK,YAAAA,MAAM,EAAE;AADU,WAApB;AAGD;;AAED;;AACF,WAAKb,WAAW,CAACU,MAAZ,CAAmBI,QAAxB;AACEL,QAAAA,KAAK,CAACG,MAAN,CAAaJ,GAAb,EAAkBD,OAAlB,GAA4BA,OAA5B;AACAE,QAAAA,KAAK,CAACG,MAAN,CAAaJ,GAAb,EAAkBK,MAAlB,GAA2B,UAA3B;AACA;;AAEF;AAlBF;AAoBD,GArBa,CAAd;AAsBD,CAzBD;;AA2BA,eAAeZ,OAAf;AACA,MAAMc,QAAQ,GAAG,EAAjB;AACA,OAAO,MAAMC,SAAS,GAAG,EAAlB;;AACPA,SAAS,CAACJ,MAAV,GAAmB,CAACV,KAAD,EAAQ;AAAEG,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAR,KAAqC;AAAA;;AACtD,MAAI,CAACJ,KAAL,EAAY;AACV,WAAOa,QAAP;AACD;;AACD,QAAMP,GAAG,GAAI,GAAEH,MAAO,IAAGC,YAAa,EAAtC;AAEA,SAAO,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEU,MAAP,gEAAgBJ,GAAhB,MAAwBO,QAA/B;AACD,CAPD","sourcesContent":["import produce from 'immer';\nimport actionTypes from '../../actions/types'\n\nconst reducer = (state = {}, action) => {\n  const { type, fileId, relativePath, byteArr } = action;\n  const key = `${fileId}-${relativePath}`;\n  return produce(state, draft => {\n    switch (type) {\n\n      case actionTypes.ASSETS.REQUEST:\n        if (!draft.assets) {\n          draft.assets = {};\n        }\n        if (!draft.assets[key]) {\n          draft.assets[key] = {\n            status: 'requested'\n          };\n        }\n\n        break;\n      case actionTypes.ASSETS.RECEIVED:\n        draft.assets[key].byteArr = byteArr;\n        draft.assets[key].status = 'received'\n        break;\n\n      default:\n    }\n  })\n}\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\nselectors.assets = (state, { fileId, relativePath }) => {\n  if (!state) {\n    return emptyObj;\n  }\n  const key = `${fileId}-${relativePath}`;\n\n  return state?.assets?.[key] || emptyObj;\n};\n"]},"metadata":{},"sourceType":"module"}