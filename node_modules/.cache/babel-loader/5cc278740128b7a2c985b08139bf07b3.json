{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { GET_REQUEST_CACHE, CLEAR_REQUESTS_CACHE } from './constants';\nimport { success, isRequestAction, isSuccessAction, isResponseAction, getRequestActionFromResponse, getActionPayload } from './actions';\n\nvar shouldActionBePromisified = function shouldActionBePromisified(action, auto) {\n  return auto && !(action.meta && action.meta.asPromise === false) || action.meta && action.meta.asPromise;\n};\n\nexport var requestsPromiseMiddleware = function requestsPromiseMiddleware(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? false : _ref$auto;\n\n  var requestMap = new Map();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (isRequestAction(action) && shouldActionBePromisified(action, auto)) {\n          return new Promise(function (resolve, reject) {\n            requestMap.set(action, function (response, error) {\n              return error ? reject(response) : resolve(response);\n            });\n            next(action);\n          });\n        }\n\n        if (isResponseAction(action)) {\n          var requestAction = getRequestActionFromResponse(action);\n\n          if (shouldActionBePromisified(requestAction, auto)) {\n            var requestActionPromise = requestMap.get(requestAction);\n            requestActionPromise(action, action.type !== success(requestAction.type));\n            requestMap.delete(requestAction);\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\n\nvar isCacheValid = function isCacheValid(cache) {\n  return cache.expiring === null || Date.now() <= cache.expiring;\n};\n\nvar getNewCacheTimeout = function getNewCacheTimeout(cache) {\n  return cache === true ? null : cache * 1000 + Date.now();\n};\n\nvar getCacheKey = function getCacheKey(action) {\n  return action.type + (action.meta.cacheKey || '');\n};\n\nexport var requestsCacheMiddleware = function requestsCacheMiddleware() {\n  var cacheMap = new Map();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type === GET_REQUEST_CACHE) {\n          return cacheMap;\n        }\n\n        if (action.type === CLEAR_REQUESTS_CACHE) {\n          if (action.actionTypes.length === 0) {\n            cacheMap.clear();\n          } else {\n            action.actionTypes.forEach(function (actionType) {\n              return cacheMap.delete(actionType);\n            });\n          }\n\n          return null;\n        }\n\n        if (isRequestAction(action) && action.meta && action.meta.cache) {\n          var cacheKey = getCacheKey(action);\n          var cacheValue = cacheMap.get(cacheKey);\n\n          if (cacheValue && isCacheValid(cacheValue)) {\n            return next(_extends({}, action, {\n              meta: _extends({}, action.meta, {\n                cacheResponse: cacheValue.response\n              })\n            }));\n          } else if (cacheValue && !isCacheValid(cacheValue)) {\n            cacheMap.delete(cacheKey);\n          }\n        } else if (isSuccessAction(action) && action.meta && action.meta.cache && !action.meta.cacheResponse) {\n          var requestAction = getRequestActionFromResponse(action);\n\n          if (action.meta.cacheKey && action.meta.cacheSize) {\n            var currentCacheKeys = Array.from(cacheMap.keys()).filter(function (k) {\n              return k.startsWith(requestAction.type);\n            });\n\n            if (action.meta.cacheSize === currentCacheKeys.length) {\n              cacheMap.delete(currentCacheKeys[0]);\n            }\n          }\n\n          cacheMap.set(getCacheKey(requestAction), {\n            response: getActionPayload(action).response,\n            expiring: getNewCacheTimeout(action.meta.cache)\n          });\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\nexport var serverRequestsFilterMiddleware = function serverRequestsFilterMiddleware(_ref2) {\n  var serverRequestActions = _ref2.serverRequestActions;\n  var actionsToBeIgnored = serverRequestActions.slice();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (!isRequestAction(action)) {\n          return next(action);\n        }\n\n        var actionToBeIgnoredIndex = actionsToBeIgnored.findIndex(function (a) {\n          return a.type === action.type;\n        });\n\n        if (actionToBeIgnoredIndex === -1) {\n          return next(action);\n        }\n\n        actionsToBeIgnored.splice(actionToBeIgnoredIndex, 1);\n        return null;\n      };\n    };\n  };\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/node_modules/redux-saga-requests/es/middleware.js"],"names":["_extends","GET_REQUEST_CACHE","CLEAR_REQUESTS_CACHE","success","isRequestAction","isSuccessAction","isResponseAction","getRequestActionFromResponse","getActionPayload","shouldActionBePromisified","action","auto","meta","asPromise","requestsPromiseMiddleware","_temp","_ref","_ref$auto","requestMap","Map","next","Promise","resolve","reject","set","response","error","requestAction","requestActionPromise","get","type","delete","isCacheValid","cache","expiring","Date","now","getNewCacheTimeout","getCacheKey","cacheKey","requestsCacheMiddleware","cacheMap","actionTypes","length","clear","forEach","actionType","cacheValue","cacheResponse","cacheSize","currentCacheKeys","Array","from","keys","filter","k","startsWith","serverRequestsFilterMiddleware","_ref2","serverRequestActions","actionsToBeIgnored","slice","actionToBeIgnoredIndex","findIndex","a","splice"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport { GET_REQUEST_CACHE, CLEAR_REQUESTS_CACHE } from './constants';\nimport { success, isRequestAction, isSuccessAction, isResponseAction, getRequestActionFromResponse, getActionPayload } from './actions';\n\nvar shouldActionBePromisified = function shouldActionBePromisified(action, auto) {\n  return auto && !(action.meta && action.meta.asPromise === false) || action.meta && action.meta.asPromise;\n};\n\nexport var requestsPromiseMiddleware = function requestsPromiseMiddleware(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? false : _ref$auto;\n\n  var requestMap = new Map();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (isRequestAction(action) && shouldActionBePromisified(action, auto)) {\n          return new Promise(function (resolve, reject) {\n            requestMap.set(action, function (response, error) {\n              return error ? reject(response) : resolve(response);\n            });\n            next(action);\n          });\n        }\n\n        if (isResponseAction(action)) {\n          var requestAction = getRequestActionFromResponse(action);\n\n          if (shouldActionBePromisified(requestAction, auto)) {\n            var requestActionPromise = requestMap.get(requestAction);\n            requestActionPromise(action, action.type !== success(requestAction.type));\n            requestMap.delete(requestAction);\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\n\nvar isCacheValid = function isCacheValid(cache) {\n  return cache.expiring === null || Date.now() <= cache.expiring;\n};\n\nvar getNewCacheTimeout = function getNewCacheTimeout(cache) {\n  return cache === true ? null : cache * 1000 + Date.now();\n};\n\nvar getCacheKey = function getCacheKey(action) {\n  return action.type + (action.meta.cacheKey || '');\n};\n\nexport var requestsCacheMiddleware = function requestsCacheMiddleware() {\n  var cacheMap = new Map();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type === GET_REQUEST_CACHE) {\n          return cacheMap;\n        }\n\n        if (action.type === CLEAR_REQUESTS_CACHE) {\n          if (action.actionTypes.length === 0) {\n            cacheMap.clear();\n          } else {\n            action.actionTypes.forEach(function (actionType) {\n              return cacheMap.delete(actionType);\n            });\n          }\n\n          return null;\n        }\n\n        if (isRequestAction(action) && action.meta && action.meta.cache) {\n          var cacheKey = getCacheKey(action);\n          var cacheValue = cacheMap.get(cacheKey);\n\n          if (cacheValue && isCacheValid(cacheValue)) {\n            return next(_extends({}, action, {\n              meta: _extends({}, action.meta, {\n                cacheResponse: cacheValue.response\n              })\n            }));\n          } else if (cacheValue && !isCacheValid(cacheValue)) {\n            cacheMap.delete(cacheKey);\n          }\n        } else if (isSuccessAction(action) && action.meta && action.meta.cache && !action.meta.cacheResponse) {\n          var requestAction = getRequestActionFromResponse(action);\n\n          if (action.meta.cacheKey && action.meta.cacheSize) {\n            var currentCacheKeys = Array.from(cacheMap.keys()).filter(function (k) {\n              return k.startsWith(requestAction.type);\n            });\n\n            if (action.meta.cacheSize === currentCacheKeys.length) {\n              cacheMap.delete(currentCacheKeys[0]);\n            }\n          }\n\n          cacheMap.set(getCacheKey(requestAction), {\n            response: getActionPayload(action).response,\n            expiring: getNewCacheTimeout(action.meta.cache)\n          });\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\nexport var serverRequestsFilterMiddleware = function serverRequestsFilterMiddleware(_ref2) {\n  var serverRequestActions = _ref2.serverRequestActions;\n  var actionsToBeIgnored = serverRequestActions.slice();\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (!isRequestAction(action)) {\n          return next(action);\n        }\n\n        var actionToBeIgnoredIndex = actionsToBeIgnored.findIndex(function (a) {\n          return a.type === action.type;\n        });\n\n        if (actionToBeIgnoredIndex === -1) {\n          return next(action);\n        }\n\n        actionsToBeIgnored.splice(actionToBeIgnoredIndex, 1);\n        return null;\n      };\n    };\n  };\n};"]},"metadata":{},"sourceType":"module"}