{"ast":null,"code":"import produce from 'immer';\nimport { createSelector } from 'reselect';\nimport actionTypes from '../../../actions/types';\n\nconst reducer = (state = {}, action) => {\n  const {\n    type,\n    taskStatus,\n    groupBy,\n    status,\n    value,\n    filter,\n    subGroup\n  } = action;\n  return produce(state, draft => {\n    var _draft$list;\n\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.LIST.CLEAR:\n        delete draft.list;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.REQUEST:\n        if (!draft.list) {\n          draft.list = {};\n        }\n\n        if (!draft.list[groupBy]) {\n          draft.list[groupBy] = {};\n        }\n\n        if (groupBy === 'Status' && subGroup !== '') {\n          draft.list[groupBy].taskStatus = subGroup;\n        } else {\n          draft.list[groupBy].taskStatus = '';\n        }\n\n        draft.list[groupBy].subGroup = subGroup;\n        draft.list[groupBy].status = 'requested';\n        draft.list[groupBy].filter = {};\n        draft.list[groupBy].pageNo = 0;\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].count = {};\n        draft.list[groupBy].list = [];\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.UPDATE_TASK_STATUS:\n        draft.list[groupBy].taskStatus = taskStatus;\n        draft.list[groupBy].status = 'requested';\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].pageNo = 0;\n        draft.list[groupBy].list = [];\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.SET_FILTER:\n        draft.list[groupBy].filter = filter;\n        draft.list[groupBy].status = 'requested';\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].list = [];\n        draft.list[groupBy].count = {};\n        draft.list[groupBy].pageNo = 0;\n        delete draft.list[groupBy].selectedItem;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.SET_TASK_STATUS:\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.RECEIVED:\n        if (draft.list[groupBy]) {\n          if (!draft.list[groupBy].list) {\n            draft.list[groupBy].list = [];\n          }\n\n          draft.list[groupBy].list = draft.list[groupBy].list.concat(value);\n          draft.list[groupBy].status = 'received';\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.COUNT_RECEIVED:\n        if (draft.list[groupBy]) {\n          draft.list[groupBy].count = value;\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.REFRESH:\n        if (!draft.list) {\n          draft.list = {};\n        }\n\n        if (!draft.list[groupBy]) {\n          draft.list[groupBy] = {};\n        }\n\n        draft.list[groupBy].status = 'requested';\n        draft.list[groupBy].pageNo = 0;\n        draft.list[groupBy].list = [];\n        delete draft.list[groupBy].selectedItem;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.REQUEST_NEXT_PAGE:\n        if (draft.list[groupBy]) {\n          var _draft$list$groupBy;\n\n          draft.list[groupBy].pageNo = ((draft === null || draft === void 0 ? void 0 : (_draft$list$groupBy = draft.list[groupBy]) === null || _draft$list$groupBy === void 0 ? void 0 : _draft$list$groupBy.pageNo) || 0) + 1;\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.TOGGLE_ITEM_SELECTION:\n        if (draft === null || draft === void 0 ? void 0 : (_draft$list = draft.list) === null || _draft$list === void 0 ? void 0 : _draft$list[groupBy]) {\n          var _draft$list$groupBy2;\n\n          if (!((_draft$list$groupBy2 = draft.list[groupBy]) === null || _draft$list$groupBy2 === void 0 ? void 0 : _draft$list$groupBy2.selectedItem)) {\n            draft.list[groupBy].selectedItem = [];\n          }\n\n          if (draft.list[groupBy].selectedItem.findIndex(i => i === value) !== -1) {\n            draft.list[groupBy].selectedItem = draft.list[groupBy].selectedItem.filter(i => i !== value);\n          } else {\n            draft.list[groupBy].selectedItem.push(value);\n          }\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.RECEIVED_ACTIONS:\n        if (!draft.listActions) {\n          draft.listActions = {};\n        }\n\n        if (!draft.listActions[status]) {\n          draft.listActions[status] = {};\n        }\n\n        draft.listActions[status] = value;\n        break;\n\n      default:\n    }\n  });\n};\n\nexport default reducer;\nconst emptyObj = {};\nconst emptySet = [];\nexport const selectors = {};\n\nselectors.workRequestListObj = (state, groupBy) => {\n  var _state$list;\n\n  return (state === null || state === void 0 ? void 0 : (_state$list = state.list) === null || _state$list === void 0 ? void 0 : _state$list[groupBy]) || emptyObj;\n};\n\nselectors.workRequestStatusCount = (state, groupBy) => {\n  var _state$list2, _state$list2$groupBy, _state$list$groupBy$c, _state$list$groupBy$c2;\n\n  const taskStatus = (state === null || state === void 0 ? void 0 : (_state$list2 = state.list) === null || _state$list2 === void 0 ? void 0 : (_state$list2$groupBy = _state$list2[groupBy]) === null || _state$list2$groupBy === void 0 ? void 0 : _state$list2$groupBy.taskStatus) || '';\n\n  if (!taskStatus) {\n    return 0;\n  }\n\n  const item = (_state$list$groupBy$c = state.list[groupBy].count) === null || _state$list$groupBy$c === void 0 ? void 0 : (_state$list$groupBy$c2 = _state$list$groupBy$c.workrequestcount) === null || _state$list$groupBy$c2 === void 0 ? void 0 : _state$list$groupBy$c2.find(i => i.hdn_card_code === taskStatus);\n  return (item === null || item === void 0 ? void 0 : item.tabvalue) || 0;\n}; // selectors.workRequestListActions = (state, status) => {\n//   return state?.listActions?.[status] || emptySet\n// }\n\n\nselectors.workRequestListActions = createSelector((state, status) => {\n  var _state$listActions;\n\n  return (state === null || state === void 0 ? void 0 : (_state$listActions = state.listActions) === null || _state$listActions === void 0 ? void 0 : _state$listActions[status]) || emptySet;\n}, actions => {\n  return actions.map(act => ({\n    id: act.AllowedActionCode,\n    label: act.AllowedActionDesc\n  }));\n});\n\nselectors.workRequestListFilter = (state, groupBy) => {\n  var _state$list3, _state$list3$groupBy;\n\n  return (state === null || state === void 0 ? void 0 : (_state$list3 = state.list) === null || _state$list3 === void 0 ? void 0 : (_state$list3$groupBy = _state$list3[groupBy]) === null || _state$list3$groupBy === void 0 ? void 0 : _state$list3$groupBy.filter) || emptyObj;\n}; // selectors.workRequestList = (state, groupBy) => {\n//   const status = selectors.workRequestActiveTab(state, groupBy);\n//   return state?.list?.[groupBy]?.[status] || emptyObj;\n// }\n\n\nselectors.previousWorkRequestId = (state, groupBy, WoReqNo) => {\n  var _state$list4, _state$list4$groupBy;\n\n  const workflows = (state === null || state === void 0 ? void 0 : (_state$list4 = state.list) === null || _state$list4 === void 0 ? void 0 : (_state$list4$groupBy = _state$list4[groupBy]) === null || _state$list4$groupBy === void 0 ? void 0 : _state$list4$groupBy.list) || [];\n  const currentWorkflowIndex = workflows.findIndex(workflow => workflow.workrequestNoout === WoReqNo);\n\n  if (currentWorkflowIndex > 0) {\n    return workflows[currentWorkflowIndex - 1].workrequestNoout;\n  }\n\n  return undefined;\n};\n\nselectors.nextWorkRequestId = (state, groupBy, WoReqNo) => {\n  var _state$list5, _state$list5$groupBy;\n\n  const workflows = (state === null || state === void 0 ? void 0 : (_state$list5 = state.list) === null || _state$list5 === void 0 ? void 0 : (_state$list5$groupBy = _state$list5[groupBy]) === null || _state$list5$groupBy === void 0 ? void 0 : _state$list5$groupBy.list) || [];\n  const currentWorkflowIndex = workflows.findIndex(workflow => workflow.workrequestNoout === WoReqNo);\n\n  if (currentWorkflowIndex !== -1 && currentWorkflowIndex < workflows.length - 1) {\n    return workflows[currentWorkflowIndex + 1].workrequestNoout;\n  }\n\n  return undefined;\n};\n\nselectors.isWRItemSelected = (state, groupBy, WoReqNo) => {\n  var _state$list6, _state$list6$groupBy, _state$list6$groupBy$, _state$list7, _state$list7$groupBy, _state$list7$groupBy$;\n\n  if ((state === null || state === void 0 ? void 0 : (_state$list6 = state.list) === null || _state$list6 === void 0 ? void 0 : (_state$list6$groupBy = _state$list6[groupBy]) === null || _state$list6$groupBy === void 0 ? void 0 : (_state$list6$groupBy$ = _state$list6$groupBy.selectedItem) === null || _state$list6$groupBy$ === void 0 ? void 0 : _state$list6$groupBy$.length) && (state === null || state === void 0 ? void 0 : (_state$list7 = state.list) === null || _state$list7 === void 0 ? void 0 : (_state$list7$groupBy = _state$list7[groupBy]) === null || _state$list7$groupBy === void 0 ? void 0 : (_state$list7$groupBy$ = _state$list7$groupBy.selectedItem) === null || _state$list7$groupBy$ === void 0 ? void 0 : _state$list7$groupBy$.findIndex(i => i === WoReqNo)) !== -1) {\n    return true;\n  }\n\n  return false;\n};\n\nselectors.isAnyWRItemSelected = (state, groupBy, WoReqNo) => {\n  var _state$list8, _state$list8$groupBy, _state$list8$groupBy$;\n\n  return !!(state === null || state === void 0 ? void 0 : (_state$list8 = state.list) === null || _state$list8 === void 0 ? void 0 : (_state$list8$groupBy = _state$list8[groupBy]) === null || _state$list8$groupBy === void 0 ? void 0 : (_state$list8$groupBy$ = _state$list8$groupBy.selectedItem) === null || _state$list8$groupBy$ === void 0 ? void 0 : _state$list8$groupBy$.length);\n};\n\nselectors.allWRItemSelected = (state, groupBy) => {\n  var _state$list9, _state$list9$groupBy;\n\n  return (state === null || state === void 0 ? void 0 : (_state$list9 = state.list) === null || _state$list9 === void 0 ? void 0 : (_state$list9$groupBy = _state$list9[groupBy]) === null || _state$list9$groupBy === void 0 ? void 0 : _state$list9$groupBy.selectedItem) || emptySet;\n}; // selectors.workRequestListFilter = (state, groupBy) => {\n//   const status = selectors.workRequestActiveTab(state, groupBy);\n//   return state?.list?.[groupBy]?.[status]?.filter || emptyObj;\n// }","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/workRequestV2/List/index.js"],"names":["produce","createSelector","actionTypes","reducer","state","action","type","taskStatus","groupBy","status","value","filter","subGroup","draft","WORK_REQUEST_V2","LIST","CLEAR","list","REQUEST","pageNo","selectedItem","count","UPDATE_TASK_STATUS","SET_FILTER","SET_TASK_STATUS","RECEIVED","concat","COUNT_RECEIVED","REFRESH","REQUEST_NEXT_PAGE","TOGGLE_ITEM_SELECTION","findIndex","i","push","RECEIVED_ACTIONS","listActions","emptyObj","emptySet","selectors","workRequestListObj","workRequestStatusCount","item","workrequestcount","find","hdn_card_code","tabvalue","workRequestListActions","actions","map","act","id","AllowedActionCode","label","AllowedActionDesc","workRequestListFilter","previousWorkRequestId","WoReqNo","workflows","currentWorkflowIndex","workflow","workrequestNoout","undefined","nextWorkRequestId","length","isWRItemSelected","isAnyWRItemSelected","allWRItemSelected"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport { createSelector } from 'reselect';\nimport actionTypes from '../../../actions/types';\n\nconst reducer = (state = {}, action) => {\n  const { type, taskStatus, groupBy, status, value, filter, subGroup } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.LIST.CLEAR:\n        delete draft.list;\n        break;\n      case actionTypes.WORK_REQUEST_V2.LIST.REQUEST:\n        if (!draft.list) {\n          draft.list = {}\n        }\n        if (!draft.list[groupBy]) {\n          draft.list[groupBy] = {};\n        }\n        if (groupBy === 'Status' && subGroup !== '') {\n          draft.list[groupBy].taskStatus = subGroup;\n        }\n        else {\n          draft.list[groupBy].taskStatus = '';\n        }\n        draft.list[groupBy].subGroup = subGroup;\n        draft.list[groupBy].status = 'requested';\n        draft.list[groupBy].filter = {};\n        draft.list[groupBy].pageNo = 0;\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].count = {};\n        draft.list[groupBy].list = [];\n        break;\n      case actionTypes.WORK_REQUEST_V2.LIST.UPDATE_TASK_STATUS:\n        draft.list[groupBy].taskStatus = taskStatus;\n        draft.list[groupBy].status = 'requested';\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].pageNo = 0;\n        draft.list[groupBy].list = [];\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.SET_FILTER:\n        draft.list[groupBy].filter = filter\n        draft.list[groupBy].status = 'requested'\n        delete draft.list[groupBy].selectedItem;\n        draft.list[groupBy].list = [];\n        draft.list[groupBy].count = {};\n        draft.list[groupBy].pageNo = 0;\n        delete draft.list[groupBy].selectedItem;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.SET_TASK_STATUS:\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.RECEIVED:\n        if (draft.list[groupBy]) {\n          if (!draft.list[groupBy].list) {\n            draft.list[groupBy].list = []\n          }\n          draft.list[groupBy].list = draft.list[groupBy].list.concat(value);\n          draft.list[groupBy].status = 'received'\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.LIST.COUNT_RECEIVED:\n        if (draft.list[groupBy]) {\n          draft.list[groupBy].count = value;\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.LIST.REFRESH:\n        if (!draft.list) {\n          draft.list = {};\n        }\n        if (!draft.list[groupBy]) {\n          draft.list[groupBy] = {}\n        }\n        draft.list[groupBy].status = 'requested';\n        draft.list[groupBy].pageNo = 0;\n        draft.list[groupBy].list = [];\n        delete draft.list[groupBy].selectedItem;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.REQUEST_NEXT_PAGE:\n        if (draft.list[groupBy]) {\n          draft.list[groupBy].pageNo = (draft?.list[groupBy]?.pageNo || 0) + 1;\n        }\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.LIST.TOGGLE_ITEM_SELECTION:\n        if (draft?.list?.[groupBy]) {\n          if (!draft.list[groupBy]?.selectedItem) {\n            draft.list[groupBy].selectedItem = [];\n          }\n          if (draft.list[groupBy].selectedItem.findIndex(i => i === value) !== -1) {\n            draft.list[groupBy].selectedItem = draft.list[groupBy].selectedItem.filter(i => i !== value);\n          } else {\n            draft.list[groupBy].selectedItem.push(value);\n          }\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.LIST.RECEIVED_ACTIONS:\n        if (!draft.listActions) {\n          draft.listActions = {};\n        }\n        if (!draft.listActions[status]) {\n          draft.listActions[status] = {};\n        }\n        draft.listActions[status] = value;\n\n        break;\n      default:\n    }\n  })\n}\n\nexport default reducer;\nconst emptyObj = {};\nconst emptySet = [];\nexport const selectors = {};\n\n\nselectors.workRequestListObj = (state, groupBy) => {\n  return state?.list?.[groupBy] || emptyObj;\n}\n\nselectors.workRequestStatusCount = (state, groupBy) => {\n  const taskStatus = state?.list?.[groupBy]?.taskStatus || '';\n  if (!taskStatus) {\n    return 0;\n  }\n  const item = state.list[groupBy].count?.workrequestcount?.find(i => i.hdn_card_code === taskStatus)\n  return item?.tabvalue || 0;\n}\n\n// selectors.workRequestListActions = (state, status) => {\n//   return state?.listActions?.[status] || emptySet\n// }\n\nselectors.workRequestListActions = createSelector(\n  (state, status) => state?.listActions?.[status] || emptySet,\n  (actions) => {\n    return actions.map(act => ({ id: act.AllowedActionCode, label: act.AllowedActionDesc }))\n  }\n);\nselectors.workRequestListFilter = (state, groupBy) => {\n  return state?.list?.[groupBy]?.filter || emptyObj;\n}\n\n\n\n// selectors.workRequestList = (state, groupBy) => {\n//   const status = selectors.workRequestActiveTab(state, groupBy);\n//   return state?.list?.[groupBy]?.[status] || emptyObj;\n// }\n\n\nselectors.previousWorkRequestId = (state, groupBy, WoReqNo) => {\n  const workflows = state?.list?.[groupBy]?.list || []\n  const currentWorkflowIndex = workflows.findIndex(workflow => workflow.workrequestNoout === WoReqNo);\n  if (currentWorkflowIndex > 0) {\n    return workflows[currentWorkflowIndex - 1].workrequestNoout;\n  }\n  return undefined;\n}\nselectors.nextWorkRequestId = (state, groupBy, WoReqNo) => {\n  const workflows = state?.list?.[groupBy]?.list || []\n  const currentWorkflowIndex = workflows.findIndex(workflow => workflow.workrequestNoout === WoReqNo);\n  if (currentWorkflowIndex !== -1 && currentWorkflowIndex < (workflows.length - 1)) {\n    return workflows[currentWorkflowIndex + 1].workrequestNoout;\n  }\n  return undefined;\n}\n\n\nselectors.isWRItemSelected = (state, groupBy, WoReqNo) => {\n  if (state?.list?.[groupBy]?.selectedItem?.length && state?.list?.[groupBy]?.selectedItem?.findIndex(i => i === WoReqNo) !== -1){\n    return true;\n  }\n  return false;\n}\nselectors.isAnyWRItemSelected = (state, groupBy, WoReqNo) => {\n  return !!state?.list?.[groupBy]?.selectedItem?.length;\n}\nselectors.allWRItemSelected = (state, groupBy) => {\n  return state?.list?.[groupBy]?.selectedItem || emptySet;\n}\n\n\n\n// selectors.workRequestListFilter = (state, groupBy) => {\n//   const status = selectors.workRequestActiveTab(state, groupBy);\n//   return state?.list?.[groupBy]?.[status]?.filter || emptyObj;\n// }"]},"metadata":{},"sourceType":"module"}