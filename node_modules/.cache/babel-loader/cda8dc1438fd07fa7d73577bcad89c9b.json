{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMText/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport clsx from 'clsx';\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  fieldsetContainer: {\n    border: props => props.isReadOnly ? '0px' : \"1px solid #E9EBEF\"\n  },\n  text: {\n    paddingLeft: 4,\n    marginTop: 4,\n    marginBottom: 8,\n    width: '100%',\n    '& > div > fieldset': {\n      borderColor: 'transparent !important'\n    }\n  },\n  input: {\n    '& > div:after': {\n      borderBottom: 0\n    },\n    '& > div > input': {\n      fontSize: 13,\n      fontWeight: 500,\n      color: '#33415C'\n    }\n  },\n  endSeperation: {\n    borderLeft: '1px solid #C9CDD6',\n    paddingLeft: 12,\n    color: '#7D8597',\n    fontSize: 13,\n    fontWeight: 'bold'\n  }\n});\nexport default function EAMText(props) {\n  _s();\n\n  const {\n    id,\n    title,\n    onFieldChange = () => {},\n    value = '',\n    className,\n    isReadOnly,\n    unit = '',\n    ...others\n  } = props;\n  const classes = useStyles(props);\n\n  const handleChange = event => {\n    onFieldChange(id, event.target.value);\n  };\n\n  const showUnit = ('unit' in props);\n  return /*#__PURE__*/_jsxDEV(FormBoxControl, {\n    title: title,\n    className: classes.fieldsetContainer,\n    hideBorder: isReadOnly,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: clsx(classes.text, className),\n      InputProps: {\n        readOnly: isReadOnly,\n        endAdornment: showUnit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.endSeperation,\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : null\n      },\n      classes: {\n        root: classes.input\n      },\n      value: value,\n      onChange: handleChange,\n      ...others\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EAMText, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EAMText;\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMText\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMText/index.jsx"],"names":["TextField","makeStyles","clsx","FormBoxControl","useStyles","fieldsetContainer","border","props","isReadOnly","text","paddingLeft","marginTop","marginBottom","width","borderColor","input","borderBottom","fontSize","fontWeight","color","endSeperation","borderLeft","EAMText","id","title","onFieldChange","value","className","unit","others","classes","handleChange","event","target","showUnit","readOnly","endAdornment","root"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,MAAM,EAAEC,KAAK,IAAIA,KAAK,CAACC,UAAN,GAAmB,KAAnB,GAA2B;AAD3B,GADQ;AAI3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,CADT;AAEJC,IAAAA,SAAS,EAAE,CAFP;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJ,0BAAsB;AACpBC,MAAAA,WAAW,EAAE;AADO;AALlB,GAJqB;AAa3BC,EAAAA,KAAK,EAAE;AACL,qBAAiB;AACfC,MAAAA,YAAY,EAAE;AADC,KADZ;AAIL,uBAAmB;AACjBC,MAAAA,QAAQ,EAAE,EADO;AAEjBC,MAAAA,UAAU,EAAE,GAFK;AAGjBC,MAAAA,KAAK,EAAE;AAHU;AAJd,GAboB;AAuB3BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE,mBADC;AAEbX,IAAAA,WAAW,EAAE,EAFA;AAGbS,IAAAA,KAAK,EAAE,SAHM;AAIbF,IAAAA,QAAQ,EAAE,EAJG;AAKbC,IAAAA,UAAU,EAAE;AALC;AAvBY,CAAD,CAA5B;AA+BA,eAAe,SAASI,OAAT,CAAiBf,KAAjB,EAAwB;AAAA;;AACrC,QAAM;AAAEgB,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,aAAa,GAAG,MAAM,CAAG,CAAtC;AAAwCC,IAAAA,KAAK,GAAG,EAAhD;AAAoDC,IAAAA,SAApD;AAA+DnB,IAAAA,UAA/D;AAA2EoB,IAAAA,IAAI,GAAG,EAAlF;AAAsF,OAAGC;AAAzF,MAAoGtB,KAA1G;AACA,QAAMuB,OAAO,GAAG1B,SAAS,CAACG,KAAD,CAAzB;;AACA,QAAMwB,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,aAAa,CAACF,EAAD,EAAKS,KAAK,CAACC,MAAN,CAAaP,KAAlB,CAAb;AACD,GAFD;;AAGA,QAAMQ,QAAQ,IAAG,UAAU3B,KAAb,CAAd;AACA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEiB,KADT;AAEE,IAAA,SAAS,EAAEM,OAAO,CAACzB,iBAFrB;AAGE,IAAA,UAAU,EAAEG,UAHd;AAAA,4BAKE,QAAC,SAAD;AACE,MAAA,SAAS,EAAEN,IAAI,CAAC4B,OAAO,CAACrB,IAAT,EAAekB,SAAf,CADjB;AAEE,MAAA,UAAU,EAAE;AACVQ,QAAAA,QAAQ,EAAE3B,UADA;AAEV4B,QAAAA,YAAY,EAAEF,QAAQ,gBACpB;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACV,aAAxB;AAAA,oBAAwCQ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADoB,GAElB;AAJM,OAFd;AAQE,MAAA,OAAO,EAAE;AACPS,QAAAA,IAAI,EAAEP,OAAO,CAACf;AADP,OARX;AAWE,MAAA,KAAK,EAAEW,KAXT;AAYE,MAAA,QAAQ,EAAEK,YAZZ;AAAA,SAaMF;AAbN;AAAA;AAAA;AAAA;AAAA,YALF,eAoBE;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA/BuBP,O;UAENlB,S;;;KAFMkB,O","sourcesContent":["import { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport clsx from 'clsx';\nimport FormBoxControl from \"../Form/FormBoxControl\";\n\nconst useStyles = makeStyles({\n  fieldsetContainer: {\n    border: props => props.isReadOnly ? '0px' : \"1px solid #E9EBEF\",\n  },\n  text: {\n    paddingLeft: 4,\n    marginTop: 4,\n    marginBottom: 8,\n    width: '100%',\n    '& > div > fieldset': {\n      borderColor: 'transparent !important',\n    }\n  },\n  input: {\n    '& > div:after': {\n      borderBottom: 0,\n    },\n    '& > div > input': {\n      fontSize: 13,\n      fontWeight: 500,\n      color: '#33415C',\n    }\n  },\n  endSeperation: {\n    borderLeft: '1px solid #C9CDD6',\n    paddingLeft: 12,\n    color: '#7D8597',\n    fontSize: 13,\n    fontWeight: 'bold',\n  }\n});\nexport default function EAMText(props) {\n  const { id, title, onFieldChange = () => { }, value = '', className, isReadOnly, unit = '', ...others } = props;\n  const classes = useStyles(props);\n  const handleChange = (event) => {\n    onFieldChange(id, event.target.value)\n  };\n  const showUnit = 'unit' in props;\n  return (\n    <FormBoxControl\n      title={title}\n      className={classes.fieldsetContainer}\n      hideBorder={isReadOnly}\n    >\n      <TextField\n        className={clsx(classes.text, className)}\n        InputProps={{\n          readOnly: isReadOnly,\n          endAdornment: showUnit ? (\n            <div className={classes.endSeperation}>{unit}</div>\n          ) : null\n        }}\n        classes={{\n          root: classes.input\n        }}\n        value={value}\n        onChange={handleChange}\n        {...others}\n      />\n      <div></div>\n    </FormBoxControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}