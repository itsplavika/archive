{"ast":null,"code":"export function createWorkflowRequest(workflow) {\n  let fileList = ``;\n  workflow.fileList.forEach(file => fileList += `\n    { filesIndividualRef: \"${file.filesIndividualRef}\", filesMainRef: \"${file.filesMainRef}\", ModeFlag: \"I\" },\n    `);\n  const query = `\n    mutation {\n      workRequest_postWrkReqCreation {\n        createWorkRequest(\n          workReqInfoInput: {\n            wrOn: \"${workflow.wrOn}\"\n            eqplocCode: \"${workflow.eqplocCode}\"\n            Guid: \"${workflow.Guid}\"\n            locationCode: \"${workflow.locationCode}\"\n            observationDate: \"${workflow.observationDate}\"\n            observationDetails: \"${workflow.observationDetails}\"\n            observationTime: \"${workflow.observationTime}\"\n            problemCode: \"${workflow.problemCode}\"\n            problemDesc: \"${workflow.problemDesc}\"\n            reportedByCode: \"${workflow.reportedByCode}\"\n            reportedByName: \"${workflow.reportedByName}\"\n            status: \"${workflow.status}\"\n            targetDate: \"${workflow.targetDate}\"\n            targetTime: \"${workflow.targetTime}\"\n            time: \"${workflow.time}\"\n            Timestamp: null\n            workGroup: \"${workflow.workGroup}\"\n            workPhone: \"${workflow.workPhone}\"\n            workrequestNo: \"${workflow.workrequestNo}\"\n            wrCategory: \"${workflow.wrCategory}\"\n            wrDesc: \"${workflow.wrDesc}\"\n            wrhdndate1: \"${workflow.wrhdndate1}\"\n            wrhdndate2: \"${workflow.wrhdndate2}\"\n            wrhdndate3: \"${workflow.wrhdndate3}\"\n            wrhdnint1: null\n            wrhdnint2: null\n            wrhdnint3: null\n            wrhdnnumeric1: null\n            wrhdnnumeric2: null\n            wrhdnnumeric3: null\n            wrhdnstring1: \"\"\n            wrhdnstring2: \"\"\n            wrhdnstring3: \"\"\n            wrhdnstring4: \"\"\n            wrhdnstring5: \"\"\n            wrPriority: \"${workflow.wrPriority}\"\n            wrType: \"${workflow.wrType}\"\n            Actionflag: \"${workflow.Actionflag}\"\n            autoclosedesc: \"${workflow.autoclosedesc}\"\n            autoCloseFlag: \"${workflow.autoCloseFlag}\"\n            date: \"${workflow.date}\"\n            equipmentCondition: \"${workflow.equipmentCondition}\"\n            fileList: [${fileList}]\n          }\n        ) {\n          data {\n            autoclosedesc\n            date\n            status\n            time\n            typedesc\n            Timestamp\n            prioritydesc\n            problemDesc\n            workgroupdesc\n            eqpconditiondesc\n            workrequestNo\n            wrondesc\n            Guid\n          }\n        }\n      }\n    }\n    `;\n  return query; // const query = {\n  //   // mutation:{\n  //     workRequest_postWrkReqCreation:{\n  //       createWorkRequest: {\n  //         __args:{\n  //             wrOn: workflow.wrOn,\n  //             eqplocCode: workflow.eqplocCode,\n  //           Guid: workflow.Guid,\n  //             locationCode: workflow.locationCode,\n  //             observationDate: workflow.observationDate,\n  //             observationDetails: workflow.observationDetails,\n  //             observationTime: workflow.observationTime,\n  //             problemCode: workflow.problemCode,\n  //             problemDesc: workflow.problemDesc,\n  //             reportedByCode: workflow.reportedByCode,\n  //             reportedByName: workflow.reportedByName,\n  //           status: workflow.status,\n  //             targetDate: workflow.targetDate,\n  //             targetTime: workflow.targetTime,\n  //           time: workflow.time,\n  //           Timestamp: workflow.Timestamp,\n  //             workGroup: workflow.workGroup,\n  //           workPhone: workflow.workPhone,\n  //           workrequestNo: workflow.workrequestNo,\n  //           wrCategory: workflow.wrCategory,\n  //           wrDesc: workflow.wrDesc,\n  //           wrhdndate1: workflow.wrhdndate1,\n  //           wrhdndate2: workflow.wrhdndate2,\n  //           wrhdndate3: workflow.wrhdndate3,\n  //           wrhdnint1: workflow.wrhdnint1,\n  //           wrhdnint2: workflow.wrhdnint2,\n  //           wrhdnint3: workflow.wrhdnint3,\n  //           wrhdnnumeric1: workflow.wrhdnnumeric1,\n  //           wrhdnnumeric2: workflow.wrhdnnumeric2,\n  //           wrhdnnumeric3: workflow.wrhdnnumeric3,\n  //           wrhdnstring1: workflow.wrhdnstring1,\n  //           wrhdnstring2: workflow.wrhdnstring2,\n  //           wrhdnstring3: workflow.wrhdnstring3,\n  //           wrhdnstring4: workflow.wrhdnstring4,\n  //           wrhdnstring5: workflow.wrhdnstring5,\n  //           wrPriority: workflow.wrPriority,\n  //           wrType: workflow.wrType,\n  //           Actionflag: workflow.Actionflag,\n  //           autoclosedesc: workflow.autoclosedesc,\n  //             autoCloseFlag: workflow.autoCloseFlag,\n  //             date: workflow.date,\n  //           equipmentCondition: workflow.equipmentCondition,\n  //           fileList: workflow.fileList\n  //           // [\n  //           //   { filesIndividualRef: \"\", filesMainRef: \"\" },\n  //           //   { filesIndividualRef: \"\", filesMainRef: \"\" }\n  //           // ]\n  //         },\n  //         data: {\n  //           autoclosedesc: true,\n  //           date: true,\n  //           status: true,\n  //           time: true,\n  //           typedesc: true,\n  //           Timestamp: true,\n  //           prioritydesc: true,\n  //           problemDesc: true,\n  //           workgroupdesc: true,\n  //           eqpconditiondesc: true,\n  //           workrequestNo: true,\n  //           wrondesc: true,\n  //           Guid: true,\n  //         }\n  //       }\n  //     }\n  //   // }\n  // }\n  // return jsonToGraphQLQuery({'':query}, { pretty: true });\n}","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/queries/workRequest/createWorkflowRequest.js"],"names":["createWorkflowRequest","workflow","fileList","forEach","file","filesIndividualRef","filesMainRef","query","wrOn","eqplocCode","Guid","locationCode","observationDate","observationDetails","observationTime","problemCode","problemDesc","reportedByCode","reportedByName","status","targetDate","targetTime","time","workGroup","workPhone","workrequestNo","wrCategory","wrDesc","wrhdndate1","wrhdndate2","wrhdndate3","wrPriority","wrType","Actionflag","autoclosedesc","autoCloseFlag","date","equipmentCondition"],"mappings":"AACA,OAAO,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AAC9C,MAAIC,QAAQ,GAAI,EAAhB;AACAD,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,OAAlB,CAA0BC,IAAI,IAC5BF,QAAQ,IAAK;AACjB,6BAA6BE,IAAI,CAACC,kBAAmB,qBAAoBD,IAAI,CAACE,YAAa;AAC3F,KAHE;AAKE,QAAMC,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA,qBAAqBN,QAAQ,CAACO,IAAK;AACnC,2BAA2BP,QAAQ,CAACQ,UAAW;AAC/C,qBAAqBR,QAAQ,CAACS,IAAK;AACnC,6BAA6BT,QAAQ,CAACU,YAAa;AACnD,gCAAgCV,QAAQ,CAACW,eAAgB;AACzD,mCAAmCX,QAAQ,CAACY,kBAAmB;AAC/D,gCAAgCZ,QAAQ,CAACa,eAAgB;AACzD,4BAA4Bb,QAAQ,CAACc,WAAY;AACjD,4BAA4Bd,QAAQ,CAACe,WAAY;AACjD,+BAA+Bf,QAAQ,CAACgB,cAAe;AACvD,+BAA+BhB,QAAQ,CAACiB,cAAe;AACvD,uBAAuBjB,QAAQ,CAACkB,MAAO;AACvC,2BAA2BlB,QAAQ,CAACmB,UAAW;AAC/C,2BAA2BnB,QAAQ,CAACoB,UAAW;AAC/C,qBAAqBpB,QAAQ,CAACqB,IAAK;AACnC;AACA,0BAA0BrB,QAAQ,CAACsB,SAAU;AAC7C,0BAA0BtB,QAAQ,CAACuB,SAAU;AAC7C,8BAA8BvB,QAAQ,CAACwB,aAAc;AACrD,2BAA2BxB,QAAQ,CAACyB,UAAW;AAC/C,uBAAuBzB,QAAQ,CAAC0B,MAAO;AACvC,2BAA2B1B,QAAQ,CAAC2B,UAAW;AAC/C,2BAA2B3B,QAAQ,CAAC4B,UAAW;AAC/C,2BAA2B5B,QAAQ,CAAC6B,UAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B7B,QAAQ,CAAC8B,UAAW;AAC/C,uBAAuB9B,QAAQ,CAAC+B,MAAO;AACvC,2BAA2B/B,QAAQ,CAACgC,UAAW;AAC/C,8BAA8BhC,QAAQ,CAACiC,aAAc;AACrD,8BAA8BjC,QAAQ,CAACkC,aAAc;AACrD,qBAAqBlC,QAAQ,CAACmC,IAAK;AACnC,mCAAmCnC,QAAQ,CAACoC,kBAAmB;AAC/D,yBAAyBnC,QAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KApEI;AAqEA,SAAOK,KAAP,CA5E4C,CA6E5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["\nexport function createWorkflowRequest(workflow) {\n  let fileList = ``\n  workflow.fileList.forEach(file => (\n    fileList += `\n    { filesIndividualRef: \"${file.filesIndividualRef}\", filesMainRef: \"${file.filesMainRef}\", ModeFlag: \"I\" },\n    `\n  ))\n    const query = `\n    mutation {\n      workRequest_postWrkReqCreation {\n        createWorkRequest(\n          workReqInfoInput: {\n            wrOn: \"${workflow.wrOn}\"\n            eqplocCode: \"${workflow.eqplocCode}\"\n            Guid: \"${workflow.Guid}\"\n            locationCode: \"${workflow.locationCode}\"\n            observationDate: \"${workflow.observationDate}\"\n            observationDetails: \"${workflow.observationDetails}\"\n            observationTime: \"${workflow.observationTime}\"\n            problemCode: \"${workflow.problemCode}\"\n            problemDesc: \"${workflow.problemDesc}\"\n            reportedByCode: \"${workflow.reportedByCode}\"\n            reportedByName: \"${workflow.reportedByName}\"\n            status: \"${workflow.status}\"\n            targetDate: \"${workflow.targetDate}\"\n            targetTime: \"${workflow.targetTime}\"\n            time: \"${workflow.time}\"\n            Timestamp: null\n            workGroup: \"${workflow.workGroup}\"\n            workPhone: \"${workflow.workPhone}\"\n            workrequestNo: \"${workflow.workrequestNo}\"\n            wrCategory: \"${workflow.wrCategory}\"\n            wrDesc: \"${workflow.wrDesc}\"\n            wrhdndate1: \"${workflow.wrhdndate1}\"\n            wrhdndate2: \"${workflow.wrhdndate2}\"\n            wrhdndate3: \"${workflow.wrhdndate3}\"\n            wrhdnint1: null\n            wrhdnint2: null\n            wrhdnint3: null\n            wrhdnnumeric1: null\n            wrhdnnumeric2: null\n            wrhdnnumeric3: null\n            wrhdnstring1: \"\"\n            wrhdnstring2: \"\"\n            wrhdnstring3: \"\"\n            wrhdnstring4: \"\"\n            wrhdnstring5: \"\"\n            wrPriority: \"${workflow.wrPriority}\"\n            wrType: \"${workflow.wrType}\"\n            Actionflag: \"${workflow.Actionflag}\"\n            autoclosedesc: \"${workflow.autoclosedesc}\"\n            autoCloseFlag: \"${workflow.autoCloseFlag}\"\n            date: \"${workflow.date}\"\n            equipmentCondition: \"${workflow.equipmentCondition}\"\n            fileList: [${fileList}]\n          }\n        ) {\n          data {\n            autoclosedesc\n            date\n            status\n            time\n            typedesc\n            Timestamp\n            prioritydesc\n            problemDesc\n            workgroupdesc\n            eqpconditiondesc\n            workrequestNo\n            wrondesc\n            Guid\n          }\n        }\n      }\n    }\n    `\n    return query;\n    // const query = {\n    //   // mutation:{\n    //     workRequest_postWrkReqCreation:{\n    //       createWorkRequest: {\n    //         __args:{\n    //             wrOn: workflow.wrOn,\n    //             eqplocCode: workflow.eqplocCode,\n    //           Guid: workflow.Guid,\n    //             locationCode: workflow.locationCode,\n    //             observationDate: workflow.observationDate,\n    //             observationDetails: workflow.observationDetails,\n    //             observationTime: workflow.observationTime,\n    //             problemCode: workflow.problemCode,\n    //             problemDesc: workflow.problemDesc,\n    //             reportedByCode: workflow.reportedByCode,\n    //             reportedByName: workflow.reportedByName,\n    //           status: workflow.status,\n    //             targetDate: workflow.targetDate,\n    //             targetTime: workflow.targetTime,\n    //           time: workflow.time,\n    //           Timestamp: workflow.Timestamp,\n    //             workGroup: workflow.workGroup,\n    //           workPhone: workflow.workPhone,\n    //           workrequestNo: workflow.workrequestNo,\n    //           wrCategory: workflow.wrCategory,\n    //           wrDesc: workflow.wrDesc,\n    //           wrhdndate1: workflow.wrhdndate1,\n    //           wrhdndate2: workflow.wrhdndate2,\n    //           wrhdndate3: workflow.wrhdndate3,\n    //           wrhdnint1: workflow.wrhdnint1,\n    //           wrhdnint2: workflow.wrhdnint2,\n    //           wrhdnint3: workflow.wrhdnint3,\n    //           wrhdnnumeric1: workflow.wrhdnnumeric1,\n    //           wrhdnnumeric2: workflow.wrhdnnumeric2,\n    //           wrhdnnumeric3: workflow.wrhdnnumeric3,\n    //           wrhdnstring1: workflow.wrhdnstring1,\n    //           wrhdnstring2: workflow.wrhdnstring2,\n    //           wrhdnstring3: workflow.wrhdnstring3,\n    //           wrhdnstring4: workflow.wrhdnstring4,\n    //           wrhdnstring5: workflow.wrhdnstring5,\n    //           wrPriority: workflow.wrPriority,\n    //           wrType: workflow.wrType,\n    //           Actionflag: workflow.Actionflag,\n    //           autoclosedesc: workflow.autoclosedesc,\n    //             autoCloseFlag: workflow.autoCloseFlag,\n    //             date: workflow.date,\n    //           equipmentCondition: workflow.equipmentCondition,\n    //           fileList: workflow.fileList\n    //           // [\n    //           //   { filesIndividualRef: \"\", filesMainRef: \"\" },\n    //           //   { filesIndividualRef: \"\", filesMainRef: \"\" }\n    //           // ]\n    //         },\n    //         data: {\n    //           autoclosedesc: true,\n    //           date: true,\n    //           status: true,\n    //           time: true,\n    //           typedesc: true,\n    //           Timestamp: true,\n    //           prioritydesc: true,\n    //           problemDesc: true,\n    //           workgroupdesc: true,\n    //           eqpconditiondesc: true,\n    //           workrequestNo: true,\n    //           wrondesc: true,\n    //           Guid: true,\n    //         }\n    //       }\n    //     }\n    //   // }\n    // }\n    // return jsonToGraphQLQuery({'':query}, { pretty: true });\n  }\n\n"]},"metadata":{},"sourceType":"module"}