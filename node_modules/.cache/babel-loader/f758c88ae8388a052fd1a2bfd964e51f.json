{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Manage/Attachments/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../../../actions\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../../../../reducers\";\nimport { shallowEqual } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nimport { useCallback } from \"react\";\nimport AttachmentsV2 from \"../../../../components/AttachmentsV2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptySet = [];\nexport default function WorkRequestAttachments({\n  slideView\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const allFiles = useSelector(state => {\n    var _selectors$workflow;\n\n    const {\n      fileList\n    } = ((_selectors$workflow = selectors.workflow(state)) === null || _selectors$workflow === void 0 ? void 0 : _selectors$workflow.value) || [];\n    return fileList || emptySet;\n  }, shallowEqual);\n  const filesUploadedToServer = useMemo(() => {\n    return allFiles.filter(i => i.status === 'UPLOADING' || i.status === 'UPLOADED');\n  }, [allFiles]);\n  const handleUpload = useCallback(file => {\n    dispatch(actions.workflow.update.addAttachment(file));\n  }, [dispatch]);\n  const handleDelete = useCallback(fileId => {\n    dispatch(actions.workflow.update.removeAttachment(fileId));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AttachmentsV2, {\n    files: filesUploadedToServer,\n    onUpload: handleUpload,\n    slideView: slideView,\n    onDelete: handleDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkRequestAttachments, \"PCWRSCMFVRymvdrD9wbQbduET14=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WorkRequestAttachments;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkRequestAttachments\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Manage/Attachments/index.jsx"],"names":["React","useDispatch","actions","useSelector","selectors","shallowEqual","useMemo","useCallback","AttachmentsV2","emptySet","WorkRequestAttachments","slideView","dispatch","allFiles","state","fileList","workflow","value","filesUploadedToServer","filter","i","status","handleUpload","file","update","addAttachment","handleDelete","fileId","removeAttachment"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAO,gCAAP,C,CAAyC;;AACzC,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAGA,MAAMC,QAAQ,GAAG,EAAjB;AACA,eAAe,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA+C;AAAA;;AAC5D,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAI;AAAA;;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAe,wBAAAX,SAAS,CAACY,QAAV,CAAmBF,KAAnB,6EAA2BG,KAA3B,KAAoC,EAAzD;AACA,WAAOF,QAAQ,IAAIN,QAAnB;AACD,GAH2B,EAGzBJ,YAHyB,CAA5B;AAKA,QAAMa,qBAAqB,GAAGZ,OAAO,CAAC,MAAM;AAC1C,WAAOO,QAAQ,CAACM,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,WAAb,IAA4BD,CAAC,CAACC,MAAF,KAAa,UAA9D,CAAP;AACD,GAFoC,EAElC,CAACR,QAAD,CAFkC,CAArC;AAIA,QAAMS,YAAY,GAAGf,WAAW,CAAEgB,IAAD,IAAU;AACzCX,IAAAA,QAAQ,CAACV,OAAO,CAACc,QAAR,CAAiBQ,MAAjB,CAAwBC,aAAxB,CAAsCF,IAAtC,CAAD,CAAR;AACD,GAF+B,EAE7B,CAACX,QAAD,CAF6B,CAAhC;AAIA,QAAMc,YAAY,GAAGnB,WAAW,CAAEoB,MAAD,IAAY;AAC3Cf,IAAAA,QAAQ,CAACV,OAAO,CAACc,QAAR,CAAiBQ,MAAjB,CAAwBI,gBAAxB,CAAyCD,MAAzC,CAAD,CAAR;AACD,GAF+B,EAE7B,CAACf,QAAD,CAF6B,CAAhC;AAIA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEM,qBADT;AAEE,IAAA,QAAQ,EAAEI,YAFZ;AAGE,IAAA,SAAS,EAAEX,SAHb;AAIE,IAAA,QAAQ,EAAEe;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BuBhB,sB;UACLT,W,EACAE,W;;;KAFKO,sB","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../../../actions\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../../../../reducers\";\nimport { shallowEqual } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\nimport { useCallback } from \"react\";\nimport AttachmentsV2 from \"../../../../components/AttachmentsV2\";\n\n\nconst emptySet = [];\nexport default function WorkRequestAttachments({ slideView }) {\n  const dispatch = useDispatch();\n  const allFiles = useSelector(state => {\n    const { fileList } = selectors.workflow(state)?.value || [];\n    return fileList || emptySet\n  }, shallowEqual)\n\n  const filesUploadedToServer = useMemo(() => {\n    return allFiles.filter(i => i.status === 'UPLOADING' || i.status === 'UPLOADED');\n  }, [allFiles])\n\n  const handleUpload = useCallback((file) => {\n    dispatch(actions.workflow.update.addAttachment(file));\n  }, [dispatch])\n\n  const handleDelete = useCallback((fileId) => {\n    dispatch(actions.workflow.update.removeAttachment(fileId));\n  }, [dispatch])\n\n  return (\n    <AttachmentsV2\n      files={filesUploadedToServer}\n      onUpload={handleUpload}\n      slideView={slideView}\n      onDelete={handleDelete}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}