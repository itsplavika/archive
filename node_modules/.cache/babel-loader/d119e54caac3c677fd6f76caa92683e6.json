{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMSwitch/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  track: {\n    backgroundColor: '#0073E6 !important'\n  },\n  root: {\n    // padding: 6,\n    // borderRadius: '17%',\n    // height: 26,\n    // minWidth: 74,\n    '& > span': {// paddingTop: 0,\n      // paddingBottom: 0,\n    }\n  },\n  input: {// paddingTop: 3,\n    // paddingLeft: 0,\n  }\n});\nexport default function EAMSwitch(props) {\n  _s();\n\n  const {\n    id,\n    title,\n    onFieldChange = () => {},\n    isChecked\n  } = props;\n  const classes = useStyles(props);\n\n  const handleChange = event => {\n    onFieldChange(id, !isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormBoxControl, {\n    title: title,\n    hideBorder: true,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isChecked,\n      className: classes.root,\n      onChange: handleChange,\n      color: \"primary\",\n      name: \"checked\",\n      classes: {\n        track: classes.track,\n        input: classes.input\n      } // value={isWOComplete}\n      ,\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EAMSwitch, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EAMSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMSwitch\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMSwitch/index.jsx"],"names":["Switch","makeStyles","FormBoxControl","useStyles","track","backgroundColor","root","input","EAMSwitch","props","id","title","onFieldChange","isChecked","classes","handleChange","event"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAC;AADX,GADoB;AAI3BC,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA,gBAAY,CACV;AACA;AAFU;AALR,GAJqB;AAc3BC,EAAAA,KAAK,EAAC,CACF;AACA;AAFE;AAdqB,CAAD,CAA5B;AAmBA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,aAAa,GAAG,MAAM,CAAG,CAAtC;AAAwCC,IAAAA;AAAxC,MAAsDJ,KAA5D;AACA,QAAMK,OAAO,GAAGX,SAAS,CAACM,KAAD,CAAzB;;AACA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,aAAa,CAACF,EAAD,EAAK,CAACG,SAAN,CAAb;AACD,GAFD;;AAGA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,UAAU,EAAE,IAFd;AAAA,2BAIE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEE,SADX;AAEE,MAAA,SAAS,EAAEC,OAAO,CAACR,IAFrB;AAGE,MAAA,QAAQ,EAAES,YAHZ;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,OAAO,EAAE;AACPX,QAAAA,KAAK,EAAEU,OAAO,CAACV,KADR;AAEPG,QAAAA,KAAK,EAAEO,OAAO,CAACP;AAFR,OANX,CAUE;AAVF;AAWE,MAAA,UAAU,EAAE;AACV,sBAAc;AADJ;AAXd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA5BuBC,S;UAENL,S;;;KAFMK,S","sourcesContent":["import { Switch } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\n\nconst useStyles = makeStyles({\n  track: {\n    backgroundColor:'#0073E6 !important'\n  },\n  root: {\n    // padding: 6,\n    // borderRadius: '17%',\n    // height: 26,\n    // minWidth: 74,\n    '& > span': {\n      // paddingTop: 0,\n      // paddingBottom: 0,\n    }\n  },\n  input:{\n      // paddingTop: 3,\n      // paddingLeft: 0,\n  }\n});\nexport default function EAMSwitch(props) {\n  const { id, title, onFieldChange = () => { }, isChecked } = props;\n  const classes = useStyles(props);\n  const handleChange = (event) => {\n    onFieldChange(id, !isChecked)\n  };\n  return (\n    <FormBoxControl\n      title={title}\n      hideBorder={true}\n    >\n      <Switch\n        checked={isChecked}\n        className={classes.root}\n        onChange={handleChange}\n        color='primary'\n        name='checked'\n        classes={{\n          track: classes.track,\n          input: classes.input,\n        }}\n        // value={isWOComplete}\n        inputProps={{\n          \"aria-label\": \"primary checkbox\",\n        }}\n      />\n    </FormBoxControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}