{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/services/appService/ProtectedRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from 'react-router';\nimport App from \"../../app/components/App\";\nimport { AuthContext } from '../../utils/Providers/AuthProvider';\nimport { AppSettings } from '../../utils/appSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute({\n  children,\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const authCtxt = useContext(AuthContext); // let isAuthenticated = authCtxt.isAuthenticated();\n\n  const isAuthenticated = true;\n  const globalDispatch = useDispatch();\n  let location = rest === null || rest === void 0 ? void 0 : rest.location;\n  useEffect(() => {\n    let location = window.location.search;\n    const urlParamArray = location.match(/ouId=([^&]*)&roleName=([^&]*)/) || \"\";\n\n    if (urlParamArray[1] !== \"\" && urlParamArray[2] != \"\" && urlParamArray[1] !== undefined && urlParamArray[2] !== undefined) {\n      globalDispatch({\n        type: \"userContext\",\n        payload: {\n          ouId: urlParamArray[1]\n        }\n      });\n      globalDispatch({\n        type: \"pageContext\",\n        payload: {\n          role: urlParamArray[2]\n        }\n      });\n    }\n  });\n\n  if (!isAuthenticated) {\n    const appBaseUrl = `${AppSettings.BASE_APP_URL}/${AppSettings.BASE_APP_NAME}`;\n    const lastRoute = window.location.href.replace(appBaseUrl, '');\n    sessionStorage.setItem('lastRoute', lastRoute);\n  }\n\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/signin',\n      state: location || \"\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 8\n  }, this);\n}\n\n_s(ProtectedRoute, \"6j120Krg/QCfNSJq44uAxBI7cq4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/services/appService/ProtectedRoute.jsx"],"names":["React","useContext","useEffect","useDispatch","Redirect","App","AuthContext","AppSettings","ProtectedRoute","children","component","Component","rest","authCtxt","isAuthenticated","globalDispatch","location","window","search","urlParamArray","match","undefined","type","payload","ouId","role","appBaseUrl","BASE_APP_URL","BASE_APP_NAME","lastRoute","href","replace","sessionStorage","setItem","pathname","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAUC,QAAV,QAA0B,cAA1B;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,EAAEC,SAAvB;AAAkC,KAAGC;AAArC,CAAxB,EAAqE;AAAA;;AACnE,QAAMC,QAAQ,GAAGZ,UAAU,CAACK,WAAD,CAA3B,CADmE,CAEnE;;AACA,QAAMQ,eAAe,GAAG,IAAxB;AACA,QAAMC,cAAc,GAAGZ,WAAW,EAAlC;AACA,MAAIa,QAAQ,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,QAArB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,GAAGC,MAAM,CAACD,QAAP,CAAgBE,MAA/B;AACA,UAAMC,aAAa,GAAGH,QAAQ,CAACI,KAAT,CAAe,+BAAf,KAAmD,EAAzE;;AACA,QAAID,aAAa,CAAC,CAAD,CAAb,KAAqB,EAArB,IACFA,aAAa,CAAC,CAAD,CAAb,IAAoB,EADlB,IAEFA,aAAa,CAAC,CAAD,CAAb,KAAqBE,SAFnB,IAGFF,aAAa,CAAC,CAAD,CAAb,KAAqBE,SAHvB,EAGkC;AAChCN,MAAAA,cAAc,CAAC;AAAEO,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAEL,aAAa,CAAC,CAAD;AAArB;AAAhC,OAAD,CAAd;AACAJ,MAAAA,cAAc,CAAC;AAAEO,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,IAAI,EAAEN,aAAa,CAAC,CAAD;AAArB;AAAhC,OAAD,CAAd;AACD;AACF,GAVQ,CAAT;;AAWA,MAAI,CAACL,eAAL,EAAsB;AACpB,UAAMY,UAAU,GAAI,GAAEnB,WAAW,CAACoB,YAAa,IAAGpB,WAAW,CAACqB,aAAc,EAA5E;AACA,UAAMC,SAAS,GAAGZ,MAAM,CAACD,QAAP,CAAgBc,IAAhB,CAAqBC,OAArB,CAA6BL,UAA7B,EAAyC,EAAzC,CAAlB;AACAM,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCJ,SAApC;AACD;;AAED,SAAOf,eAAe,gBACjB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADiB,gBAEjB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEoB,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,KAAK,EAAEnB,QAAQ,IAAI;AAA1C;AAAd;AAAA;AAAA;AAAA;AAAA,UAFL;AAGD;;GA1BQR,c;UAIgBL,W;;;KAJhBK,c;AA4BT,eAAeA,cAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport {  Redirect } from 'react-router';\n\nimport App from \"../../app/components/App\";\nimport { AuthContext } from '../../utils/Providers/AuthProvider';\nimport { AppSettings } from '../../utils/appSettings';\n\nfunction ProtectedRoute({ children, component: Component, ...rest }) {\n  const authCtxt = useContext(AuthContext);\n  // let isAuthenticated = authCtxt.isAuthenticated();\n  const isAuthenticated = true;\n  const globalDispatch = useDispatch();\n  let location = rest?.location;\n  useEffect(() => {\n    let location = window.location.search;\n    const urlParamArray = location.match(/ouId=([^&]*)&roleName=([^&]*)/) || \"\";\n    if (urlParamArray[1] !== \"\" &&\n      urlParamArray[2] != \"\" &&\n      urlParamArray[1] !== undefined &&\n      urlParamArray[2] !== undefined) {\n      globalDispatch({ type: \"userContext\", payload: { ouId: urlParamArray[1] } });\n      globalDispatch({ type: \"pageContext\", payload: { role: urlParamArray[2] } });\n    }\n  });\n  if (!isAuthenticated) {\n    const appBaseUrl = `${AppSettings.BASE_APP_URL}/${AppSettings.BASE_APP_NAME}`;\n    const lastRoute = window.location.href.replace(appBaseUrl, '');\n    sessionStorage.setItem('lastRoute', lastRoute);\n  }\n\n  return isAuthenticated\n    ? (<App />)\n    : (<Redirect to={{ pathname: '/signin', state: location || \"\" }} />)\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}