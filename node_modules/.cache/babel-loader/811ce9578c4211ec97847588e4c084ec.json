{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/InventorySearchDetails/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport SearchIcon from \"../../assets/Icons/SearchIcon\";\nimport ScannerIcon from \"../../assets/Icons/ScannerIcon\";\nimport MuteIcon from \"../../assets/Icons/MuteIcon\";\nimport UnMuteIcon from \"../../assets/Icons/UnMuteIcon\";\nimport classnames from \"classnames\";\nimport FullScreenDialog from \"../FullScreenDialog\";\nimport ScannerWrapper from \"../ScannerWrapper\";\nimport InventorySearchModal from \"../InventorySearchModal\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport NameAndCodePreview from \"./Preview\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { shallowEqual } from \"react-redux\";\nimport { selectors } from \"../../reducers\";\nimport actions from \"../../actions\";\nimport { useEffect } from \"react\";\nimport InfoIcon from \"../../assets/Icons/InfoIcon\";\nimport { Popover, Typography } from \"@material-ui/core\";\nimport SettingsGreyIcon from \"../../assets/Icons/SettingsGreyIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  fieldWrapper: {\n    width: \"100%\"\n  },\n  icon: {\n    height: 16,\n    width: 16\n  },\n  rightActionWrapper: {\n    position: \"absolute\",\n    right: 0,\n    top: 10,\n    \"& > svg\": {\n      marginRight: 24\n    },\n    \"& > span\": {\n      marginRight: 24\n    }\n  },\n  leftActionWrapper: {\n    position: \"absolute\",\n    left: 8,\n    top: 10,\n    \"& > svg\": {\n      marginRight: 24\n    },\n    \"& > span\": {\n      marginRight: 24\n    }\n  },\n  machineWrapper: {\n    display: \"flex\",\n    paddingLeft: 3,\n    paddingBottom: 18,\n    \"& > svg\": {\n      marginRight: 6\n    }\n  },\n  fieldsetContainer: {\n    width: \"100%\",\n    minHeight: \"65px\",\n    border: \"1px solid #E9EBEF\",\n    color: \"#979DAC\",\n    display: \"inline-block\",\n    borderRadius: \"4px\",\n    fontSize: \"12px\",\n    position: \"relative\"\n  },\n  fieldName: {\n    fontSize: \"12px\",\n    color: \"#979DAC\"\n  },\n  popover: {\n    boxShadow: \"none\"\n  },\n  fieldValue: {\n    paddingTop: 6,\n    color: \"rgb(17, 17, 17)\",\n    fontSize: 13,\n    paddingLeft: 20,\n    width: \"70%\",\n    height: \"auto\",\n    paddingBottom: 6\n  },\n  inputText: {\n    border: \"none\",\n    height: \"30px\",\n    width: \"200px\",\n    \"&:focus-visible\": {\n      outline: \"none\"\n    }\n  },\n  machineText: {\n    color: \"#0073E6\",\n    fontWeight: \"bold\",\n    fontSize: 14\n  },\n  mic: {\n    color: \"#5C677D\",\n    float: \"right\"\n  },\n  textField: {\n    \"& * > .MuiInput-underline:before\": {\n      display: \"none\"\n    },\n    \"& > div:first-child\": {\n      \"& > input\": {\n        \"&::before\": {\n          display: \"none\"\n        }\n      }\n    }\n  }\n});\nexport default function InventoryDetailsSearch(props) {\n  _s();\n\n  const {\n    id,\n    type,\n    isReadOnly,\n    value,\n    onFieldChange,\n    label = \"Enter details\"\n  } = props;\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openSearch, setOpenSearch] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [previewEl, setPreviewEl] = React.useState(null);\n\n  const triggerListening = () => SpeechRecognition.startListening({\n    continuous: true\n  });\n\n  const [openScanner, setOpenScanner] = useState(false);\n  const isAllOptionsLoaded = useSelector(state => {\n    const equipmentLocationsByCode = selectors.equipmentLocationsByCode(state, \"\", type === \"equipment\" ? \"E\" : \"L\");\n    return equipmentLocationsByCode === null || equipmentLocationsByCode === void 0 ? void 0 : equipmentLocationsByCode.length;\n  });\n  const valueToDisplay = useSelector(state => {\n    const equipmentLocationsByCode = selectors.equipmentLocationsByCode(state, \"\", type === \"equipment\" ? \"E\" : \"L\");\n    const obj = equipmentLocationsByCode.find(i => i.EqpLocCode.toLowerCase() === value && value.toLowerCase());\n\n    if (!(obj === null || obj === void 0 ? void 0 : obj.EqpLocCode)) {\n      return \"\";\n    }\n\n    return `${obj.EqpLocDesc} (${obj.EqpLocCode})`;\n  }, shallowEqual);\n\n  const handleClickOpenSearch = dialogType => {\n    setOpenSearch(true);\n  };\n\n  const handleSearchClose = () => {\n    setOpenSearch(false);\n  };\n\n  const onStartListening = () => {\n    resetTranscript();\n    setIsListening(true);\n    triggerListening();\n  };\n\n  const onStopListening = () => {\n    setIsListening(false);\n    SpeechRecognition.stopListening();\n\n    if (onFieldChange) {\n      onFieldChange(id, `${value} ${transcript}`);\n    }\n  };\n\n  const handleClickOpenScanner = dialogType => {\n    setOpenScanner(true);\n  };\n\n  const handleCloseScanner = () => {\n    setOpenScanner(false);\n  };\n\n  const handleScanComplete = val => {\n    handleCloseScanner();\n\n    if (onFieldChange) {\n      onFieldChange(id, val);\n    }\n  };\n\n  console.log(\"previewEl\", previewEl);\n  const handleSearchSelect = useCallback(value => {\n    if (onFieldChange) {\n      onFieldChange(id, value);\n    }\n\n    handleSearchClose();\n  }, [id, onFieldChange]);\n  const handleMapSelect = useCallback(({\n    EqpLocCode\n  }) => {\n    if (onFieldChange) {\n      onFieldChange(id, EqpLocCode);\n    }\n\n    onStopListening();\n  }, [id, onFieldChange]);\n  useEffect(() => {\n    if (value && !isAllOptionsLoaded) {\n      dispatch(actions.equipmentLocations.request({\n        eqpOrLoc: type === \"equipment\" ? \"E\" : \"L\",\n        eqpLocCode: value\n      }));\n    }\n  }, [dispatch, isAllOptionsLoaded, type, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isReadOnly ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.machineWrapper,\n      onClick: event => {\n        setPreviewEl(event.currentTarget);\n      },\n      children: [/*#__PURE__*/_jsxDEV(SettingsGreyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.machineText,\n        variant: \"body1\",\n        children: valueToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: classnames(classes.fieldsetContainer),\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fieldValue,\n        children: valueToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), valueToDisplay ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.leftActionWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: event => {\n            setPreviewEl(event.currentTarget);\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n            className: classes.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.rightActionWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleClickOpenSearch,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), isListening ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.mic,\n          onClick: onStopListening,\n          children: /*#__PURE__*/_jsxDEV(UnMuteIcon, {\n            height: \"16\",\n            width: \"19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.mic,\n          onClick: onStartListening,\n          children: /*#__PURE__*/_jsxDEV(MuteIcon, {\n            height: \"15\",\n            width: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleClickOpenScanner,\n          children: /*#__PURE__*/_jsxDEV(ScannerIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenDialog, {\n      modalTitle: \"Search Item\",\n      open: openSearch,\n      modalContent: /*#__PURE__*/_jsxDEV(InventorySearchModal, {\n        onSelect: handleSearchSelect,\n        value: value,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this),\n      onClose: handleSearchClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenDialog, {\n      modalTitle: \"Scan Code\",\n      open: openScanner,\n      modalContent: /*#__PURE__*/_jsxDEV(ScannerWrapper, {\n        onScanComplete: handleScanComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this),\n      onClose: handleCloseScanner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: !!previewEl,\n      anchorEl: previewEl,\n      classes: {\n        paper: classes.popover\n      },\n      onClose: () => {\n        setPreviewEl(null);\n      },\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(NameAndCodePreview, {\n        type: type,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InventoryDetailsSearch, \"S7da6+KyTAjUFzhQYgrwvobXoSM=\", false, function () {\n  return [useSpeechRecognition, useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = InventoryDetailsSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryDetailsSearch\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/InventorySearchDetails/index.jsx"],"names":["React","useState","useCallback","makeStyles","SearchIcon","ScannerIcon","MuteIcon","UnMuteIcon","classnames","FullScreenDialog","ScannerWrapper","InventorySearchModal","SpeechRecognition","useSpeechRecognition","NameAndCodePreview","useDispatch","useSelector","shallowEqual","selectors","actions","useEffect","InfoIcon","Popover","Typography","SettingsGreyIcon","useStyles","fieldWrapper","width","icon","height","rightActionWrapper","position","right","top","marginRight","leftActionWrapper","left","machineWrapper","display","paddingLeft","paddingBottom","fieldsetContainer","minHeight","border","color","borderRadius","fontSize","fieldName","popover","boxShadow","fieldValue","paddingTop","inputText","outline","machineText","fontWeight","mic","float","textField","InventoryDetailsSearch","props","id","type","isReadOnly","value","onFieldChange","label","transcript","resetTranscript","classes","dispatch","openSearch","setOpenSearch","isListening","setIsListening","previewEl","setPreviewEl","triggerListening","startListening","continuous","openScanner","setOpenScanner","isAllOptionsLoaded","state","equipmentLocationsByCode","length","valueToDisplay","obj","find","i","EqpLocCode","toLowerCase","EqpLocDesc","handleClickOpenSearch","dialogType","handleSearchClose","onStartListening","onStopListening","stopListening","handleClickOpenScanner","handleCloseScanner","handleScanComplete","val","console","log","handleSearchSelect","handleMapSelect","equipmentLocations","request","eqpOrLoc","eqpLocCode","event","currentTarget","paper","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport SearchIcon from \"../../assets/Icons/SearchIcon\";\nimport ScannerIcon from \"../../assets/Icons/ScannerIcon\";\nimport MuteIcon from \"../../assets/Icons/MuteIcon\";\nimport UnMuteIcon from \"../../assets/Icons/UnMuteIcon\";\nimport classnames from \"classnames\";\nimport FullScreenDialog from \"../FullScreenDialog\";\nimport ScannerWrapper from \"../ScannerWrapper\";\nimport InventorySearchModal from \"../InventorySearchModal\";\nimport SpeechRecognition, {\n    useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport NameAndCodePreview from \"./Preview\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { shallowEqual } from \"react-redux\";\nimport { selectors } from \"../../reducers\";\nimport actions from \"../../actions\";\nimport { useEffect } from \"react\";\nimport InfoIcon from \"../../assets/Icons/InfoIcon\";\nimport { Popover, Typography } from \"@material-ui/core\";\nimport SettingsGreyIcon from \"../../assets/Icons/SettingsGreyIcon\";\nconst useStyles = makeStyles({\n    fieldWrapper: {\n        width: \"100%\",\n    },\n    icon: {\n        height: 16,\n        width: 16,\n    },\n    rightActionWrapper: {\n        position: \"absolute\",\n        right: 0,\n        top: 10,\n        \"& > svg\": {\n            marginRight: 24,\n        },\n        \"& > span\": {\n            marginRight: 24,\n        },\n    },\n    leftActionWrapper: {\n        position: \"absolute\",\n        left: 8,\n        top: 10,\n        \"& > svg\": {\n            marginRight: 24,\n        },\n        \"& > span\": {\n            marginRight: 24,\n        },\n    },\n\n    machineWrapper: {\n        display: \"flex\",\n        paddingLeft: 3,\n        paddingBottom: 18,\n        \"& > svg\": {\n            marginRight: 6,\n        },\n    },\n    fieldsetContainer: {\n        width: \"100%\",\n        minHeight: \"65px\",\n        border: \"1px solid #E9EBEF\",\n        color: \"#979DAC\",\n        display: \"inline-block\",\n        borderRadius: \"4px\",\n        fontSize: \"12px\",\n        position: \"relative\",\n    },\n    fieldName: {\n        fontSize: \"12px\",\n        color: \"#979DAC\",\n    },\n    popover: {\n        boxShadow: \"none\",\n    },\n    fieldValue: {\n        paddingTop: 6,\n        color: \"rgb(17, 17, 17)\",\n        fontSize: 13,\n        paddingLeft: 20,\n        width: \"70%\",\n        height: \"auto\",\n        paddingBottom: 6,\n    },\n    inputText: {\n        border: \"none\",\n        height: \"30px\",\n        width: \"200px\",\n\n        \"&:focus-visible\": {\n            outline: \"none\",\n        },\n    },\n    machineText: {\n        color: \"#0073E6\",\n        fontWeight: \"bold\",\n        fontSize: 14,\n    },\n    mic: {\n        color: \"#5C677D\",\n        float: \"right\",\n    },\n    textField: {\n        \"& * > .MuiInput-underline:before\": {\n            display: \"none\",\n        },\n        \"& > div:first-child\": {\n            \"& > input\": {\n                \"&::before\": {\n                    display: \"none\",\n                },\n            },\n        },\n    },\n});\n\nexport default function InventoryDetailsSearch(props) {\n    const {\n        id,\n        type,\n        isReadOnly,\n        value,\n        onFieldChange,\n        label = \"Enter details\",\n    } = props;\n    const { transcript, resetTranscript } = useSpeechRecognition();\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [openSearch, setOpenSearch] = useState(false);\n    const [isListening, setIsListening] = useState(false);\n    const [previewEl, setPreviewEl] = React.useState(null);\n\n    const triggerListening = () =>\n        SpeechRecognition.startListening({ continuous: true });\n\n    const [openScanner, setOpenScanner] = useState(false);\n    const isAllOptionsLoaded = useSelector(state => {\n        const equipmentLocationsByCode = selectors.equipmentLocationsByCode(\n            state,\n            \"\",\n            type === \"equipment\" ? \"E\" : \"L\"\n        );\n        return equipmentLocationsByCode?.length;\n    });\n\n    const valueToDisplay = useSelector(state => {\n        const equipmentLocationsByCode = selectors.equipmentLocationsByCode(\n            state,\n            \"\",\n            type === \"equipment\" ? \"E\" : \"L\"\n        );\n        const obj = equipmentLocationsByCode.find(\n            i => i.EqpLocCode.toLowerCase() === value && value.toLowerCase()\n        );\n        if (!obj?.EqpLocCode) {\n            return \"\";\n        }\n        return `${obj.EqpLocDesc} (${obj.EqpLocCode})`;\n    }, shallowEqual);\n\n    const handleClickOpenSearch = dialogType => {\n        setOpenSearch(true);\n    };\n\n    const handleSearchClose = () => {\n        setOpenSearch(false);\n    };\n\n    const onStartListening = () => {\n        resetTranscript();\n        setIsListening(true);\n        triggerListening();\n    };\n    const onStopListening = () => {\n        setIsListening(false);\n        SpeechRecognition.stopListening();\n        if (onFieldChange) {\n            onFieldChange(id, `${value} ${transcript}`);\n        }\n    };\n\n    const handleClickOpenScanner = dialogType => {\n        setOpenScanner(true);\n    };\n\n    const handleCloseScanner = () => {\n        setOpenScanner(false);\n    };\n\n    const handleScanComplete = val => {\n        handleCloseScanner();\n        if (onFieldChange) {\n            onFieldChange(id, val);\n        }\n    };\n\n    console.log(\"previewEl\", previewEl);\n    const handleSearchSelect = useCallback(\n        value => {\n            if (onFieldChange) {\n                onFieldChange(id, value);\n            }\n            handleSearchClose();\n        },\n        [id, onFieldChange]\n    );\n    const handleMapSelect = useCallback(\n        ({ EqpLocCode }) => {\n            if (onFieldChange) {\n                onFieldChange(id, EqpLocCode);\n            }\n            onStopListening();\n        },\n        [id, onFieldChange]\n    );\n\n    useEffect(() => {\n        if (value && !isAllOptionsLoaded) {\n            dispatch(\n                actions.equipmentLocations.request({\n                    eqpOrLoc: type === \"equipment\" ? \"E\" : \"L\",\n                    eqpLocCode: value,\n                })\n            );\n        }\n    }, [dispatch, isAllOptionsLoaded, type, value]);\n\n    return (\n        <div>\n            {isReadOnly ? (\n                <div\n                    className={classes.machineWrapper}\n                    onClick={event => {\n                        setPreviewEl(event.currentTarget);\n                    }}\n                >\n                    <SettingsGreyIcon />\n                    <Typography className={classes.machineText} variant='body1'>\n                        {valueToDisplay}\n                    </Typography>\n                </div>\n            ) : (\n                <fieldset className={classnames(classes.fieldsetContainer)}>\n                    <legend>{label}</legend>\n                    <div className={classes.fieldValue}>{valueToDisplay}</div>\n                    {valueToDisplay ? (\n                        <span className={classes.leftActionWrapper}>\n                            <span\n                                onClick={event => {\n                                    setPreviewEl(event.currentTarget);\n                                }}\n                            >\n                                <InfoIcon className={classes.icon} />\n                            </span>\n                        </span>\n                    ) : null}\n                    <span className={classes.rightActionWrapper}>\n                        <span onClick={handleClickOpenSearch}>\n                            <SearchIcon />\n                        </span>\n                        {isListening ? (\n                            <span\n                                className={classes.mic}\n                                onClick={onStopListening}\n                            >\n                                <UnMuteIcon height='16' width='19' />\n                            </span>\n                        ) : (\n                            <span\n                                className={classes.mic}\n                                onClick={onStartListening}\n                            >\n                                <MuteIcon height='15' width='15' />\n                            </span>\n                        )}\n                        <span onClick={handleClickOpenScanner}>\n                            <ScannerIcon />\n                        </span>\n                    </span>\n                    {/* </FieldSet> */}\n                </fieldset>\n            )}\n\n            <FullScreenDialog\n                modalTitle='Search Item'\n                open={openSearch}\n                modalContent={\n                    <InventorySearchModal\n                        onSelect={handleSearchSelect}\n                        value={value}\n                        type={type}\n                    />\n                }\n                onClose={handleSearchClose}\n            />\n            <FullScreenDialog\n                modalTitle='Scan Code'\n                open={openScanner}\n                modalContent={\n                    <ScannerWrapper onScanComplete={handleScanComplete} />\n                }\n                onClose={handleCloseScanner}\n            />\n            <Popover\n                id={id}\n                open={!!previewEl}\n                anchorEl={previewEl}\n                classes={{\n                    paper: classes.popover,\n                }}\n                onClose={() => {\n                    setPreviewEl(null);\n                }}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n            >\n                <NameAndCodePreview type={type} value={value} />\n            </Popover>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}