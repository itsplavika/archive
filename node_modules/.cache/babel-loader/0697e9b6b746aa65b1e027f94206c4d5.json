{"ast":null,"code":"import { call, takeEvery, put, select, takeLatest } from \"redux-saga/effects\";\nimport { apiCallWithRetry } from \"..\";\nimport actions from \"../../actions\";\nimport actionTypes from \"../../actions/types\";\nimport { selectors } from \"../../reducers\";\nimport { getWorkOrderMetadata } from \"../../queries/workOrder/getWorkOrderMetadata\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { createWorkOrderRequest } from '../../queries/workOrder/createWorkOrderRequest';\nimport { uploadAttachment } from \"../attachment\";\nimport { getWorkOrderMetadataParentListItem } from \"../../queries/workOrder/getWorkOrderMetadataParentListItem\";\n/**\n *\n * This loads workOrder combo box items\n */\n\nexport function* workOrderLoadItems() {\n  const query = getWorkOrderMetadata();\n\n  try {\n    var _resp$EAMWorkOrder_ge, _resp$EAMWorkOrder_ge2;\n\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true\n    });\n\n    if (resp === null || resp === void 0 ? void 0 : (_resp$EAMWorkOrder_ge = resp['EAMWorkOrder_getMetaData_UpeDefault']) === null || _resp$EAMWorkOrder_ge === void 0 ? void 0 : (_resp$EAMWorkOrder_ge2 = _resp$EAMWorkOrder_ge.getListItems) === null || _resp$EAMWorkOrder_ge2 === void 0 ? void 0 : _resp$EAMWorkOrder_ge2.data) {\n      const comboItems = resp['EAMWorkOrder_getMetaData_UpeDefault'].getListItems.data;\n      const defaultValues = resp['EAMWorkOrder_getMetaData_UpeDefault'].screenLaunchdefaultvaluesUPEassistedforallProperties.data;\n      return yield put(actions.workOrder.comboItems.received(comboItems, defaultValues));\n    }\n\n    return yield put(actions.workOrder.comboItems.failed());\n  } catch (e) {\n    return yield put(actions.workOrder.comboItems.failed());\n  }\n}\nexport function* workOrderUpdateInit({\n  id\n}) {\n  const workflowItems = yield select(selectors.workOrderItems);\n\n  if (workflowItems.status !== 'success') {\n    //load required workflow combo items\n    yield call(workOrderLoadItems);\n  } // const workflows = yield select(selectors.workOrders) || [];\n  // const workflow = workflows.find(workflow => workflow.id === id);\n  // if (workflow) {\n  //   return yield put(actions.workOrder.update.initSuccess(workflow));\n  // }\n\n\n  const defaultValues = yield select(selectors.workOrderDefaultValues);\n  const currentDate = convertUtcToTimezone({\n    date: new Date(),\n    dateFormat: 'YYYY-MM-DD HH:mm:ss',\n    isDateOnly: true\n  });\n  return yield put(actions.workOrder.update.initSuccess({\n    id,\n    actionFlag: \"QUICKWO\",\n    WoEqpLocCode: defaultValues.WOEqpLocCode,\n    WoOnEqpLocFlag: \"E\",\n    WorkGroup: defaultValues.WorkGroupCode,\n    WorkOrderDesc: \"\",\n    WorkPhone1: defaultValues.WorkPhone1 === '-1' ? '' : defaultValues.WorkPhone1,\n    WorkPhone2: defaultValues.WorkPhone2 === '-1' ? '' : defaultValues.WorkPhone2,\n    WoScheduledComplDate: \"\",\n    WoScheduledComplTime: \"\",\n    WoScheduledStartDate: currentDate.split(' ')[0],\n    WoScheduledStartTime: currentDate.split(' ')[1],\n    WoSource: \"\",\n    WoStatus: \"\",\n    accountCode: \"\",\n    AdditionalFaiureInfo: \"\",\n    analysisCode: \"\",\n    contractNo: \"\",\n    CopyTasksFromProcedure: \"\",\n    CostCenterCode: \"PL1\",\n    CostType: \"RE\",\n    FailureDate: currentDate.split(' ')[0],\n    fbid: \"\",\n    WoSubGroup: \"\",\n    WoTime: currentDate.split(' ')[1],\n    WoType: defaultValues.TypeCode,\n    genfrom: \"\",\n    Guid: \"\",\n    holdReason: \"\",\n    InterruptedDatetime: \"\",\n    LeadCode: \"\",\n    MajorProblemCode: defaultValues.ProblemCode,\n    MajorProblemDesc: defaultValues.ProblemDesc,\n    ParentWOCode: \"\",\n    percentCompleted: 1.00,\n    PerformRCAFlag: defaultValues.PerformRCA === \"1\" ? \"1\" : \"0\",\n    PlanningGroup: defaultValues.PlanningGroupCode,\n    projectCode: \"\",\n    proposalid: \"\",\n    ReasonCode: \"\",\n    RejectionReason: \"\",\n    Remarks: \"\",\n    ScheduleBy: \"\",\n    SchedulingRemarks: \"\",\n    subAnalysisCode: \"\",\n    SupervisorCode: defaultValues.SupervisorCode,\n    TimeStamp: 1,\n    WoAuthRequiredFlag: \"0\",\n    WoAuthUser: \"\",\n    WoCategory: \"Ext\",\n    WoClearanceRequiredFlag: \"\",\n    WoDate: currentDate.split(' ')[0],\n    WoDuration: \"\",\n    WoEqpLocDescription: defaultValues.WOEqpLocDesc,\n    WoGroup: \"\",\n    WoMiscCost: \"\",\n    WoPermitType: \"\",\n    WoPriority: defaultValues.PriorityCode,\n    WoRank: \"\",\n    WorkOrderNo: \"\",\n    fileList: [],\n    CompanyBaseCurrency: defaultValues.CompanyBaseCurrency //{name: '', fileId: '', modeFlag}\n    // { filesIndividualRef: \"${file.fileId}\", filesMainRef: \"${file.name}\", ModeFlag: \"I\" },\n\n  }));\n}\nexport function* workOrderSave() {\n  const {\n    value: workOrder = {}\n  } = yield select(selectors.workOrder);\n  const query = createWorkOrderRequest(workOrder);\n\n  try {\n    var _resp$EAMWorkOrder_po, _resp$EAMWorkOrder_po2;\n\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true\n    });\n\n    if (resp === null || resp === void 0 ? void 0 : resp.errors) {\n      const parsedErrorJson = JSON.parse(resp.errors[0].message || \"{}\");\n      return yield put(actions.workOrder.update.saveFailed(parsedErrorJson.description || 'Something went wrong!'));\n    }\n\n    if (resp === null || resp === void 0 ? void 0 : (_resp$EAMWorkOrder_po = resp['EAMWorkOrder_postworkOrderCreation']) === null || _resp$EAMWorkOrder_po === void 0 ? void 0 : (_resp$EAMWorkOrder_po2 = _resp$EAMWorkOrder_po.createWorkOrder) === null || _resp$EAMWorkOrder_po2 === void 0 ? void 0 : _resp$EAMWorkOrder_po2.data) {\n      const {\n        WorkOrderNoout\n      } = resp['EAMWorkOrder_postworkOrderCreation'].createWorkOrder.data;\n      return yield put(actions.workOrder.update.saveSuccess(WorkOrderNoout));\n    }\n\n    return yield put(actions.workOrder.update.saveFailed('Something went wrong!'));\n  } catch (e) {\n    const [error] = e.response.errors;\n    let message = 'Something went wrong!';\n\n    try {\n      var _parsedErorMsg$;\n\n      const parsedErorMsg = JSON.parse(error.message);\n\n      if (parsedErorMsg === null || parsedErorMsg === void 0 ? void 0 : (_parsedErorMsg$ = parsedErorMsg[0]) === null || _parsedErorMsg$ === void 0 ? void 0 : _parsedErorMsg$.description) {\n        message = parsedErorMsg[0].description;\n      }\n    } catch (e) {\n      if (error.message) {\n        message = error.message;\n      }\n    }\n\n    return yield put(actions.workOrder.update.saveFailed(message));\n  }\n}\nexport function* workOrderAddAttachment({\n  file\n}) {\n  const {\n    data,\n    error\n  } = yield call(uploadAttachment, {\n    file\n  });\n\n  if (data) {\n    yield put(actions.workOrder.update.addAttachmentSuccess({\n      filesIndividualRef: data.fileId,\n      name: file.name,\n      filesMainRef: data.name,\n      relativePath: 'APIEamwrkreq'\n    }));\n  } else {\n    yield put(actions.workOrder.update.addAttachmentFailed({\n      name: file.name\n    }));\n  }\n}\nexport function* patchField({\n  fieldId,\n  value\n}) {\n  // const {data, error} = yield call(uploadAttachment,{file});\n  if (fieldId === \"WoEqpLocCode\") {\n    const {\n      value: workOrder\n    } = yield select(selectors.workOrder);\n    const {\n      WoOnEqpLocFlag\n    } = workOrder || {};\n    const obj = yield select(selectors.findEquipmentLocation, value, WoOnEqpLocFlag);\n    yield put(actions.workOrder.update.patchField(\"criticality\", obj.CriticalityDesc));\n    yield put(actions.workOrder.update.patchField(\"ParentWOCode\", obj.ParentCode));\n  }\n}\nexport function* workOrderParentListItemRequest({\n  eqpLocCode,\n  eqpOrLoc\n}) {\n  if (!eqpLocCode) {\n    return;\n  }\n\n  const opts = yield select(selectors.workOrderParentList, {\n    eqpLocCode,\n    eqpOrLoc\n  });\n\n  if (opts) {\n    return;\n  }\n\n  const query = getWorkOrderMetadataParentListItem({\n    eqpLocCode,\n    eqpOrLoc\n  });\n\n  try {\n    var _resp$EAMWorkOrder_ge3, _resp$EAMWorkOrder_ge4, _resp$EAMWorkOrder_ge5;\n\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true\n    });\n\n    if (resp === null || resp === void 0 ? void 0 : (_resp$EAMWorkOrder_ge3 = resp['EAMWorkOrder_getMetaData_UpeDefault']) === null || _resp$EAMWorkOrder_ge3 === void 0 ? void 0 : (_resp$EAMWorkOrder_ge4 = _resp$EAMWorkOrder_ge3.getListItems) === null || _resp$EAMWorkOrder_ge4 === void 0 ? void 0 : (_resp$EAMWorkOrder_ge5 = _resp$EAMWorkOrder_ge4.data) === null || _resp$EAMWorkOrder_ge5 === void 0 ? void 0 : _resp$EAMWorkOrder_ge5.Parentinfo) {\n      var _resp$EAMWorkOrder_ge6;\n\n      const defaultParentOptions = (_resp$EAMWorkOrder_ge6 = resp['EAMWorkOrder_getMetaData_UpeDefault'].getListItems.data) === null || _resp$EAMWorkOrder_ge6 === void 0 ? void 0 : _resp$EAMWorkOrder_ge6.Parentinfo;\n      return yield put(actions.workOrder.update.parentListItem.received({\n        value: defaultParentOptions,\n        eqpLocCode,\n        eqpOrLoc\n      }));\n    } // return yield put(actions.workOrder.comboItems.failed());\n\n  } catch (e) {// return yield put(actions.workOrder.comboItems.failed());\n  }\n}\nexport const workOrderSagas = [takeLatest(actionTypes.WORK_ORDER.COMBO_ITEMS.REQUEST, workOrderLoadItems), takeLatest(actionTypes.WORK_ORDER.UPDATE.INIT, workOrderUpdateInit), takeLatest(actionTypes.WORK_ORDER.UPDATE.PARENT_LIST_ITEM.REQUEST, workOrderParentListItemRequest), takeEvery(actionTypes.WORK_ORDER.UPDATE.SAVE, workOrderSave), takeLatest(actionTypes.WORK_ORDER.UPDATE.PATCH_FIELD, patchField), takeEvery(actionTypes.WORK_ORDER.UPDATE.ADD_ATTACHMENT, workOrderAddAttachment)];","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/sagas/workOrder/index.js"],"names":["call","takeEvery","put","select","takeLatest","apiCallWithRetry","actions","actionTypes","selectors","getWorkOrderMetadata","convertUtcToTimezone","createWorkOrderRequest","uploadAttachment","getWorkOrderMetadataParentListItem","workOrderLoadItems","query","resp","opts","gCtxtCmp","hidden","getListItems","data","comboItems","defaultValues","screenLaunchdefaultvaluesUPEassistedforallProperties","workOrder","received","failed","e","workOrderUpdateInit","id","workflowItems","workOrderItems","status","workOrderDefaultValues","currentDate","date","Date","dateFormat","isDateOnly","update","initSuccess","actionFlag","WoEqpLocCode","WOEqpLocCode","WoOnEqpLocFlag","WorkGroup","WorkGroupCode","WorkOrderDesc","WorkPhone1","WorkPhone2","WoScheduledComplDate","WoScheduledComplTime","WoScheduledStartDate","split","WoScheduledStartTime","WoSource","WoStatus","accountCode","AdditionalFaiureInfo","analysisCode","contractNo","CopyTasksFromProcedure","CostCenterCode","CostType","FailureDate","fbid","WoSubGroup","WoTime","WoType","TypeCode","genfrom","Guid","holdReason","InterruptedDatetime","LeadCode","MajorProblemCode","ProblemCode","MajorProblemDesc","ProblemDesc","ParentWOCode","percentCompleted","PerformRCAFlag","PerformRCA","PlanningGroup","PlanningGroupCode","projectCode","proposalid","ReasonCode","RejectionReason","Remarks","ScheduleBy","SchedulingRemarks","subAnalysisCode","SupervisorCode","TimeStamp","WoAuthRequiredFlag","WoAuthUser","WoCategory","WoClearanceRequiredFlag","WoDate","WoDuration","WoEqpLocDescription","WOEqpLocDesc","WoGroup","WoMiscCost","WoPermitType","WoPriority","PriorityCode","WoRank","WorkOrderNo","fileList","CompanyBaseCurrency","workOrderSave","value","errors","parsedErrorJson","JSON","parse","message","saveFailed","description","createWorkOrder","WorkOrderNoout","saveSuccess","error","response","parsedErorMsg","workOrderAddAttachment","file","addAttachmentSuccess","filesIndividualRef","fileId","name","filesMainRef","relativePath","addAttachmentFailed","patchField","fieldId","obj","findEquipmentLocation","CriticalityDesc","ParentCode","workOrderParentListItemRequest","eqpLocCode","eqpOrLoc","workOrderParentList","Parentinfo","defaultParentOptions","parentListItem","workOrderSagas","WORK_ORDER","COMBO_ITEMS","REQUEST","UPDATE","INIT","PARENT_LIST_ITEM","SAVE","PATCH_FIELD","ADD_ATTACHMENT"],"mappings":"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","sourcesContent":["\nimport {\n  call,\n  takeEvery,\n  put,\n  select,\n  takeLatest,\n} from \"redux-saga/effects\";\nimport { apiCallWithRetry } from \"..\";\nimport actions from \"../../actions\";\nimport actionTypes from \"../../actions/types\";\nimport { selectors } from \"../../reducers\";\nimport { getWorkOrderMetadata } from \"../../queries/workOrder/getWorkOrderMetadata\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { createWorkOrderRequest } from '../../queries/workOrder/createWorkOrderRequest';\nimport { uploadAttachment } from \"../attachment\";\nimport { getWorkOrderMetadataParentListItem } from \"../../queries/workOrder/getWorkOrderMetadataParentListItem\";\n\n/**\n *\n * This loads workOrder combo box items\n */\nexport function* workOrderLoadItems() {\n  const query = getWorkOrderMetadata();\n  try {\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true,\n    })\n    if (resp?.['EAMWorkOrder_getMetaData_UpeDefault']?.getListItems?.data) {\n      const comboItems = resp['EAMWorkOrder_getMetaData_UpeDefault'].getListItems.data;\n      const defaultValues = resp['EAMWorkOrder_getMetaData_UpeDefault'].screenLaunchdefaultvaluesUPEassistedforallProperties.data;\n      return yield put(actions.workOrder.comboItems.received(comboItems, defaultValues));\n    }\n    return yield put(actions.workOrder.comboItems.failed());\n\n  } catch (e) {\n    return yield put(actions.workOrder.comboItems.failed());\n  }\n}\n\n\nexport function* workOrderUpdateInit({ id }) {\n  const workflowItems = yield select(selectors.workOrderItems);\n  if (workflowItems.status !== 'success') {\n    //load required workflow combo items\n    yield call(workOrderLoadItems);\n  }\n  // const workflows = yield select(selectors.workOrders) || [];\n  // const workflow = workflows.find(workflow => workflow.id === id);\n  // if (workflow) {\n  //   return yield put(actions.workOrder.update.initSuccess(workflow));\n  // }\n  const defaultValues = yield select(selectors.workOrderDefaultValues);\n  const currentDate = convertUtcToTimezone({ date: new Date(), dateFormat: 'YYYY-MM-DD HH:mm:ss', isDateOnly: true })\n  return yield put(actions.workOrder.update.initSuccess({\n    id,\n    actionFlag: \"QUICKWO\",\n    WoEqpLocCode: defaultValues.WOEqpLocCode,\n    WoOnEqpLocFlag: \"E\",\n    WorkGroup: defaultValues.WorkGroupCode,\n    WorkOrderDesc: \"\",\n    WorkPhone1: defaultValues.WorkPhone1 === '-1' ? '' : defaultValues.WorkPhone1,\n    WorkPhone2: defaultValues.WorkPhone2 === '-1' ? '' : defaultValues.WorkPhone2,\n    WoScheduledComplDate: \"\",\n    WoScheduledComplTime: \"\",\n    WoScheduledStartDate: currentDate.split(' ')[0],\n    WoScheduledStartTime: currentDate.split(' ')[1],\n    WoSource: \"\",\n    WoStatus: \"\",\n    accountCode: \"\",\n    AdditionalFaiureInfo: \"\",\n    analysisCode: \"\",\n    contractNo: \"\",\n    CopyTasksFromProcedure: \"\",\n    CostCenterCode: \"PL1\",\n    CostType: \"RE\",\n    FailureDate: currentDate.split(' ')[0],\n    fbid: \"\",\n    WoSubGroup: \"\",\n    WoTime: currentDate.split(' ')[1],\n    WoType: defaultValues.TypeCode,\n    genfrom: \"\",\n    Guid: \"\",\n    holdReason: \"\",\n    InterruptedDatetime: \"\",\n    LeadCode: \"\",\n    MajorProblemCode: defaultValues.ProblemCode,\n    MajorProblemDesc: defaultValues.ProblemDesc,\n    ParentWOCode: \"\",\n    percentCompleted: 1.00,\n    PerformRCAFlag: defaultValues.PerformRCA === \"1\" ? \"1\" : \"0\",\n    PlanningGroup: defaultValues.PlanningGroupCode,\n    projectCode: \"\",\n    proposalid: \"\",\n    ReasonCode: \"\",\n    RejectionReason: \"\",\n    Remarks: \"\",\n    ScheduleBy: \"\",\n    SchedulingRemarks: \"\",\n    subAnalysisCode: \"\",\n    SupervisorCode: defaultValues.SupervisorCode,\n    TimeStamp: 1,\n    WoAuthRequiredFlag: \"0\",\n    WoAuthUser: \"\",\n    WoCategory: \"Ext\",\n    WoClearanceRequiredFlag: \"\",\n    WoDate: currentDate.split(' ')[0],\n    WoDuration: \"\",\n    WoEqpLocDescription: defaultValues.WOEqpLocDesc,\n    WoGroup: \"\",\n    WoMiscCost: \"\",\n    WoPermitType: \"\",\n    WoPriority: defaultValues.PriorityCode,\n    WoRank: \"\",\n    WorkOrderNo: \"\",\n    fileList: [],\n    CompanyBaseCurrency: defaultValues.CompanyBaseCurrency,\n    //{name: '', fileId: '', modeFlag}\n    // { filesIndividualRef: \"${file.fileId}\", filesMainRef: \"${file.name}\", ModeFlag: \"I\" },\n  }));\n}\n\nexport function* workOrderSave() {\n  const { value: workOrder = {} } = yield select(selectors.workOrder);\n  const query = createWorkOrderRequest(workOrder);\n  try {\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true,\n    })\n    if (resp?.errors) {\n      const parsedErrorJson = JSON.parse(resp.errors[0].message || \"{}\");\n      return yield put(actions.workOrder.update.saveFailed(parsedErrorJson.description || 'Something went wrong!'));\n    }\n    if (resp?.['EAMWorkOrder_postworkOrderCreation']?.createWorkOrder?.data) {\n      const { WorkOrderNoout } = resp['EAMWorkOrder_postworkOrderCreation'].createWorkOrder.data\n      return yield put(actions.workOrder.update.saveSuccess(WorkOrderNoout));\n    }\n    return yield put(actions.workOrder.update.saveFailed('Something went wrong!'));\n\n  } catch (e) {\n    const [error] = e.response.errors;\n    let message = 'Something went wrong!';\n    try {\n      const parsedErorMsg = JSON.parse(error.message);\n      if (parsedErorMsg?.[0]?.description) {\n        message = parsedErorMsg[0].description;\n      }\n\n    } catch (e) {\n      if (error.message) {\n        message = error.message;\n      }\n    }\n    return yield put(actions.workOrder.update.saveFailed(message));\n  }\n}\n\nexport function* workOrderAddAttachment({ file }) {\n  const { data, error } = yield call(uploadAttachment, { file });\n  if (data) {\n    yield put(actions.workOrder.update.addAttachmentSuccess({\n      filesIndividualRef: data.fileId, name: file.name, filesMainRef: data.name, relativePath: 'APIEamwrkreq',\n    }));\n  }\n  else {\n    yield put(actions.workOrder.update.addAttachmentFailed({ name: file.name }));\n  }\n}\n\nexport function* patchField({ fieldId, value }) {\n  // const {data, error} = yield call(uploadAttachment,{file});\n  if (fieldId === \"WoEqpLocCode\") {\n    const { value: workOrder } = yield select(selectors.workOrder);\n    const { WoOnEqpLocFlag } = workOrder || {};\n    const obj = yield select(selectors.findEquipmentLocation, value, WoOnEqpLocFlag);\n    yield put(actions.workOrder.update.patchField(\"criticality\", obj.CriticalityDesc));\n    yield put(actions.workOrder.update.patchField(\"ParentWOCode\", obj.ParentCode));\n  }\n}\n\nexport function* workOrderParentListItemRequest({ eqpLocCode, eqpOrLoc }) {\n  if (!eqpLocCode) {\n    return;\n  }\n  const opts = yield select(selectors.workOrderParentList, { eqpLocCode, eqpOrLoc });\n  if (opts) {\n    return;\n  }\n\n  const query = getWorkOrderMetadataParentListItem({ eqpLocCode, eqpOrLoc });\n  try {\n    const resp = yield call(apiCallWithRetry, {\n      opts: {},\n      query: query,\n      gCtxtCmp: 'workOrder',\n      hidden: true,\n    })\n    if (resp?.['EAMWorkOrder_getMetaData_UpeDefault']?.getListItems?.data?.Parentinfo) {\n      const defaultParentOptions = resp['EAMWorkOrder_getMetaData_UpeDefault'].getListItems.data?.Parentinfo;\n      return yield put(actions.workOrder.update.parentListItem.received({ value: defaultParentOptions, eqpLocCode, eqpOrLoc }));\n    }\n    // return yield put(actions.workOrder.comboItems.failed());\n\n  } catch (e) {\n    // return yield put(actions.workOrder.comboItems.failed());\n  }\n}\n\nexport const workOrderSagas = [\n  takeLatest(actionTypes.WORK_ORDER.COMBO_ITEMS.REQUEST, workOrderLoadItems),\n  takeLatest(actionTypes.WORK_ORDER.UPDATE.INIT, workOrderUpdateInit),\n  takeLatest(actionTypes.WORK_ORDER.UPDATE.PARENT_LIST_ITEM.REQUEST, workOrderParentListItemRequest),\n  takeEvery(actionTypes.WORK_ORDER.UPDATE.SAVE, workOrderSave),\n  takeLatest(actionTypes.WORK_ORDER.UPDATE.PATCH_FIELD, patchField),\n  takeEvery(actionTypes.WORK_ORDER.UPDATE.ADD_ATTACHMENT, workOrderAddAttachment),\n];\n"]},"metadata":{},"sourceType":"module"}