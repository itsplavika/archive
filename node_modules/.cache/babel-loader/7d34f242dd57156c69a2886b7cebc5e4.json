{"ast":null,"code":"import produce from 'immer';\nimport actionTypes from '../../../actions/types';\n\nconst reducer = (state = {}, action) => {\n  const {\n    type,\n    groupBy,\n    Actionflag,\n    value\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.INIT:\n        if (!draft.dashboard) {\n          draft.dashboard = {}; // draft.dashboard.status = 'requested';\n\n          draft.dashboard.selectedFilter = '';\n          draft.dashboard.filterOption = [];\n          draft.dashboard.count = {};\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.CHANGE_FILTER:\n        if (!draft.dashboard) {\n          draft.dashboard = {};\n        }\n\n        draft.dashboard.selectedFilter = groupBy;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.FILTER_SELECT:\n        draft.dashboard.selectedFilter = value;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.RECEIVED_COUNT:\n        if (!draft.dashboard[groupBy]) {\n          draft.dashboard[groupBy] = {};\n        }\n\n        draft.dashboard[groupBy].status = 'received';\n        draft.dashboard[groupBy].value = value;\n        break;\n\n      default:\n    }\n  });\n};\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\n\nselectors.dashboardSelectedFilter = state => {\n  var _state$dashboard;\n\n  return state === null || state === void 0 ? void 0 : (_state$dashboard = state.dashboard) === null || _state$dashboard === void 0 ? void 0 : _state$dashboard.selectedFilter;\n};\n\nselectors.wRDashboardCountList = state => {\n  var _state$dashboard2, _state$dashboard3;\n\n  const selectedFilter = state === null || state === void 0 ? void 0 : (_state$dashboard2 = state.dashboard) === null || _state$dashboard2 === void 0 ? void 0 : _state$dashboard2.selectedFilter;\n\n  if (!selectedFilter) {\n    return emptyObj;\n  }\n\n  return (state === null || state === void 0 ? void 0 : (_state$dashboard3 = state.dashboard) === null || _state$dashboard3 === void 0 ? void 0 : _state$dashboard3[selectedFilter]) || emptyObj;\n};\n\nselectors.wRDashboardStatusCountByTaskStatus = (state, taskStatus) => {\n  var _state$dashboard4, _state$dashboard4$Sta, _state$dashboard4$Sta2, _state$dashboard4$Sta3, _state$dashboard5, _state$dashboard5$Sta, _state$dashboard5$Sta2;\n\n  if (!(state === null || state === void 0 ? void 0 : (_state$dashboard4 = state.dashboard) === null || _state$dashboard4 === void 0 ? void 0 : (_state$dashboard4$Sta = _state$dashboard4.Status) === null || _state$dashboard4$Sta === void 0 ? void 0 : (_state$dashboard4$Sta2 = _state$dashboard4$Sta.value) === null || _state$dashboard4$Sta2 === void 0 ? void 0 : (_state$dashboard4$Sta3 = _state$dashboard4$Sta2.workrequestcount) === null || _state$dashboard4$Sta3 === void 0 ? void 0 : _state$dashboard4$Sta3.length)) {\n    return 0;\n  }\n\n  const item = state === null || state === void 0 ? void 0 : (_state$dashboard5 = state.dashboard) === null || _state$dashboard5 === void 0 ? void 0 : (_state$dashboard5$Sta = _state$dashboard5.Status) === null || _state$dashboard5$Sta === void 0 ? void 0 : (_state$dashboard5$Sta2 = _state$dashboard5$Sta.value.workrequestcount) === null || _state$dashboard5$Sta2 === void 0 ? void 0 : _state$dashboard5$Sta2.find(i => i.hdn_card_code === taskStatus);\n  return item.tabvalue || 0;\n};\n\nselectors.workRequestPriorityColor = (state, subGroup) => {\n  var _state$dashboard7, _state$dashboard7$Pri, _state$dashboard7$Pri2, _state$dashboard7$Pri3;\n\n  if (!subGroup) {\n    var _state$dashboard6, _state$dashboard6$Pri, _state$dashboard6$Pri2;\n\n    return state === null || state === void 0 ? void 0 : (_state$dashboard6 = state.dashboard) === null || _state$dashboard6 === void 0 ? void 0 : (_state$dashboard6$Pri = _state$dashboard6.Priority) === null || _state$dashboard6$Pri === void 0 ? void 0 : (_state$dashboard6$Pri2 = _state$dashboard6$Pri.value) === null || _state$dashboard6$Pri2 === void 0 ? void 0 : _state$dashboard6$Pri2.workrequestcount;\n  }\n\n  const obj = state === null || state === void 0 ? void 0 : (_state$dashboard7 = state.dashboard) === null || _state$dashboard7 === void 0 ? void 0 : (_state$dashboard7$Pri = _state$dashboard7.Priority) === null || _state$dashboard7$Pri === void 0 ? void 0 : (_state$dashboard7$Pri2 = _state$dashboard7$Pri.value) === null || _state$dashboard7$Pri2 === void 0 ? void 0 : (_state$dashboard7$Pri3 = _state$dashboard7$Pri2.workrequestcount) === null || _state$dashboard7$Pri3 === void 0 ? void 0 : _state$dashboard7$Pri3.find(i => i.hdn_card_code === subGroup);\n  return obj === null || obj === void 0 ? void 0 : obj.circlecolor;\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/workRequestV2/Dashboard/index.js"],"names":["produce","actionTypes","reducer","state","action","type","groupBy","Actionflag","value","draft","WORK_REQUEST_V2","DASHBOARD","INIT","dashboard","selectedFilter","filterOption","count","CHANGE_FILTER","FILTER_SELECT","RECEIVED_COUNT","status","emptyObj","selectors","dashboardSelectedFilter","wRDashboardCountList","wRDashboardStatusCountByTaskStatus","taskStatus","Status","workrequestcount","length","item","find","i","hdn_card_code","tabvalue","workRequestPriorityColor","subGroup","Priority","obj","circlecolor"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport actionTypes from '../../../actions/types';\n\nconst reducer = (state = {}, action) => {\n  const { type, groupBy, Actionflag, value } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.INIT:\n        if (!draft.dashboard) {\n          draft.dashboard = {};\n          // draft.dashboard.status = 'requested';\n          draft.dashboard.selectedFilter = '';\n          draft.dashboard.filterOption = [];\n          draft.dashboard.count = {};\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.CHANGE_FILTER:\n        if(!draft.dashboard)  {\n          draft.dashboard = {}\n        }\n        draft.dashboard.selectedFilter = groupBy;\n        break;\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.FILTER_SELECT:\n        draft.dashboard.selectedFilter = value;\n        break;\n      case actionTypes.WORK_REQUEST_V2.DASHBOARD.RECEIVED_COUNT:\n        if(!draft.dashboard[groupBy])  {\n          draft.dashboard[groupBy] = {}\n        }\n          draft.dashboard[groupBy].status = 'received';\n          draft.dashboard[groupBy].value = value;\n        break;\n      default:\n    }\n  })\n}\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\n\nselectors.dashboardSelectedFilter = (state) => {\n  return state?.dashboard?.selectedFilter;\n}\n\nselectors.wRDashboardCountList = (state) => {\n  const selectedFilter = state?.dashboard?.selectedFilter;\n  if(!selectedFilter){\n    return emptyObj;\n  }\n  return state?.dashboard?.[selectedFilter] || emptyObj;\n}\n\nselectors.wRDashboardStatusCountByTaskStatus = (state, taskStatus) => {\n  if(!state?.dashboard?.Status?.value?.workrequestcount?.length){\n    return 0;\n  }\n  const item = state?.dashboard?.Status?.value.workrequestcount?.find(i => i.hdn_card_code === taskStatus);\n  return item.tabvalue || 0;\n}\n\n\nselectors.workRequestPriorityColor = (state, subGroup) => {\n  if(!subGroup){\n    return state?.dashboard?.Priority?.value?.workrequestcount;\n  }\n  const obj = state?.dashboard?.Priority?.value?.workrequestcount?.find(i => i.hdn_card_code === subGroup);\n  return obj?.circlecolor;\n}\n"]},"metadata":{},"sourceType":"module"}