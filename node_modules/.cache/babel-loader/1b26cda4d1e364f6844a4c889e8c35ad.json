{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMSelect/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from 'prop-types';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport classnames from \"classnames\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  lessPaddingTop: {\n    padding: \"10px 12px 0px 12px\"\n  },\n  fieldName: {\n    fontSize: \"12px\",\n    color: \"#979DAC\"\n  },\n  select: {\n    '&:after': {\n      borderBottom: '0px !important'\n    }\n  },\n  fieldValue: {\n    fontSize: \"13px\"\n  },\n  marginLeft: {\n    marginLeft: 10\n  },\n  formControl: {\n    margin: 5,\n    width: \"100%\",\n    '& > div:first-child': {\n      '& > div:first-child': {// whiteSpace: 'pre-wrap'\n      }\n    }\n  }\n});\nconst emptySet = [];\nexport default function EAMSelect({\n  id,\n  title,\n  value,\n  shouldFormat,\n  labelField,\n  valueField,\n  options = emptySet,\n  onFieldChange,\n  lessPaddingTop\n}) {\n  _s();\n\n  const classes = useStyles();\n  const handleChange = useCallback(event => {\n    const {\n      value\n    } = event.target;\n\n    if (typeof id === 'object') {\n      const selectedItem = options.find(opt => opt[valueField] === value);\n      onFieldChange(id.value, value);\n      onFieldChange(id.label, selectedItem[labelField]);\n      return;\n    }\n\n    onFieldChange(id, value);\n  }, [id, labelField, onFieldChange, options, valueField]);\n  const renderValue = useCallback(() => {\n    if (!value) {\n      return 'Please Select';\n    }\n\n    const selectedItem = options.find(opt => {\n      var _opt$valueField;\n\n      return ((_opt$valueField = opt[valueField]) === null || _opt$valueField === void 0 ? void 0 : _opt$valueField.toLowerCase()) === value.toLowerCase();\n    });\n\n    if (!selectedItem) {\n      return value;\n    }\n\n    if (!shouldFormat) {\n      return selectedItem[labelField];\n    } else {\n      return `${selectedItem[labelField]} (${selectedItem[valueField]})`;\n    }\n  }, [labelField, options, shouldFormat, value, valueField]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormBoxControl, {\n      className: classnames({\n        [classes.lessPaddingTop]: lessPaddingTop\n      }),\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          id: id,\n          value: value,\n          onChange: handleChange,\n          displayEmpty: true,\n          className: classes.select,\n          native: false,\n          renderValue: renderValue,\n          inputProps: {\n            \"aria-label\": \"Without label\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), options.map(opt => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: opt[valueField],\n            children: opt[labelField]\n          }, opt[valueField], false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(EAMSelect, \"z2ojT+v+7MsemnN35G0kqaxMOtQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = EAMSelect;\nEAMSelect.propTypes = {\n  // id: PropTypes.isRequired,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  labelField: PropTypes.string.isRequired,\n  valueField: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onFieldChange: PropTypes.func.isRequired\n};\nEAMSelect.defaultProps = {\n  labelField: 'label',\n  valueField: 'value',\n  value: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMSelect\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMSelect/index.jsx"],"names":["makeStyles","React","useCallback","PropTypes","MenuItem","FormControl","Select","classnames","FormBoxControl","useStyles","lessPaddingTop","padding","fieldName","fontSize","color","select","borderBottom","fieldValue","marginLeft","formControl","margin","width","emptySet","EAMSelect","id","title","value","shouldFormat","labelField","valueField","options","onFieldChange","classes","handleChange","event","target","selectedItem","find","opt","label","renderValue","toLowerCase","map","propTypes","string","isRequired","array","func","defaultProps"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from 'prop-types';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport classnames from \"classnames\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\n\nconst useStyles = makeStyles({\n  lessPaddingTop: {\n    padding: \"10px 12px 0px 12px\",\n  },\n  fieldName: {\n    fontSize: \"12px\",\n    color: \"#979DAC\",\n  },\n  select: {\n    '&:after': {\n      borderBottom: '0px !important',\n    }\n  },\n  fieldValue: {\n    fontSize: \"13px\",\n  },\n\n  marginLeft: {\n    marginLeft: 10,\n  },\n  formControl: {\n    margin: 5,\n    width: \"100%\",\n    '& > div:first-child': {\n      '& > div:first-child': {\n        // whiteSpace: 'pre-wrap'\n      }\n    }\n  },\n});\n\nconst emptySet = [];\nexport default function EAMSelect({ id, title, value, shouldFormat, labelField, valueField, options = emptySet, onFieldChange, lessPaddingTop }) {\n  const classes = useStyles();\n  const handleChange = useCallback(event => {\n    const { value } = event.target;\n    if (typeof id === 'object') {\n      const selectedItem = options.find(opt => opt[valueField] === value);\n      onFieldChange(id.value, value)\n      onFieldChange(id.label, selectedItem[labelField])\n      return;\n    }\n    onFieldChange(id, value)\n  }, [id, labelField, onFieldChange, options, valueField]);\n\n  const renderValue = useCallback(() => {\n    if (!value) {\n      return 'Please Select';\n    }\n    const selectedItem = options.find(opt => opt[valueField]?.toLowerCase() === value.toLowerCase());\n    if (!selectedItem) {\n      return value;\n    }\n    if (!shouldFormat) {\n      return selectedItem[labelField];\n    } else {\n      return `${selectedItem[labelField]} (${selectedItem[valueField]})`;\n    }\n\n\n  }, [labelField, options, shouldFormat, value, valueField])\n  return (\n    <>\n      <FormBoxControl\n        className={classnames({ [classes.lessPaddingTop]: lessPaddingTop, })}\n        title={title}\n      >\n        <FormControl className={classes.formControl}>\n          <Select\n            id={id}\n            value={value}\n            onChange={handleChange}\n            displayEmpty\n            className={classes.select}\n            native={false}\n            renderValue={renderValue}\n            inputProps={{ \"aria-label\": \"Without label\" }}\n          >\n            <MenuItem value='' disabled>\n              Select option\n                            </MenuItem>\n            {options.map(opt => (\n              <MenuItem key={opt[valueField]} value={opt[valueField]}>{opt[labelField]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </FormBoxControl>\n    </>\n  );\n}\n\nEAMSelect.propTypes = {\n  // id: PropTypes.isRequired,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  labelField: PropTypes.string.isRequired,\n  valueField: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onFieldChange: PropTypes.func.isRequired,\n};\n\nEAMSelect.defaultProps = {\n  labelField: 'label',\n  valueField: 'value',\n  value: ''\n};\n"]},"metadata":{},"sourceType":"module"}