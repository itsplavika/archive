{"ast":null,"code":"import { AppSettings } from \"../appSettings\";\nexport const IDENTITY_CONFIG = {\n  authority: AppSettings.RIDS_AUTH_URL,\n  client_id: AppSettings.RIDS_AUTH_CLIENTID,\n  redirect_uri: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME + \"/callback\",\n  post_logout_redirect_uri: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME + \"/\" + \"signedout\",\n  audience: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME,\n  response_type: \"code\",\n  automaticSilentRenew: true,\n  loadUserInfo: false,\n  accessTokenExpiringNotificationTime: AppSettings.APP_ACCESSTOKEN_NOTIFICATIONTIME ? AppSettings.APP_ACCESSTOKEN_NOTIFICATIONTIME : 60,\n  scope: AppSettings.RIDS_AUTH_SCOPE\n};\nexport const METADATA_OIDC = {\n  issuer: AppSettings.RIDS_AUTH_URL,\n  //In case diff endpoint needed, have to add an additional entry in env,\n  jwks_uri: AppSettings.RIDS_AUTH_URL + \"/.well-known/openid-configuration/jwks\",\n  authorization_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/authorize\",\n  token_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/token\",\n  userinfo_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/userinfo\",\n  end_session_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/endsession\",\n  check_session_iframe: AppSettings.RIDS_AUTH_URL + \"/connect/checksession\",\n  revocation_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/revocation\",\n  introspection_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/introspect\"\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/utils/Const/AuthConst.jsx"],"names":["AppSettings","IDENTITY_CONFIG","authority","RIDS_AUTH_URL","client_id","RIDS_AUTH_CLIENTID","redirect_uri","BASE_APP_URL","BASE_APP_NAME","post_logout_redirect_uri","audience","response_type","automaticSilentRenew","loadUserInfo","accessTokenExpiringNotificationTime","APP_ACCESSTOKEN_NOTIFICATIONTIME","scope","RIDS_AUTH_SCOPE","METADATA_OIDC","issuer","jwks_uri","authorization_endpoint","token_endpoint","userinfo_endpoint","end_session_endpoint","check_session_iframe","revocation_endpoint","introspection_endpoint"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,SAAS,EAAEF,WAAW,CAACG,aADM;AAE7BC,EAAAA,SAAS,EAAEJ,WAAW,CAACK,kBAFM;AAG7BC,EAAAA,YAAY,EAAEN,WAAW,CAACO,YAAZ,GAA2B,GAA3B,GAAiCP,WAAW,CAACQ,aAA7C,GAA6D,WAH9C;AAI7BC,EAAAA,wBAAwB,EAAET,WAAW,CAACO,YAAZ,GAA2B,GAA3B,GAAiCP,WAAW,CAACQ,aAA7C,GAA6D,GAA7D,GAAmE,WAJhE;AAK7BE,EAAAA,QAAQ,EAAEV,WAAW,CAACO,YAAZ,GAA2B,GAA3B,GAAiCP,WAAW,CAACQ,aAL1B;AAM7BG,EAAAA,aAAa,EAAE,MANc;AAO7BC,EAAAA,oBAAoB,EAAE,IAPO;AAQ7BC,EAAAA,YAAY,EAAE,KARe;AAS7BC,EAAAA,mCAAmC,EAAEd,WAAW,CAACe,gCAAZ,GAA+Cf,WAAW,CAACe,gCAA3D,GAA8F,EATtG;AAU7BC,EAAAA,KAAK,EAAEhB,WAAW,CAACiB;AAVU,CAAxB;AAaP,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,MAAM,EAAEnB,WAAW,CAACG,aADO;AACQ;AACnCiB,EAAAA,QAAQ,EACNpB,WAAW,CAACG,aAAZ,GAA4B,wCAHH;AAI3BkB,EAAAA,sBAAsB,EAAErB,WAAW,CAACG,aAAZ,GAA4B,oBAJzB;AAK3BmB,EAAAA,cAAc,EAAEtB,WAAW,CAACG,aAAZ,GAA4B,gBALjB;AAM3BoB,EAAAA,iBAAiB,EAAEvB,WAAW,CAACG,aAAZ,GAA4B,mBANpB;AAO3BqB,EAAAA,oBAAoB,EAAExB,WAAW,CAACG,aAAZ,GAA4B,qBAPvB;AAQ3BsB,EAAAA,oBAAoB,EAClBzB,WAAW,CAACG,aAAZ,GAA4B,uBATH;AAU3BuB,EAAAA,mBAAmB,EAAE1B,WAAW,CAACG,aAAZ,GAA4B,qBAVtB;AAW3BwB,EAAAA,sBAAsB,EAAE3B,WAAW,CAACG,aAAZ,GAA4B;AAXzB,CAAtB","sourcesContent":["import { AppSettings } from \"../appSettings\";\n\nexport const IDENTITY_CONFIG = {\n  authority: AppSettings.RIDS_AUTH_URL,\n  client_id: AppSettings.RIDS_AUTH_CLIENTID,\n  redirect_uri: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME + \"/callback\",\n  post_logout_redirect_uri: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME + \"/\" + \"signedout\",\n  audience: AppSettings.BASE_APP_URL + \"/\" + AppSettings.BASE_APP_NAME,\n  response_type: \"code\",\n  automaticSilentRenew: true,\n  loadUserInfo: false,\n  accessTokenExpiringNotificationTime: AppSettings.APP_ACCESSTOKEN_NOTIFICATIONTIME ? AppSettings.APP_ACCESSTOKEN_NOTIFICATIONTIME : 60,\n  scope: AppSettings.RIDS_AUTH_SCOPE\n};\n\nexport const METADATA_OIDC = {\n  issuer: AppSettings.RIDS_AUTH_URL, //In case diff endpoint needed, have to add an additional entry in env,\n  jwks_uri:\n    AppSettings.RIDS_AUTH_URL + \"/.well-known/openid-configuration/jwks\",\n  authorization_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/authorize\",\n  token_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/token\",\n  userinfo_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/userinfo\",\n  end_session_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/endsession\",\n  check_session_iframe:\n    AppSettings.RIDS_AUTH_URL + \"/connect/checksession\",\n  revocation_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/revocation\",\n  introspection_endpoint: AppSettings.RIDS_AUTH_URL + \"/connect/introspect\"\n};\n"]},"metadata":{},"sourceType":"module"}