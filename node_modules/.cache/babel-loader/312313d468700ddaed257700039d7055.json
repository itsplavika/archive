{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkOrder/Manage/Attachments/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../../../actions\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../../../../reducers\";\nimport { shallowEqual } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nimport { useCallback } from \"react\";\nimport AttachmentsV2 from \"../../../../components/AttachmentsV2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptySet = [];\nexport default function WorkOrderAttachments({\n  slideView\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const allFiles = useSelector(state => {\n    var _selectors$workOrder;\n\n    const {\n      fileList\n    } = ((_selectors$workOrder = selectors.workOrder(state)) === null || _selectors$workOrder === void 0 ? void 0 : _selectors$workOrder.value) || [];\n    return fileList || emptySet;\n  }, shallowEqual);\n  const filesUploadedToServer = useMemo(() => {\n    return allFiles.filter(i => i.status === 'UPLOADING' || i.status === 'UPLOADED');\n  }, [allFiles]);\n  const handleUpload = useCallback((file, base64Data) => {\n    dispatch(actions.workOrder.update.addAttachment(file, base64Data));\n  }, [dispatch]);\n  const handleDelete = useCallback(fileId => {\n    dispatch(actions.workOrder.update.removeAttachment(fileId));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AttachmentsV2, {\n    files: filesUploadedToServer,\n    onUpload: handleUpload,\n    slideView: slideView,\n    onDelete: handleDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkOrderAttachments, \"PCWRSCMFVRymvdrD9wbQbduET14=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WorkOrderAttachments;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkOrderAttachments\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkOrder/Manage/Attachments/index.jsx"],"names":["React","useDispatch","actions","useSelector","selectors","shallowEqual","useMemo","useCallback","AttachmentsV2","emptySet","WorkOrderAttachments","slideView","dispatch","allFiles","state","fileList","workOrder","value","filesUploadedToServer","filter","i","status","handleUpload","file","base64Data","update","addAttachment","handleDelete","fileId","removeAttachment"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAO,gCAAP,C,CAAyC;;AACzC,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAGA,MAAMC,QAAQ,GAAG,EAAjB;AACA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA6C;AAAA;;AAC1D,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAI;AAAA;;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAe,yBAAAX,SAAS,CAACY,SAAV,CAAoBF,KAApB,+EAA4BG,KAA5B,KAAqC,EAA1D;AACA,WAAOF,QAAQ,IAAIN,QAAnB;AACD,GAH2B,EAGzBJ,YAHyB,CAA5B;AAKA,QAAMa,qBAAqB,GAAGZ,OAAO,CAAC,MAAM;AAC1C,WAAOO,QAAQ,CAACM,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,WAAb,IAA4BD,CAAC,CAACC,MAAF,KAAa,UAA9D,CAAP;AACD,GAFoC,EAElC,CAACR,QAAD,CAFkC,CAArC;AAIA,QAAMS,YAAY,GAAGf,WAAW,CAAC,CAACgB,IAAD,EAAOC,UAAP,KAAsB;AACrDZ,IAAAA,QAAQ,CAACV,OAAO,CAACc,SAAR,CAAkBS,MAAlB,CAAyBC,aAAzB,CAAuCH,IAAvC,EAA6CC,UAA7C,CAAD,CAAR;AACD,GAF+B,EAE7B,CAACZ,QAAD,CAF6B,CAAhC;AAIA,QAAMe,YAAY,GAAGpB,WAAW,CAAEqB,MAAD,IAAY;AAC3ChB,IAAAA,QAAQ,CAACV,OAAO,CAACc,SAAR,CAAkBS,MAAlB,CAAyBI,gBAAzB,CAA0CD,MAA1C,CAAD,CAAR;AACD,GAF+B,EAE7B,CAAChB,QAAD,CAF6B,CAAhC;AAIA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEM,qBADT;AAEE,IAAA,QAAQ,EAAEI,YAFZ;AAGE,IAAA,SAAS,EAAEX,SAHb;AAIE,IAAA,QAAQ,EAAEgB;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BuBjB,oB;UACLT,W,EACAE,W;;;KAFKO,oB","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../../../actions\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../../../../reducers\";\nimport { shallowEqual } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\nimport { useCallback } from \"react\";\nimport AttachmentsV2 from \"../../../../components/AttachmentsV2\";\n\n\nconst emptySet = [];\nexport default function WorkOrderAttachments({ slideView }) {\n  const dispatch = useDispatch();\n  const allFiles = useSelector(state => {\n    const { fileList } = selectors.workOrder(state)?.value || [];\n    return fileList || emptySet\n  }, shallowEqual)\n\n  const filesUploadedToServer = useMemo(() => {\n    return allFiles.filter(i => i.status === 'UPLOADING' || i.status === 'UPLOADED');\n  }, [allFiles])\n\n  const handleUpload = useCallback((file, base64Data) => {\n    dispatch(actions.workOrder.update.addAttachment(file, base64Data));\n  }, [dispatch])\n\n  const handleDelete = useCallback((fileId) => {\n    dispatch(actions.workOrder.update.removeAttachment(fileId));\n  }, [dispatch])\n\n  return (\n    <AttachmentsV2\n      files={filesUploadedToServer}\n      onUpload={handleUpload}\n      slideView={slideView}\n      onDelete={handleDelete}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}