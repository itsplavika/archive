{"ast":null,"code":"import { jsonToGraphQLQuery } from 'json-to-graphql-query';\nexport function getWorkRequestListCount(obj) {\n  const {\n    Actionflag = '',\n    Category = '',\n    HiddenControl1 = '',\n    HiddenControl2 = '',\n    LocDesc = '',\n    PlangroupCode = '',\n    PlangroupDesc = '',\n    Priority = '',\n    ReportedTimeCode = '',\n    Type = '',\n    WorkrequestNo = '',\n    WorkrequestOn = '',\n    eqpDesc = '',\n    equipmentCode = '',\n    fromDate = '',\n    groupBy = '',\n    locationCode = '',\n    reportedBy = '',\n    srchby = '',\n    srchbyinpval = '',\n    status = '',\n    toDate = '',\n    workGroup = '',\n    workgroupDesc = '',\n    workorderNo = '',\n    wrDesc = ''\n  } = obj;\n  const query = {\n    '': {\n      workRequest_getCountBySts: {\n        gettheCountofWorkRequestsgroupedbyStatus: {\n          __args: {\n            Actionflag: Actionflag,\n            Category: Category,\n            HiddenControl1: HiddenControl1,\n            HiddenControl2: HiddenControl2,\n            LocDesc: LocDesc,\n            PlangroupCode: PlangroupCode,\n            PlangroupDesc: PlangroupDesc,\n            Priority: Priority,\n            ReportedTimeCode: ReportedTimeCode,\n            Type: Type,\n            WorkrequestNo: WorkrequestNo,\n            WorkrequestOn: WorkrequestOn,\n            eqpDesc: eqpDesc,\n            equipmentCode: equipmentCode,\n            fromDate: fromDate,\n            groupBy: groupBy,\n            locationCode: locationCode,\n            reportedBy: reportedBy,\n            srchby: srchby,\n            srchbyinpval: srchbyinpval,\n            status: status,\n            toDate: toDate,\n            workGroup: workGroup,\n            workgroupDesc: workgroupDesc,\n            workorderNo: workorderNo,\n            wrDesc: wrDesc\n          },\n          data: {\n            AvgClosureUOM: true,\n            AvgClosureTime: true,\n            AvgResponseUOM: true,\n            AvgResponseTime: true,\n            workhubcmbdesc: true,\n            workhubcmbcode: true,\n            workrequestcount: {\n              tabdata: true,\n              tabvalue: true,\n              tabSelection: true,\n              hdn_card_code: true,\n              circlecolor: true,\n              labelSelection: true\n            },\n            workfiltercmbcode: true,\n            workfiltercmbdesc: true\n          }\n        }\n      }\n    }\n  };\n  return jsonToGraphQLQuery(query, {\n    pretty: true\n  });\n} // export const GETCOUNTBYSTS = gql`\n// query Query($Actionflag= '',,\n//   $groupBy:String,\n//   $status:String,\n//   $Category= '',,\n//   $LocDesc= '',,\n//   $PlangroupCode= '',,\n//   $Priority= '',,\n//   $Type= '',,\n//   $WorkrequestNo= '',,\n//   $WorkrequestOn= '',,\n//   $equipmentCode= '',,\n//   $fromDate= '',,\n//   $locationCode= '',,\n//   $reportedBy= '',,\n//   $srchby= '',,\n//   $srchbyinpval= '',,\n//   $toDate= '',,\n//   $workGroup= '',\n//   ){\n//   workRequest_getCountBySts {\n//       gettheCountofWorkRequestsgroupedbyStatus(Actionflag: $Actionflag\n//       groupBy: $groupBy\n//       Category: $Category\n//       LocDesc: $LocDesc\n//       PlangroupCode: $PlangroupCode\n//       Priority: $Priority\n//       Type: $Type\n//       WorkrequestNo: $WorkrequestNo\n//       WorkrequestOn: $WorkrequestOn\n//       equipmentCode: $equipmentCode\n//       fromDate: $fromDate\n//       locationCode: $locationCode\n//       reportedBy: $reportedBy\n//       srchby: $srchby\n//       srchbyinpval: $srchbyinpval\n//       status: $status\n//       toDate: $toDate\n//       workGroup: $workGroup        \n//       ) {\n//       data {\n//           AvgClosureUOM\n//           AvgClosureTime\n//           AvgResponseUOM\n//           AvgResponseTime\n//           workhubcmbdesc\n//           workhubcmbcode\n//           workrequestcount {\n//           tabdata\n//           tabvalue\n//           tabSelection\n//           hdn_card_code\n//           circlecolor\n//           labelSelection\n//           }\n//           workfiltercmbcode\n//           workfiltercmbdesc\n//       }\n//       }\n//   }\n// }\n// `;","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/queries/workRequest/getWorkRequestListCount.js"],"names":["jsonToGraphQLQuery","getWorkRequestListCount","obj","Actionflag","Category","HiddenControl1","HiddenControl2","LocDesc","PlangroupCode","PlangroupDesc","Priority","ReportedTimeCode","Type","WorkrequestNo","WorkrequestOn","eqpDesc","equipmentCode","fromDate","groupBy","locationCode","reportedBy","srchby","srchbyinpval","status","toDate","workGroup","workgroupDesc","workorderNo","wrDesc","query","workRequest_getCountBySts","gettheCountofWorkRequestsgroupedbyStatus","__args","data","AvgClosureUOM","AvgClosureTime","AvgResponseUOM","AvgResponseTime","workhubcmbdesc","workhubcmbcode","workrequestcount","tabdata","tabvalue","tabSelection","hdn_card_code","circlecolor","labelSelection","workfiltercmbcode","workfiltercmbdesc","pretty"],"mappings":"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","sourcesContent":["import { jsonToGraphQLQuery } from 'json-to-graphql-query';\n\nexport function getWorkRequestListCount(obj) {\n  const {\n    Actionflag= '',\n    Category= '',\n    HiddenControl1= '',\n    HiddenControl2= '',\n    LocDesc= '',\n    PlangroupCode= '',\n    PlangroupDesc= '',\n    Priority= '',\n    ReportedTimeCode= '',\n    Type= '',\n    WorkrequestNo= '',\n    WorkrequestOn= '',\n    eqpDesc= '',\n    equipmentCode= '',\n    fromDate= '',\n    groupBy= '',\n    locationCode= '',\n    reportedBy= '',\n    srchby= '',\n    srchbyinpval= '',\n    status= '',\n    toDate= '',\n    workGroup= '',\n    workgroupDesc= '',\n    workorderNo= '',\n    wrDesc= '',\n  } = obj\n  const query = {\n    '': {\n      workRequest_getCountBySts: {\n        gettheCountofWorkRequestsgroupedbyStatus: {\n          __args: {\n            Actionflag: Actionflag,\n            Category: Category,\n            HiddenControl1: HiddenControl1,\n            HiddenControl2: HiddenControl2,\n            LocDesc: LocDesc,\n            PlangroupCode: PlangroupCode,\n            PlangroupDesc: PlangroupDesc,\n            Priority: Priority,\n            ReportedTimeCode: ReportedTimeCode,\n            Type: Type,\n            WorkrequestNo: WorkrequestNo,\n            WorkrequestOn: WorkrequestOn,\n            eqpDesc: eqpDesc,\n            equipmentCode: equipmentCode,\n            fromDate: fromDate,\n            groupBy: groupBy,\n            locationCode: locationCode,\n            reportedBy: reportedBy,\n            srchby: srchby,\n            srchbyinpval: srchbyinpval,\n            status: status,\n            toDate: toDate,\n            workGroup: workGroup,\n            workgroupDesc: workgroupDesc,\n            workorderNo: workorderNo,\n            wrDesc: wrDesc,\n          },\n          data: {\n            AvgClosureUOM: true,\n            AvgClosureTime: true,\n            AvgResponseUOM: true,\n            AvgResponseTime: true,\n            workhubcmbdesc: true,\n            workhubcmbcode: true,\n            workrequestcount: {\n              tabdata: true,\n              tabvalue: true,\n              tabSelection: true,\n              hdn_card_code: true,\n              circlecolor: true,\n              labelSelection: true,\n            },\n            workfiltercmbcode: true,\n            workfiltercmbdesc: true,\n          }\n        }\n      }\n    }\n  }\n  return jsonToGraphQLQuery(query, { pretty: true });\n}\n\n// export const GETCOUNTBYSTS = gql`\n// query Query($Actionflag= '',,\n//   $groupBy:String,\n//   $status:String,\n//   $Category= '',,\n//   $LocDesc= '',,\n//   $PlangroupCode= '',,\n//   $Priority= '',,\n//   $Type= '',,\n//   $WorkrequestNo= '',,\n//   $WorkrequestOn= '',,\n//   $equipmentCode= '',,\n//   $fromDate= '',,\n//   $locationCode= '',,\n//   $reportedBy= '',,\n//   $srchby= '',,\n//   $srchbyinpval= '',,\n//   $toDate= '',,\n//   $workGroup= '',\n//   ){\n//   workRequest_getCountBySts {\n//       gettheCountofWorkRequestsgroupedbyStatus(Actionflag: $Actionflag\n//       groupBy: $groupBy\n//       Category: $Category\n//       LocDesc: $LocDesc\n//       PlangroupCode: $PlangroupCode\n//       Priority: $Priority\n//       Type: $Type\n//       WorkrequestNo: $WorkrequestNo\n//       WorkrequestOn: $WorkrequestOn\n//       equipmentCode: $equipmentCode\n//       fromDate: $fromDate\n//       locationCode: $locationCode\n//       reportedBy: $reportedBy\n//       srchby: $srchby\n//       srchbyinpval: $srchbyinpval\n//       status: $status\n//       toDate: $toDate\n//       workGroup: $workGroup        \n//       ) {\n//       data {\n//           AvgClosureUOM\n//           AvgClosureTime\n//           AvgResponseUOM\n//           AvgResponseTime\n//           workhubcmbdesc\n//           workhubcmbcode\n//           workrequestcount {\n//           tabdata\n//           tabvalue\n//           tabSelection\n//           hdn_card_code\n//           circlecolor\n//           labelSelection\n//           }\n//           workfiltercmbcode\n//           workfiltercmbdesc\n//       }\n//       }\n//   }\n// }\n// `;\n"]},"metadata":{},"sourceType":"module"}