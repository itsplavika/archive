{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/Spinner/index.jsx\";\n// import ClipLoader from \"react-spinners/ClipLoader\";\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport GridLoader from 'react-spinners/GridLoader';\nimport MoonLoader from 'react-spinners/MoonLoader';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport { css } from \"@emotion/react\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  color: red\n\n`;\nconst color = \"#1c96e7\";\nexport default function Spinner({\n  speed = 1,\n  className,\n  type,\n  size = 28\n}) {\n  const renderSpinner = () => {\n    if (type === 'grid') {\n      return /*#__PURE__*/_jsxDEV(GridLoader, {\n        speedMultiplier: speed,\n        loading: true,\n        css: override,\n        size: size,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this);\n    } else if (type === 'moon') {\n      return /*#__PURE__*/_jsxDEV(MoonLoader, {\n        speedMultiplier: speed,\n        loading: true,\n        css: override,\n        size: size,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this);\n    } else if (type === 'beat') {\n      return /*#__PURE__*/_jsxDEV(BeatLoader, {\n        margin: 2,\n        speedMultiplier: speed,\n        loading: true,\n        css: override,\n        size: size,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this);\n    } else /*#__PURE__*/_jsxDEV(BounceLoader, {\n      speedMultiplier: speed,\n      loading: true,\n      css: override,\n      size: size,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: renderSpinner()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Spinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/Spinner/index.jsx"],"names":["BounceLoader","GridLoader","MoonLoader","BeatLoader","css","override","color","Spinner","speed","className","type","size","renderSpinner"],"mappings":";AAAA;AACA,OAAOA,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAGA,SAASC,GAAT,QAAoB,gBAApB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGD,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAME,KAAK,GAAG,SAAd;AACA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAK,GAAG,CAAV;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,IAAI,GAAG;AAArC,CAAjB,EAA4D;AACzE,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,0BAAQ,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEF,KAA7B;AAAoC,QAAA,OAAO,MAA3C;AAA4C,QAAA,GAAG,EAAEH,QAAjD;AAA2D,QAAA,IAAI,EAAEM,IAAjE;AAAuE,QAAA,KAAK,EAAEL;AAA9E;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFD,MAGK,IAAII,IAAI,KAAK,MAAb,EAAqB;AACxB,0BAAQ,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEF,KAA7B;AAAoC,QAAA,OAAO,MAA3C;AAA4C,QAAA,GAAG,EAAEH,QAAjD;AAA2D,QAAA,IAAI,EAAEM,IAAjE;AAAuE,QAAA,KAAK,EAAEL;AAA9E;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFI,MAGA,IAAII,IAAI,KAAK,MAAb,EAAqB;AACxB,0BAAQ,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,CAApB;AAAuB,QAAA,eAAe,EAAEF,KAAxC;AAA+C,QAAA,OAAO,MAAtD;AAAuD,QAAA,GAAG,EAAEH,QAA5D;AAAsE,QAAA,IAAI,EAAEM,IAA5E;AAAkF,QAAA,KAAK,EAAEL;AAAzF;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFI,MAIA,aAAC,QAAC,YAAD;AAAc,MAAA,eAAe,EAAEE,KAA/B;AAAsC,MAAA,OAAO,MAA7C;AAA8C,MAAA,GAAG,EAAEH,QAAnD;AAA6D,MAAA,IAAI,EAAEM,IAAnE;AAAyE,MAAA,KAAK,EAAEL;AAAhF;AAAA;AAAA;AAAA;AAAA,YAAD;AACN,GAZD;;AAaA,sBACE;AAAM,IAAA,SAAS,EAAEG,SAAjB;AAAA,cACGG,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KApBuBL,O","sourcesContent":["// import ClipLoader from \"react-spinners/ClipLoader\";\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport GridLoader from 'react-spinners/GridLoader';\nimport MoonLoader from 'react-spinners/MoonLoader';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nimport { css } from \"@emotion/react\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  color: red\n\n`;\nconst color = \"#1c96e7\";\nexport default function Spinner({ speed = 1, className, type, size = 28 }) {\n  const renderSpinner = () => {\n    if (type === 'grid') {\n      return (<GridLoader speedMultiplier={speed} loading css={override} size={size} color={color} />);\n    }\n    else if (type === 'moon') {\n      return (<MoonLoader speedMultiplier={speed} loading css={override} size={size} color={color} />);\n    }\n    else if (type === 'beat') {\n      return (<BeatLoader margin={2} speedMultiplier={speed} loading css={override} size={size} color={color} />);\n    }\n\n    else (<BounceLoader speedMultiplier={speed} loading css={override} size={size} color={color} />);\n  }\n  return (\n    <span className={className}>\n      {renderSpinner()}\n\n    </span>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}