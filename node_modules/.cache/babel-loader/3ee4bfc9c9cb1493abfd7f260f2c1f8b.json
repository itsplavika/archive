{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\"; //import { doIt } from '../../runtime/modern.enterprise.SDK_EMPTY.js';\n//import '../../runtime/modern.enterprise.SDK_FULL.js';\n//import '../../runtime/modern.material.fewest.SDK_FULL.js';\n//import '@sencha/ext-web-components-modern-enterprise';\n//import '@sencha/ext-web-components-modern-material';\n//import { addRuntime} from './util.js';\n\nvar ElementParser = function () {\n  var toolkit = 'modern'; //var theme = 'material';\n  //var themedefined = false\n  //for (var i = 0; i < document.styleSheets.length; i++) {\n  //  if (document.styleSheets[i].href.includes('material-all.css') == true) {\n  //    themedefined = true;\n  //  }\n  //  if (document.styleSheets[i].href.includes('material-all.css') == true) {\n  //    themedefined = true;\n  //  }\n  //}\n  //if (!themedefined) {\n  //  import('./engine/modern/themes/modern.material.fewest.js')\n  //  .then((something) => {\n  //     console.log('importing theme');\n  //  });\n  //}\n  //if (window['Ext'] == undefined) {\n  //  doIt()\n  //  //addRuntime(toolkit, theme);\n  //}\n\n  if (Ext.isModern == true) {\n    var ElementCell = Ext.define('Ext.ElementCell', {\n      extend: 'Ext.grid.cell.Cell',\n      xtype: 'elementcell'\n    });\n  }\n\n  var DCL = 'DOMContentLoaded';\n  var init = new window.WeakMap();\n  var queue = [];\n\n  var isParsed = function isParsed(el) {\n    do {\n      if (el.nextSibling) return true;\n    } while (el = el.parentNode);\n\n    return false;\n  };\n\n  var upgrade = function upgrade() {\n    queue.splice(0).forEach(function (info) {\n      if (init.get(info[0]) !== true) {\n        init.set(info[0], true);\n        info[0][info[1]]();\n      }\n    });\n  };\n\n  document.addEventListener(DCL, upgrade);\n\n  var ElementParser = /*#__PURE__*/function (_HTMLElement) {\n    _inheritsLoose(ElementParser, _HTMLElement);\n\n    function ElementParser() {\n      return _HTMLElement.apply(this, arguments) || this;\n    }\n\n    ElementParser.withParsedCallback = function withParsedCallback(Class, name) {\n      var _Object$definePropert;\n\n      if (name === void 0) {\n        name = 'parsed';\n      }\n\n      var prototype = Class.prototype;\n      var connectedCallback = prototype.connectedCallback;\n      var method = name + 'Callback';\n\n      var cleanUp = function cleanUp(el, observer, ownerDocument, onDCL) {\n        observer.disconnect();\n        ownerDocument.removeEventListener(DCL, onDCL);\n        parsedCallback(el);\n      };\n\n      var parsedCallback = function parsedCallback(el) {\n        if (!queue.length) requestAnimationFrame(upgrade);\n        queue.push([el, method]);\n      };\n\n      Object.defineProperties(prototype, (_Object$definePropert = {\n        connectedCallback: {\n          configurable: true,\n          value: function value() {\n            if (connectedCallback) {\n              connectedCallback.apply(this, arguments);\n            }\n\n            var self = this;\n\n            if (method in this && !init.has(this)) {\n              var ownerDocument = self.ownerDocument;\n              init.set(self, false);\n\n              if (ownerDocument.readyState === 'interactive' || ownerDocument.readyState === 'complete' || isParsed(self)) {\n                parsedCallback(self);\n              } else {\n                var onDCL = function onDCL() {\n                  return cleanUp(self, observer, ownerDocument, onDCL);\n                };\n\n                ownerDocument.addEventListener(DCL, onDCL);\n                var observer = new MutationObserver(function () {\n                  /* istanbul ignore else */\n                  if (isParsed(self)) cleanUp(self, observer, ownerDocument, onDCL);\n                });\n                observer.observe(self.parentNode, {\n                  childList: true,\n                  subtree: true\n                });\n              }\n            } else {\n              requestAnimationFrame(function () {\n                self['parsedCallback']();\n              }); //setTimeout(function(){\n              //  self['parsedCallback']();\n              //}, 0);\n            }\n          }\n        }\n      }, _Object$definePropert[name] = {\n        configurable: true,\n        get: function get() {\n          return init.get(this) === true;\n        }\n      }, _Object$definePropert));\n      return Class;\n    };\n\n    return ElementParser;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n  return ElementParser.withParsedCallback(ElementParser);\n}();\n\nexport default ElementParser; //var framework = 'modern'\n//var list= document.all;\n//for (var i = 0; i < list.length; i++) {\n//  if (list[i].tagName == 'SCRIPT') {\n//    if (list[i].type == 'module') {\n//      var s = list[i].getAttribute('src');\n//      var modern = s.includes('modern');\n//      var classic = s.includes('classic');\n//      if (modern) { framework = 'modern' }\n//      if (classic) { framework = 'classic' }\n//    }\n//  }\n//}\n//function getIndicesOf(searchStr, str, caseSensitive) {\n//  var searchStrLen = searchStr.length;\n//  if (searchStrLen == 0) {return [];}\n//  var startIndex = 0, index, indices = [];\n//  if (!caseSensitive) {\n//    str = str.toLowerCase();\n//    searchStr = searchStr.toLowerCase();\n//  }\n//  while ((index = str.indexOf(searchStr, startIndex)) > -1) {\n//    indices.push(index);\n//    startIndex = index + searchStrLen;\n//  }\n//  return indices;\n//}\n//var indices = getIndicesOf(\"/\", import.meta.url);\n//var rootPath = import.meta.url.substring(0,indices[indices.length-2])\n//var baseFolder = rootPath + \"/ext-runtime-\" + toolkit;","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/node_modules/@sencha/ext-web-components-modern/dist/common/ElementParser.js"],"names":["_inheritsLoose","_wrapNativeSuper","ElementParser","toolkit","Ext","isModern","ElementCell","define","extend","xtype","DCL","init","window","WeakMap","queue","isParsed","el","nextSibling","parentNode","upgrade","splice","forEach","info","get","set","document","addEventListener","_HTMLElement","apply","arguments","withParsedCallback","Class","name","_Object$definePropert","prototype","connectedCallback","method","cleanUp","observer","ownerDocument","onDCL","disconnect","removeEventListener","parsedCallback","length","requestAnimationFrame","push","Object","defineProperties","configurable","value","self","has","readyState","MutationObserver","observe","childList","subtree","HTMLElement"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\n//import { doIt } from '../../runtime/modern.enterprise.SDK_EMPTY.js';\n//import '../../runtime/modern.enterprise.SDK_FULL.js';\n//import '../../runtime/modern.material.fewest.SDK_FULL.js';\n//import '@sencha/ext-web-components-modern-enterprise';\n//import '@sencha/ext-web-components-modern-material';\n//import { addRuntime} from './util.js';\nvar ElementParser = function () {\n  var toolkit = 'modern'; //var theme = 'material';\n  //var themedefined = false\n  //for (var i = 0; i < document.styleSheets.length; i++) {\n  //  if (document.styleSheets[i].href.includes('material-all.css') == true) {\n  //    themedefined = true;\n  //  }\n  //  if (document.styleSheets[i].href.includes('material-all.css') == true) {\n  //    themedefined = true;\n  //  }\n  //}\n  //if (!themedefined) {\n  //  import('./engine/modern/themes/modern.material.fewest.js')\n  //  .then((something) => {\n  //     console.log('importing theme');\n  //  });\n  //}\n  //if (window['Ext'] == undefined) {\n  //  doIt()\n  //  //addRuntime(toolkit, theme);\n  //}\n\n  if (Ext.isModern == true) {\n    var ElementCell = Ext.define('Ext.ElementCell', {\n      extend: 'Ext.grid.cell.Cell',\n      xtype: 'elementcell'\n    });\n  }\n\n  var DCL = 'DOMContentLoaded';\n  var init = new window.WeakMap();\n  var queue = [];\n\n  var isParsed = function isParsed(el) {\n    do {\n      if (el.nextSibling) return true;\n    } while (el = el.parentNode);\n\n    return false;\n  };\n\n  var upgrade = function upgrade() {\n    queue.splice(0).forEach(function (info) {\n      if (init.get(info[0]) !== true) {\n        init.set(info[0], true);\n        info[0][info[1]]();\n      }\n    });\n  };\n\n  document.addEventListener(DCL, upgrade);\n\n  var ElementParser = /*#__PURE__*/function (_HTMLElement) {\n    _inheritsLoose(ElementParser, _HTMLElement);\n\n    function ElementParser() {\n      return _HTMLElement.apply(this, arguments) || this;\n    }\n\n    ElementParser.withParsedCallback = function withParsedCallback(Class, name) {\n      var _Object$definePropert;\n\n      if (name === void 0) {\n        name = 'parsed';\n      }\n\n      var prototype = Class.prototype;\n      var connectedCallback = prototype.connectedCallback;\n      var method = name + 'Callback';\n\n      var cleanUp = function cleanUp(el, observer, ownerDocument, onDCL) {\n        observer.disconnect();\n        ownerDocument.removeEventListener(DCL, onDCL);\n        parsedCallback(el);\n      };\n\n      var parsedCallback = function parsedCallback(el) {\n        if (!queue.length) requestAnimationFrame(upgrade);\n        queue.push([el, method]);\n      };\n\n      Object.defineProperties(prototype, (_Object$definePropert = {\n        connectedCallback: {\n          configurable: true,\n          value: function value() {\n            if (connectedCallback) {\n              connectedCallback.apply(this, arguments);\n            }\n\n            var self = this;\n\n            if (method in this && !init.has(this)) {\n              var ownerDocument = self.ownerDocument;\n              init.set(self, false);\n\n              if (ownerDocument.readyState === 'interactive' || ownerDocument.readyState === 'complete' || isParsed(self)) {\n                parsedCallback(self);\n              } else {\n                var onDCL = function onDCL() {\n                  return cleanUp(self, observer, ownerDocument, onDCL);\n                };\n\n                ownerDocument.addEventListener(DCL, onDCL);\n                var observer = new MutationObserver(function () {\n                  /* istanbul ignore else */\n                  if (isParsed(self)) cleanUp(self, observer, ownerDocument, onDCL);\n                });\n                observer.observe(self.parentNode, {\n                  childList: true,\n                  subtree: true\n                });\n              }\n            } else {\n              requestAnimationFrame(function () {\n                self['parsedCallback']();\n              }); //setTimeout(function(){\n              //  self['parsedCallback']();\n              //}, 0);\n            }\n          }\n        }\n      }, _Object$definePropert[name] = {\n        configurable: true,\n        get: function get() {\n          return init.get(this) === true;\n        }\n      }, _Object$definePropert));\n      return Class;\n    };\n\n    return ElementParser;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n  return ElementParser.withParsedCallback(ElementParser);\n}();\n\nexport default ElementParser; //var framework = 'modern'\n//var list= document.all;\n//for (var i = 0; i < list.length; i++) {\n//  if (list[i].tagName == 'SCRIPT') {\n//    if (list[i].type == 'module') {\n//      var s = list[i].getAttribute('src');\n//      var modern = s.includes('modern');\n//      var classic = s.includes('classic');\n//      if (modern) { framework = 'modern' }\n//      if (classic) { framework = 'classic' }\n//    }\n//  }\n//}\n//function getIndicesOf(searchStr, str, caseSensitive) {\n//  var searchStrLen = searchStr.length;\n//  if (searchStrLen == 0) {return [];}\n//  var startIndex = 0, index, indices = [];\n//  if (!caseSensitive) {\n//    str = str.toLowerCase();\n//    searchStr = searchStr.toLowerCase();\n//  }\n//  while ((index = str.indexOf(searchStr, startIndex)) > -1) {\n//    indices.push(index);\n//    startIndex = index + searchStrLen;\n//  }\n//  return indices;\n//}\n//var indices = getIndicesOf(\"/\", import.meta.url);\n//var rootPath = import.meta.url.substring(0,indices[indices.length-2])\n//var baseFolder = rootPath + \"/ext-runtime-\" + toolkit;"]},"metadata":{},"sourceType":"module"}