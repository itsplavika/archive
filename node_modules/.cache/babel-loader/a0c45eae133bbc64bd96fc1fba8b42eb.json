{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/FullScreenDialog/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CloseIcon from \"../../assets/Icons/CloseIcon\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  dialogHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    alignItems: \"center\",\n    padding: \"0 7px\"\n  },\n  borderHeader: {\n    borderBottom: \"1px solid #C9CDD6\"\n  },\n  modalTitle: {\n    fontSize: 16,\n    color: \"#33415C\"\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\nexport default function FullScreenDialog(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    onClose,\n    open,\n    modalContent,\n    modalTitle,\n    borderHeader\n  } = props;\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(classes.dialogHeader, {\n          [classes.borderHeader]: borderHeader\n        }),\n        onClick: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: modalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), modalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FullScreenDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = FullScreenDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"FullScreenDialog\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/FullScreenDialog/index.jsx"],"names":["React","makeStyles","Dialog","Toolbar","Slide","CloseIcon","classNames","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","dialogHeader","display","justifyContent","width","alignItems","padding","borderHeader","borderBottom","modalTitle","fontSize","color","Transition","forwardRef","props","ref","FullScreenDialog","classes","onClose","open","modalContent","handleClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD2B;AAInCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADT;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAJ4B;AAQnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,cAAc,EAAE,eAFN;AAGVC,IAAAA,KAAK,EAAE,MAHG;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,OAAO,EAAE;AALC,GARqB;AAenCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAE;AADJ,GAfqB;AAkBnCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE;AAFC;AAlBuB,CAAL,CAAN,CAA5B;AAwBA,MAAMC,UAAU,gBAAG1B,KAAK,CAAC2B,UAAN,MAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAChE,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA,GAA3B;AAAA,OAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFkB,CAAnB;MAAMF,U;AAIN,eAAe,SAASI,gBAAT,CAA0BF,KAA1B,EAAiC;AAAA;;AAC5C,QAAMG,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAM;AAAEyB,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,YAAjB;AAA+BX,IAAAA,UAA/B;AAA2CF,IAAAA;AAA3C,MAA4DO,KAAlE;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACtB,QAAIH,OAAJ,EAAa;AACTA,MAAAA,OAAO;AACV;AACJ,GAJD;;AAMA,sBACI,QAAC,MAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,IAAI,EAAEC,IAFV;AAGI,IAAA,OAAO,EAAEE,WAHb;AAII,IAAA,mBAAmB,EAAET,UAJzB;AAAA,4BAMI,QAAC,OAAD;AAAA,6BACI;AACI,QAAA,SAAS,EAAEpB,UAAU,CAACyB,OAAO,CAAChB,YAAT,EAAuB;AACxC,WAACgB,OAAO,CAACV,YAAT,GAAwBA;AADgB,SAAvB,CADzB;AAII,QAAA,OAAO,EAAEc,WAJb;AAAA,gCAMI;AAAI,UAAA,SAAS,EAAEJ,OAAO,CAACR,UAAvB;AAAA,oBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEY;AAApB;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,EAkBKD,YAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhCuBJ,gB;UACJvB,S;;;MADIuB,gB","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CloseIcon from \"../../assets/Icons/CloseIcon\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    dialogHeader: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        alignItems: \"center\",\n        padding: \"0 7px\",\n    },\n    borderHeader: {\n        borderBottom: \"1px solid #C9CDD6\",\n    },\n    modalTitle: {\n        fontSize: 16,\n        color: \"#33415C\",\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n    const classes = useStyles();\n    const { onClose, open, modalContent, modalTitle, borderHeader } = props;\n\n    const handleClose = () => {\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n            onClose={handleClose}\n            TransitionComponent={Transition}\n        >\n            <Toolbar>\n                <div\n                    className={classNames(classes.dialogHeader, {\n                        [classes.borderHeader]: borderHeader,\n                    })}\n                    onClick={handleClose}\n                >\n                    <h4 className={classes.modalTitle}>{modalTitle}</h4>\n                    <CloseIcon onClick={handleClose} />\n                </div>\n            </Toolbar>\n\n            {modalContent}\n        </Dialog>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}