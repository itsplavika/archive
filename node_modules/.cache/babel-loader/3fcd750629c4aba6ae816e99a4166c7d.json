{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/app/trackedContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useReducer, useContext, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  let newState = state.slice();\n\n  switch (action.type) {\n    case \"PUSH\":\n      newState.push(action.payload.pagename);\n      return newState;\n\n    case \"POP\":\n      newState.pop();\n      return newState;\n\n    case \"CLEAR\":\n      newState = [];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst PageContext = /*#__PURE__*/createContext(null);\nconst NavigationContext = /*#__PURE__*/createContext(null);\nexport const NavigationProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, [\"Default\"]);\n  const [openNav, setOpenNav] = useState(false);\n\n  const showNav = val => {\n    setOpenNav(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NavigationContext.Provider, {\n    value: {\n      dispatch,\n      showNav,\n      openNav\n    },\n    children: /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n      value: state,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavigationProvider, \"qeJcJkREXhNEEsTh5gQzlwOGk7o=\");\n\n_c = NavigationProvider;\nexport const usePages = () => {\n  _s2();\n\n  return useContext(PageContext);\n};\n\n_s2(usePages, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useNavigation = () => {\n  _s3();\n\n  return useContext(NavigationContext);\n};\n\n_s3(useNavigation, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationProvider\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/app/trackedContext.jsx"],"names":["React","useReducer","useContext","createContext","useState","reducer","state","action","newState","slice","type","push","payload","pagename","pop","PageContext","NavigationContext","NavigationProvider","props","dispatch","openNav","setOpenNav","showNav","val","children","usePages","useNavigation"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,EAAuDC,QAAvD,QAAuE,OAAvE;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAN,EAAf;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACEF,MAAAA,QAAQ,CAACG,IAAT,CAAcJ,MAAM,CAACK,OAAP,CAAeC,QAA7B;AACA,aAAOL,QAAP;;AACF,SAAK,KAAL;AACEA,MAAAA,QAAQ,CAACM,GAAT;AACA,aAAON,QAAP;;AACF,SAAK,OAAL;AACEA,MAAAA,QAAQ,GAAG,EAAX;AACA,aAAOA,QAAP;;AACF;AACE,aAAOF,KAAP;AAXJ;AAaD,CAfD;;AAiBA,MAAMS,WAAW,gBAAGZ,aAAa,CAAC,IAAD,CAAjC;AACA,MAAMa,iBAAiB,gBAAGb,aAAa,CAAC,IAAD,CAAvC;AAEA,OAAO,MAAMc,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBlB,UAAU,CAACI,OAAD,EAAU,CAAC,SAAD,CAAV,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMkB,OAAO,GAAIC,GAAD,IAAS;AACvBF,IAAAA,UAAU,CAACE,GAAD,CAAV;AACD,GAFD;;AAGA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,QADK;AAELG,MAAAA,OAFK;AAGLF,MAAAA;AAHK,KADT;AAAA,2BAOE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEd,KAA7B;AAAA,gBACGY,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBM;;GAAMP,kB;;KAAAA,kB;AAqBb,OAAO,MAAMQ,QAAQ,GAAG;AAAA;;AAAA,SAAMvB,UAAU,CAACa,WAAD,CAAhB;AAAA,CAAjB;;IAAMU,Q;;AAEb,OAAO,MAAMC,aAAa,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACc,iBAAD,CAAhB;AAAA,CAAtB;;IAAMU,a","sourcesContent":["import React, { useReducer, useContext, createContext, useState } from \"react\";\n\nconst reducer = (state, action) => {\n  let newState = state.slice();\n  switch (action.type) {\n    case \"PUSH\":\n      newState.push(action.payload.pagename);\n      return newState;\n    case \"POP\":\n      newState.pop();\n      return newState;\n    case \"CLEAR\":\n      newState = [];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nconst PageContext = createContext(null);\nconst NavigationContext = createContext(null);\n\nexport const NavigationProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, [\"Default\"]);\n  const [openNav, setOpenNav] = useState(false);\n  const showNav = (val) => {\n    setOpenNav(val);\n  }\n  return (\n    <NavigationContext.Provider\n      value={{\n        dispatch,\n        showNav,\n        openNav,\n      }}\n    >\n      <PageContext.Provider value={state}>\n        {props.children}\n      </PageContext.Provider>\n    </NavigationContext.Provider>\n  );\n};\n\nexport const usePages = () => useContext(PageContext);\n\nexport const useNavigation = () => useContext(NavigationContext);\n"]},"metadata":{},"sourceType":"module"}