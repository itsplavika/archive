{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, shallowEqual, useSelector } from \"react-redux\";\nimport PageHeader from '../../../components/PageHeader';\nimport EAMGridView from '../../../components/EAMGridView';\nimport { makeStyles } from '@material-ui/styles';\nimport EAMExpandButton from '../../../components/EAMExpandButton';\nimport actions from \"../../../actions\";\nimport EAMSelect from '../../../components/EAMSelect';\nimport { selectors } from '../../../reducers';\nimport Spinner from '../../../components/Spinner';\nimport FilterWhiteIcon from '../../../assets/Icons/FilterWhiteIcon';\nimport IconButton from '../../../components/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    height: '100%'\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  wrapper: {\n    height: 'calc(100% - 71px)',\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  filterPanel: {\n    padding: '18px 30px',\n    background: '#FFFFFF',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  gridWrapper: {\n    flex: 1,\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  spinner: {\n    margin: 'auto'\n  },\n  bottomWrapper: {\n    height: 66,\n    width: '100%'\n  }\n});\nconst emptySet = [];\n\nfunction Dashboard() {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const filterOptions = useSelector(state => {\n    const {\n      value\n    } = selectors.workRequestFilterOptions(state) || {};\n    return (value === null || value === void 0 ? void 0 : value.workhubinformation) || emptySet;\n  });\n  const countArr = useSelector(state => {\n    const {\n      value\n    } = selectors.wRDashboardCountList(state);\n    return (value === null || value === void 0 ? void 0 : value.workrequestcount) || emptySet;\n  }, shallowEqual);\n  const selectedFilter = useSelector(state => selectors.dashboardSelectedFilter(state));\n  const navBarightIcons = useMemo(() => [{\n    id: \"1\",\n    type: \"status\",\n    text: /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(FilterWhiteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this),\n    action: () => {\n      history.push(`${location.pathname}/list/Status/view`);\n    }\n  }], [history, location.pathname]);\n  const handleFilterChange = useCallback((id, value) => {\n    dispatch(actions.workRequestV2.dashboard.changeFilter(value));\n  }, [dispatch]);\n  const handleGridClick = useCallback(item => {\n    history.push(`${location.pathname}/list/${selectedFilter}/${item.hdn_card_code}/view`);\n  }, [history, location.pathname, selectedFilter]);\n  useEffect(() => {\n    dispatch(actions.workRequestV2.dashboard.init());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Work Request\",\n      rightActions: navBarightIcons,\n      showNav: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filterPanel,\n        children: /*#__PURE__*/_jsxDEV(EAMSelect, {\n          id: \"groupBy\",\n          value: selectedFilter,\n          labelField: \"workhubcmbdesc\",\n          valueField: \"workhubcmbcode\",\n          onFieldChange: handleFilterChange,\n          options: filterOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.gridWrapper,\n        children: (countArr === null || countArr === void 0 ? void 0 : countArr.length) ? /*#__PURE__*/_jsxDEV(EAMGridView, {\n          variant: selectedFilter === 'Priority' ? \"colored\" : '',\n          keyProp: \"tabdata\",\n          value: countArr,\n          onClick: handleGridClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n          speed: 0.5,\n          className: classes.spinner,\n          type: \"moon\",\n          size: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bottomWrapper,\n        children: /*#__PURE__*/_jsxDEV(EAMExpandButton, {\n          onClick: () => {\n            history.push(`${location.pathname}/create`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"rJQFY8pqKbBCoOeFoEoHDio0k1g=\", false, function () {\n  return [useLocation, useHistory, useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/pages/WorkRequest/Dashboard/index.jsx"],"names":["React","useCallback","useEffect","useMemo","useHistory","useLocation","useDispatch","shallowEqual","useSelector","PageHeader","EAMGridView","makeStyles","EAMExpandButton","actions","EAMSelect","selectors","Spinner","FilterWhiteIcon","IconButton","useStyles","container","height","root","display","flexDirection","wrapper","flex","filterPanel","padding","background","boxShadow","gridWrapper","overflow","spinner","margin","bottomWrapper","width","emptySet","Dashboard","location","history","classes","dispatch","filterOptions","state","value","workRequestFilterOptions","workhubinformation","countArr","wRDashboardCountList","workrequestcount","selectedFilter","dashboardSelectedFilter","navBarightIcons","id","type","text","action","push","pathname","handleFilterChange","workRequestV2","dashboard","changeFilter","handleGridClick","item","hdn_card_code","init","length"],"mappings":"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","sourcesContent":["\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, shallowEqual, useSelector } from \"react-redux\";\nimport PageHeader from '../../../components/PageHeader';\nimport EAMGridView from '../../../components/EAMGridView';\nimport { makeStyles } from '@material-ui/styles';\nimport EAMExpandButton from '../../../components/EAMExpandButton';\nimport actions from \"../../../actions\";\nimport EAMSelect from '../../../components/EAMSelect';\nimport { selectors } from '../../../reducers';\nimport Spinner from '../../../components/Spinner';\nimport FilterWhiteIcon from '../../../assets/Icons/FilterWhiteIcon';\nimport IconButton from '../../../components/IconButton';\n\nconst useStyles = makeStyles({\n  container: {\n    height: '100%'\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  wrapper: {\n    height: 'calc(100% - 71px)',\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  filterPanel: {\n    padding: '18px 30px',\n    background: '#FFFFFF',\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  gridWrapper: {\n    flex: 1,\n    overflow: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  spinner: {\n    margin: 'auto',\n  },\n  bottomWrapper: {\n    height: 66,\n    width: '100%'\n  }\n});\nconst emptySet = [];\nfunction Dashboard() {\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const filterOptions = useSelector(state => {\n    const {value} = selectors.workRequestFilterOptions(state) || {};\n    return value?.workhubinformation || emptySet\n  })\n\n  const countArr = useSelector(state => {\n    const {value} = selectors.wRDashboardCountList(state);\n    return value?.workrequestcount || emptySet;\n  }, shallowEqual);\n  const selectedFilter = useSelector(state => selectors.dashboardSelectedFilter(state));\n  const navBarightIcons = useMemo(() => ([{\n    id: \"1\",\n    type: \"status\",\n    text: <IconButton><FilterWhiteIcon /></IconButton>,\n    action: () => {\n      history.push(`${location.pathname}/list/Status/view`);\n    }\n  }]), [history, location.pathname]);\n\n  const handleFilterChange = useCallback((id, value) => {\n    dispatch(actions.workRequestV2.dashboard.changeFilter(value));\n  }, [dispatch])\n\n  const handleGridClick = useCallback((item) => {\n    history.push(`${location.pathname}/list/${selectedFilter}/${item.hdn_card_code}/view`)\n  }, [history, location.pathname, selectedFilter])\n\n  useEffect(() => {\n    dispatch(actions.workRequestV2.dashboard.init());\n  }, [dispatch])\n\n  return (\n    <div className={classes.container}>\n      <PageHeader\n        title='Work Request'\n        rightActions={navBarightIcons}\n        showNav\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.filterPanel}>\n          <EAMSelect\n            id=\"groupBy\"\n            value={selectedFilter}\n            labelField=\"workhubcmbdesc\"\n            valueField=\"workhubcmbcode\"\n            onFieldChange={handleFilterChange}\n            options={filterOptions}\n          />\n        </div>\n        <div className={classes.gridWrapper}>\n          {countArr?.length ? (\n            <EAMGridView\n              variant={selectedFilter === 'Priority' ? \"colored\" : ''}\n              keyProp=\"tabdata\"\n              value={countArr}\n              onClick={handleGridClick}\n            />\n          ) : <Spinner speed={0.5} className={classes.spinner} type=\"moon\" size={100} />}\n\n        </div>\n        <div className={classes.bottomWrapper}>\n          <EAMExpandButton onClick={() => {\n            history.push(`${location.pathname}/create`);\n          }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}