{"ast":null,"code":"import produce from 'immer';\nimport actionTypes from '../../../actions/types';\n\nconst getFilterKey = filter => {\n  if (!filter) {\n    return '';\n  }\n\n  let key = '';\n  Object.keys(filter).forEach(filterItem => {\n    if (filter[filterItem]) {\n      key += `(${filterItem}-${filter[filterItem]})_`;\n    }\n  });\n  return key;\n};\n\nconst reducer = (state = {}, action) => {\n  const {\n    type,\n    groupBy,\n    Actionflag,\n    filters,\n    value\n  } = action;\n  const filterKey = getFilterKey(filters);\n  return produce(state, draft => {\n    var _draft$count, _draft$count$groupBy, _draft$count$groupBy$;\n\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.INIT:\n        if (!draft.filterOpts) {\n          draft.filterOpts = {};\n          draft.filterOpts.status = 'requested';\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.INIT_SUCCESS:\n        if (draft.filterOpts) {\n          var _value$workhubinforma, _value$workhubinforma2;\n\n          draft.filterOpts.value = value;\n          draft.filterOpts.selectedValue = value === null || value === void 0 ? void 0 : (_value$workhubinforma = value.workhubinformation) === null || _value$workhubinforma === void 0 ? void 0 : (_value$workhubinforma2 = _value$workhubinforma[0]) === null || _value$workhubinforma2 === void 0 ? void 0 : _value$workhubinforma2.workhubcmbcode;\n          draft.filterOpts.status = 'received';\n        }\n\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.COUNT.REQUEST:\n        if (!draft.count) {\n          draft.count = {};\n        }\n\n        if (!draft.count[groupBy]) {\n          draft.count[groupBy] = {};\n        }\n\n        if (!draft.count[groupBy][Actionflag]) {\n          draft.count[groupBy][Actionflag] = {};\n        }\n\n        if (!draft.count[groupBy][Actionflag][filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey] = {};\n        }\n\n        draft.count[groupBy][Actionflag][filterKey].status = 'requested';\n        break;\n      // case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.UPDATE_SELECTED:\n      //   draft.filterOpts.selectedValue = value;\n      //   break;\n\n      case actionTypes.WORK_REQUEST_V2.COUNT.RECEIVED:\n        if (!draft.count) {\n          draft.count = {};\n        }\n\n        if (!draft.count[groupBy]) {\n          draft.count[groupBy] = {};\n        }\n\n        if (!draft.count[groupBy][Actionflag]) {\n          draft.count[groupBy][Actionflag] = {};\n        }\n\n        if (!draft.count[groupBy][Actionflag][filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey] = {};\n        }\n\n        draft.count[groupBy][Actionflag][filterKey].status = 'requested';\n        draft.count[groupBy][Actionflag][filterKey].value = value;\n        break;\n\n      case actionTypes.WORK_REQUEST_V2.COUNT.REQUEST_FAILED:\n        if (draft === null || draft === void 0 ? void 0 : (_draft$count = draft.count) === null || _draft$count === void 0 ? void 0 : (_draft$count$groupBy = _draft$count[groupBy]) === null || _draft$count$groupBy === void 0 ? void 0 : (_draft$count$groupBy$ = _draft$count$groupBy[Actionflag]) === null || _draft$count$groupBy$ === void 0 ? void 0 : _draft$count$groupBy$[filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey].status = 'failed';\n        }\n\n        break;\n\n      default:\n    }\n  });\n};\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\n\nselectors.workRequestFilterOptions = state => {\n  return (state === null || state === void 0 ? void 0 : state.filterOpts) || emptyObj;\n};\n\nselectors.workRequestCount = (state, groupBy, Actionflag, filter) => {\n  var _state$count, _state$count$groupBy, _state$count$groupBy$;\n\n  const filterKey = getFilterKey(filter);\n  return (state === null || state === void 0 ? void 0 : (_state$count = state.count) === null || _state$count === void 0 ? void 0 : (_state$count$groupBy = _state$count[groupBy]) === null || _state$count$groupBy === void 0 ? void 0 : (_state$count$groupBy$ = _state$count$groupBy[Actionflag]) === null || _state$count$groupBy$ === void 0 ? void 0 : _state$count$groupBy$[filterKey]) || emptyObj;\n};","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/reducers/workRequestV2/Count/index.js"],"names":["produce","actionTypes","getFilterKey","filter","key","Object","keys","forEach","filterItem","reducer","state","action","type","groupBy","Actionflag","filters","value","filterKey","draft","WORK_REQUEST_V2","FILTER_OPTIONS","INIT","filterOpts","status","INIT_SUCCESS","selectedValue","workhubinformation","workhubcmbcode","COUNT","REQUEST","count","RECEIVED","REQUEST_FAILED","emptyObj","selectors","workRequestFilterOptions","workRequestCount"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport actionTypes from '../../../actions/types';\n\nconst getFilterKey = (filter) => {\n  if(!filter){\n    return '';\n  }\n  let key = '';\n  Object.keys(filter).forEach(filterItem =>{\n    if(filter[filterItem]){\n      key += `(${filterItem}-${filter[filterItem]})_`\n    }\n  })\n  return key;\n}\n\nconst reducer = (state = {}, action) => {\n  const { type, groupBy, Actionflag, filters,  value } = action;\n  const filterKey = getFilterKey(filters);\n  return produce(state, draft => {\n    switch (type) {\n      case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.INIT:\n        if (!draft.filterOpts) {\n          draft.filterOpts = {};\n          draft.filterOpts.status = 'requested';\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.INIT_SUCCESS:\n        if (draft.filterOpts) {\n          draft.filterOpts.value = value;\n          draft.filterOpts.selectedValue = value?.workhubinformation?.[0]?.workhubcmbcode;\n          draft.filterOpts.status = 'received';\n        }\n        break;\n      case actionTypes.WORK_REQUEST_V2.COUNT.REQUEST:\n        if (!draft.count) {\n          draft.count = {};\n        }\n        if (!draft.count[groupBy]) {\n          draft.count[groupBy] = {}\n        }\n\n        if (!draft.count[groupBy][Actionflag]) {\n          draft.count[groupBy][Actionflag] = {}\n        }\n        if (!draft.count[groupBy][Actionflag][filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey] = {}\n        }\n        draft.count[groupBy][Actionflag][filterKey].status = 'requested';\n        break;\n      // case actionTypes.WORK_REQUEST_V2.FILTER_OPTIONS.UPDATE_SELECTED:\n      //   draft.filterOpts.selectedValue = value;\n      //   break;\n      case actionTypes.WORK_REQUEST_V2.COUNT.RECEIVED:\n        if (!draft.count) {\n          draft.count = {};\n        }\n        if (!draft.count[groupBy]) {\n          draft.count[groupBy] = {}\n        }\n        if (!draft.count[groupBy][Actionflag]) {\n          draft.count[groupBy][Actionflag] = {}\n        }\n        if (!draft.count[groupBy][Actionflag][filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey] = {}\n        }\n        draft.count[groupBy][Actionflag][filterKey].status = 'requested';\n        draft.count[groupBy][Actionflag][filterKey].value = value;\n        break;\n      case actionTypes.WORK_REQUEST_V2.COUNT.REQUEST_FAILED:\n        if (draft?.count?.[groupBy]?.[Actionflag]?.[filterKey]) {\n          draft.count[groupBy][Actionflag][filterKey].status = 'failed';\n        }\n        break;\n      default:\n    }\n  })\n}\n\nexport default reducer;\nconst emptyObj = {};\nexport const selectors = {};\n\nselectors.workRequestFilterOptions = (state) => {\n  return state?.filterOpts || emptyObj;\n}\n\nselectors.workRequestCount = (state, groupBy, Actionflag, filter) => {\n  const filterKey = getFilterKey(filter);\n  return state?.count?.[groupBy]?.[Actionflag]?.[filterKey] || emptyObj;\n}\n"]},"metadata":{},"sourceType":"module"}