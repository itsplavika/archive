{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMDate/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { useMemo } from \"react\";\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from \"moment\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport CalenderIcon from \"../../assets/Icons/CalenderIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  datePicker: {\n    border: 0,\n    width: '100%',\n    marginTop: 9,\n    marginBottom: 12,\n    '& > div > input': {\n      fontSize: 13,\n      fontWeight: 400,\n      lineHeight: '16px',\n      color: '#33415C'\n    }\n  },\n  root: {\n    color: 'red',\n    '& > button': {\n      padding: '0px !important'\n    }\n  }\n});\nexport default function EAMDate({\n  id,\n  title,\n  value,\n  onFieldChange\n}) {\n  _s();\n\n  const handleChange = date => {\n    const formattedDate = convertUtcToTimezone({\n      date,\n      dateFormat: 'YYYY-MM-DD',\n      isDateOnly: true\n    });\n    onFieldChange(id, formattedDate);\n  };\n\n  const valueToDisplay = useMemo(() => {\n    if (value) return moment(value, 'YYYY-MM-DD').toDate();\n    return new Date();\n  }, [value]);\n  const oldDate = useMemo(() => {\n    return moment().subtract(1, \"year\");\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(FormBoxControl, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n      InputAdornmentProps: {\n        classes: {\n          root: classes.root\n        }\n      },\n      keyboardIcon: /*#__PURE__*/_jsxDEV(CalenderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this),\n      className: classes.datePicker // clearable\n      ,\n      value: valueToDisplay,\n      placeholder: \"10/10/2018\",\n      onChange: handleChange,\n      minDate: oldDate,\n      format: \"dd/MM/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EAMDate, \"OEOicAp9+Uy73uSYF60XvPeYUkc=\", false, function () {\n  return [useStyles];\n});\n\n_c = EAMDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMDate\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMDate/index.jsx"],"names":["makeStyles","convertUtcToTimezone","useMemo","KeyboardDatePicker","moment","FormBoxControl","CalenderIcon","useStyles","datePicker","border","width","marginTop","marginBottom","fontSize","fontWeight","lineHeight","color","root","padding","EAMDate","id","title","value","onFieldChange","handleChange","date","formattedDate","dateFormat","isDateOnly","valueToDisplay","toDate","Date","oldDate","subtract","classes"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,CADE;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,SAAS,EAAE,CAHD;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKV,uBAAmB;AACjBC,MAAAA,QAAQ,EAAE,EADO;AAEjBC,MAAAA,UAAU,EAAE,GAFK;AAGjBC,MAAAA,UAAU,EAAE,MAHK;AAIjBC,MAAAA,KAAK,EAAE;AAJU;AALT,GADe;AAa3BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAE,KADH;AAEJ,kBAAc;AACZE,MAAAA,OAAO,EAAE;AADG;AAFV;AAbqB,CAAD,CAA5B;AAoBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAjB,EAAsD;AAAA;;AAEnE,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,UAAMC,aAAa,GAAGzB,oBAAoB,CAAC;AACzCwB,MAAAA,IADyC;AAEzCE,MAAAA,UAAU,EAAE,YAF6B;AAGzCC,MAAAA,UAAU,EAAE;AAH6B,KAAD,CAA1C;AAKAL,IAAAA,aAAa,CAACH,EAAD,EAAKM,aAAL,CAAb;AACD,GAPD;;AASA,QAAMG,cAAc,GAAG3B,OAAO,CAAC,MAAM;AACnC,QAAIoB,KAAJ,EACE,OAAOlB,MAAM,CAACkB,KAAD,EAAQ,YAAR,CAAN,CAA4BQ,MAA5B,EAAP;AACF,WAAO,IAAIC,IAAJ,EAAP;AACD,GAJ6B,EAI3B,CAACT,KAAD,CAJ2B,CAA9B;AAMA,QAAMU,OAAO,GAAG9B,OAAO,CAAC,MAAM;AAC5B,WAAOE,MAAM,GAAG6B,QAAT,CAAkB,CAAlB,EAAqB,MAArB,CAAP;AACD,GAFsB,EAEpB,EAFoB,CAAvB;AAIA,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEc,KADT;AAAA,2BAGE,QAAC,kBAAD;AACE,MAAA,mBAAmB,EAAE;AACnBa,QAAAA,OAAO,EAAE;AACPjB,UAAAA,IAAI,EAAEiB,OAAO,CAACjB;AADP;AADU,OADvB;AAME,MAAA,YAAY,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cANhB;AAOE,MAAA,SAAS,EAAEiB,OAAO,CAAC1B,UAPrB,CAQE;AARF;AASE,MAAA,KAAK,EAAEqB,cATT;AAUE,MAAA,WAAW,EAAC,YAVd;AAWE,MAAA,QAAQ,EAAEL,YAXZ;AAYE,MAAA,OAAO,EAAEQ,OAZX;AAaE,MAAA,MAAM,EAAC;AAbT;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CuBb,O;UAqBNZ,S;;;KArBMY,O","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { useMemo } from \"react\";\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from \"moment\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport CalenderIcon from \"../../assets/Icons/CalenderIcon\";\n\nconst useStyles = makeStyles({\n  datePicker: {\n    border: 0,\n    width: '100%',\n    marginTop: 9,\n    marginBottom: 12,\n    '& > div > input': {\n      fontSize: 13,\n      fontWeight: 400,\n      lineHeight: '16px',\n      color: '#33415C',\n    }\n  },\n  root: {\n    color: 'red',\n    '& > button': {\n      padding: '0px !important',\n    }\n  }\n})\nexport default function EAMDate({ id, title, value, onFieldChange }) {\n\n  const handleChange = (date) => {\n    const formattedDate = convertUtcToTimezone({\n      date,\n      dateFormat: 'YYYY-MM-DD',\n      isDateOnly: true,\n    });\n    onFieldChange(id, formattedDate);\n  };\n\n  const valueToDisplay = useMemo(() => {\n    if (value)\n      return moment(value, 'YYYY-MM-DD').toDate()\n    return new Date();\n  }, [value])\n\n  const oldDate = useMemo(() => {\n    return moment().subtract(1, \"year\");\n  }, [])\n\n  const classes = useStyles();\n  return (\n    <FormBoxControl\n      title={title}\n    >\n      <KeyboardDatePicker\n        InputAdornmentProps={{\n          classes: {\n            root: classes.root\n          }\n        }}\n        keyboardIcon={<CalenderIcon />}\n        className={classes.datePicker}\n        // clearable\n        value={valueToDisplay}\n        placeholder=\"10/10/2018\"\n        onChange={handleChange}\n        minDate={oldDate}\n        format=\"dd/MM/yyyy\"\n      />\n    </FormBoxControl>\n  )\n}"]},"metadata":{},"sourceType":"module"}