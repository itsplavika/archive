{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMDateTime/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { useMemo } from \"react\";\nimport { DateTimePicker } from '@material-ui/pickers';\nimport moment from \"moment\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport CalenderIcon from \"../../assets/Icons/CalenderIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  control: {\n    width: '100%',\n    paddingBottom: 7,\n    paddingTop: 5,\n    '& > div': {\n      fontSize: 13,\n      color: '#33415C'\n    }\n  },\n  endBtn: {\n    '& > button': {\n      paddingLeft: 0,\n      paddingRight: 0\n    }\n  }\n});\nexport default function EAMDateTime({\n  dateId,\n  timeId,\n  title,\n  dateValue,\n  timeValue,\n  onFieldChange\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleDateChange = date => {\n    const formattedDate = convertUtcToTimezone({\n      date,\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      isDateOnly: true\n    });\n    onFieldChange(dateId, formattedDate.split(' ')[0]);\n    onFieldChange(timeId, formattedDate.split(' ')[1]);\n  };\n\n  const valueToDisplay = useMemo(() => {\n    if (dateValue && timeValue) return moment(`${dateValue} ${timeValue}`, 'YYYY-MM-DD HH:mm').toDate();\n    return new Date();\n  }, [dateValue, timeValue]);\n  const oldDate = useMemo(() => {\n    return moment().subtract(1, \"year\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FormBoxControl, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(DateTimePicker // autoOk\n    , {\n      ampm: false,\n      className: classes.control,\n      disableFuture: true,\n      value: valueToDisplay,\n      minDate: oldDate,\n      onChange: handleDateChange,\n      format: \"dd/MM/yyyy - hh:mm a\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          className: classes.endBtn,\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(CalenderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EAMDateTime, \"LghDxIdB5BIJywTxezCCt8SqfHA=\", false, function () {\n  return [useStyles];\n});\n\n_c = EAMDateTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMDateTime\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMDateTime/index.jsx"],"names":["makeStyles","convertUtcToTimezone","useMemo","DateTimePicker","moment","FormBoxControl","IconButton","InputAdornment","CalenderIcon","useStyles","control","width","paddingBottom","paddingTop","fontSize","color","endBtn","paddingLeft","paddingRight","EAMDateTime","dateId","timeId","title","dateValue","timeValue","onFieldChange","classes","handleDateChange","date","formattedDate","dateFormat","isDateOnly","split","valueToDisplay","toDate","Date","oldDate","subtract","endAdornment"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport { convertUtcToTimezone } from \"../../utils/date\";\nimport { useMemo } from \"react\";\nimport { DateTimePicker } from '@material-ui/pickers';\nimport moment from \"moment\";\nimport FormBoxControl from \"../Form/FormBoxControl\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport CalenderIcon from \"../../assets/Icons/CalenderIcon\";\n\nconst useStyles = makeStyles({\n  control: {\n    width: '100%',\n    paddingBottom: 7,\n    paddingTop: 5,\n    '& > div': {\n      fontSize: 13,\n      color: '#33415C',\n    }\n  },\n  endBtn:{\n    '& > button': {\n      paddingLeft: 0,\n      paddingRight: 0,\n    }\n  }\n})\nexport default function EAMDateTime({ dateId, timeId, title, dateValue, timeValue, onFieldChange }) {\n  const classes = useStyles();\n  const handleDateChange = (date) => {\n    const formattedDate = convertUtcToTimezone({\n      date,\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      isDateOnly: true,\n    });\n    onFieldChange(dateId, formattedDate.split(' ')[0]);\n    onFieldChange(timeId, formattedDate.split(' ')[1]);\n  };\n\n  const valueToDisplay = useMemo(() => {\n    if (dateValue && timeValue)\n      return moment(`${dateValue} ${timeValue}`, 'YYYY-MM-DD HH:mm').toDate();\n    return new Date();\n  }, [dateValue, timeValue])\n\n  const oldDate = useMemo(() => {\n    return moment().subtract(1, \"year\");\n  }, [])\n  return (\n    <FormBoxControl\n      title={title}\n    >\n      <DateTimePicker\n        // autoOk\n        ampm={false}\n        className={classes.control}\n        disableFuture\n        value={valueToDisplay}\n        minDate={oldDate}\n        onChange={handleDateChange}\n        format=\"dd/MM/yyyy - hh:mm a\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment className={classes.endBtn} position=\"end\">\n              <IconButton>\n                <CalenderIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </FormBoxControl>\n  )\n}"]},"metadata":{},"sourceType":"module"}