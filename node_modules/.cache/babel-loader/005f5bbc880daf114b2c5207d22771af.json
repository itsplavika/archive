{"ast":null,"code":"var _jsxFileName = \"/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMTextarea/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport EAMText from \"../EAMText\";\nimport IconButton from \"../IconButton\";\nimport UnMuteIcon from \"../../assets/Icons/UnMuteIcon\";\nimport MuteIcon from \"../../assets/Icons/MuteIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  mic: {\n    position: \"relative\",\n    bottom: 39,\n    right: 22,\n    color: \"#5C677D\",\n    float: 'right'\n  },\n  textField: {\n    height: 'auto !important',\n    '& > div': {\n      padding: '0px !important'\n    }\n  }\n});\nexport default function EAMTextarea(props) {\n  _s();\n\n  const {\n    id,\n    value = \"\",\n    onFieldChange\n  } = props;\n  const classes = useStyles();\n  const {\n    transcript,\n    // listening,\n    resetTranscript // browserSupportsSpeechRecognition,\n\n  } = useSpeechRecognition();\n  const [isListening, setIsListening] = useState(false);\n\n  const triggerListening = () => SpeechRecognition.startListening({\n    continuous: true\n  });\n\n  const startListening = () => {\n    resetTranscript();\n    setIsListening(true);\n    triggerListening();\n  };\n\n  const stopListening = () => {\n    setIsListening(false);\n    SpeechRecognition.stopListening();\n    onFieldChange(id, `${value} ${transcript}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EAMText, { ...props,\n      multiline: true,\n      rows: 4,\n      variant: \"outlined\",\n      className: classes.textField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isListening ? /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.mic,\n      onClick: stopListening,\n      children: /*#__PURE__*/_jsxDEV(UnMuteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.mic,\n      onClick: startListening,\n      children: /*#__PURE__*/_jsxDEV(MuteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EAMTextarea, \"7omKAuqFJinxK4eAHORKzlMxce4=\", false, function () {\n  return [useStyles, useSpeechRecognition];\n});\n\n_c = EAMTextarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"EAMTextarea\");","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/components/EAMTextarea/index.jsx"],"names":["React","useState","makeStyles","SpeechRecognition","useSpeechRecognition","EAMText","IconButton","UnMuteIcon","MuteIcon","useStyles","mic","position","bottom","right","color","float","textField","height","padding","EAMTextarea","props","id","value","onFieldChange","classes","transcript","resetTranscript","isListening","setIsListening","triggerListening","startListening","continuous","stopListening"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;AAGA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,KAAK,EAAE,EAHJ;AAIHC,IAAAA,KAAK,EAAE,SAJJ;AAKHC,IAAAA,KAAK,EAAE;AALJ,GADsB;AAQ3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,iBADC;AAET,eAAW;AACTC,MAAAA,OAAO,EAAE;AADA;AAFF;AARgB,CAAD,CAA5B;AAeA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAK,GAAG,EAAd;AAAkBC,IAAAA;AAAlB,MAAoCH,KAA1C;AACA,QAAMI,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM;AACJgB,IAAAA,UADI;AAEJ;AACAC,IAAAA,eAHI,CAIJ;;AAJI,MAKFtB,oBAAoB,EALxB;AAMA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAM4B,gBAAgB,GAAG,MACvB1B,iBAAiB,CAAC2B,cAAlB,CAAiC;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAjC,CADF;;AAGA,QAAMD,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,eAAe;AACfE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,gBAAgB;AACjB,GAJD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAzB,IAAAA,iBAAiB,CAAC6B,aAAlB;AACAT,IAAAA,aAAa,CAACF,EAAD,EAAM,GAAEC,KAAM,IAAGG,UAAW,EAA5B,CAAb;AACD,GAJD;;AAKA,sBACE;AAAA,4BACE,QAAC,OAAD,OACML,KADN;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,EAAEI,OAAO,CAACR;AALrB;AAAA;AAAA;AAAA;AAAA,YADF,EAQGW,WAAW,gBACV,QAAC,UAAD;AACA,MAAA,SAAS,EAAEH,OAAO,CAACd,GADnB;AAEA,MAAA,OAAO,EAAEsB,aAFT;AAAA,6BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADU,gBAQV,QAAC,UAAD;AACA,MAAA,SAAS,EAAER,OAAO,CAACd,GADnB;AAEA,MAAA,OAAO,EAAEoB,cAFT;AAAA,6BAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAjDuBX,W;UAENV,S,EAMZL,oB;;;KARkBe,W","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport EAMText from \"../EAMText\";\nimport IconButton from \"../IconButton\";\nimport UnMuteIcon from \"../../assets/Icons/UnMuteIcon\";\nimport MuteIcon from \"../../assets/Icons/MuteIcon\";\n\nconst useStyles = makeStyles({\n  mic: {\n    position: \"relative\",\n    bottom: 39,\n    right: 22,\n    color: \"#5C677D\",\n    float: 'right',\n  },\n  textField: {\n    height: 'auto !important',\n    '& > div': {\n      padding: '0px !important',\n    }\n  }\n});\nexport default function EAMTextarea(props) {\n  const { id, value = \"\", onFieldChange } = props;\n  const classes = useStyles();\n  const {\n    transcript,\n    // listening,\n    resetTranscript,\n    // browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n  const [isListening, setIsListening] = useState(false);\n  const triggerListening = () =>\n    SpeechRecognition.startListening({ continuous: true });\n\n  const startListening = () => {\n    resetTranscript();\n    setIsListening(true);\n    triggerListening();\n  };\n  const stopListening = () => {\n    setIsListening(false);\n    SpeechRecognition.stopListening();\n    onFieldChange(id, `${value} ${transcript}`);\n  };\n  return (\n    <div>\n      <EAMText\n        {...props}\n        multiline\n        rows={4}\n        variant='outlined'\n        className={classes.textField}\n      />\n      {isListening ? (\n        <IconButton\n        className={classes.mic}\n        onClick={stopListening}\n        >\n          <UnMuteIcon/>\n        </IconButton>\n      ): (\n        <IconButton\n        className={classes.mic}\n        onClick={startListening}\n        >\n          <MuteIcon/>\n        </IconButton>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}