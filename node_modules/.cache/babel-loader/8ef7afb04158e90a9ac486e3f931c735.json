{"ast":null,"code":"import { jsonToGraphQLQuery } from 'json-to-graphql-query';\nexport function getWorkflowMetadata() {\n  const query = {\n    '': {\n      workRequest_getWrkReqMetaAndDefs: {\n        getListItems: {\n          data: {\n            categoryInformation: {\n              categoryCode: true,\n              categoryDesc: true\n            },\n            eqpConditionInformation: {\n              eqpConditionCode: true,\n              eqpConditionDesc: true\n            },\n            Plangroupinformation: {\n              PlangroupCode: true,\n              PlangroupDesc: true\n            },\n            priorityInformation: {\n              priorityCode: true,\n              priorityDesc: true\n            },\n            probleminformation: {\n              problemCode: true,\n              problemDesc: true\n            },\n            statusInformation: {\n              statusCode: true,\n              statusDesc: true\n            },\n            typeInformation: {\n              typeCode: true,\n              typeDesc: true\n            },\n            workgroupinformation: {\n              workgroupcode: true,\n              workgroupdesc: true\n            },\n            workhubinformation: {\n              workhubcmbcode: true,\n              workhubcmbdesc: true\n            },\n            workreqfilterinformation: {\n              workfiltercmbcode: true,\n              workfiltercmbdesc: true\n            },\n            workReqOnInformation: {\n              wrOnCode: true,\n              wrOnDesc: true\n            },\n            reportedbyinformation: {\n              reportedbycode: true,\n              reportedbyname: true\n            }\n          },\n          message: true\n        },\n        screenLaunchdefaultvaluesUPEassistedforallProperties: {\n          data: {\n            wgCode: true,\n            wgdesc: true,\n            wrOnCode: true,\n            wrOnDesc: true,\n            eqplocCode: true,\n            eqplocDesc: true,\n            eqpConditionCode: true,\n            eqpConditionDesc: true,\n            typeCode: true,\n            typeDesc: true,\n            Prioritydesc: true,\n            priorityCode: true,\n            autoCloseCode: true,\n            autoCloseDesc: true,\n            categoryCode: true,\n            categoryDesc: true\n          },\n          message: true\n        }\n      }\n    }\n  };\n  return jsonToGraphQLQuery(query, {\n    pretty: true\n  });\n}","map":{"version":3,"sources":["/Users/plsingh/Downloads/archive-19Sep-Sunday/src/queries/workRequest/getWorkflowMetadata.js"],"names":["jsonToGraphQLQuery","getWorkflowMetadata","query","workRequest_getWrkReqMetaAndDefs","getListItems","data","categoryInformation","categoryCode","categoryDesc","eqpConditionInformation","eqpConditionCode","eqpConditionDesc","Plangroupinformation","PlangroupCode","PlangroupDesc","priorityInformation","priorityCode","priorityDesc","probleminformation","problemCode","problemDesc","statusInformation","statusCode","statusDesc","typeInformation","typeCode","typeDesc","workgroupinformation","workgroupcode","workgroupdesc","workhubinformation","workhubcmbcode","workhubcmbdesc","workreqfilterinformation","workfiltercmbcode","workfiltercmbdesc","workReqOnInformation","wrOnCode","wrOnDesc","reportedbyinformation","reportedbycode","reportedbyname","message","screenLaunchdefaultvaluesUPEassistedforallProperties","wgCode","wgdesc","eqplocCode","eqplocDesc","Prioritydesc","autoCloseCode","autoCloseDesc","pretty"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,uBAAnC;AAEA,OAAO,SAASC,mBAAT,GAA+B;AAClC,QAAMC,KAAK,GAAG;AACZ,QAAI;AACAC,MAAAA,gCAAgC,EAAC;AAC/BC,QAAAA,YAAY,EAAC;AACXC,UAAAA,IAAI,EAAE;AACJC,YAAAA,mBAAmB,EAAC;AAClBC,cAAAA,YAAY,EAAE,IADI;AAElBC,cAAAA,YAAY,EAAE;AAFI,aADhB;AAKJC,YAAAA,uBAAuB,EAAC;AACtBC,cAAAA,gBAAgB,EAAE,IADI;AAEtBC,cAAAA,gBAAgB,EAAE;AAFI,aALpB;AASJC,YAAAA,oBAAoB,EAAC;AACnBC,cAAAA,aAAa,EAAC,IADK;AAEnBC,cAAAA,aAAa,EAAC;AAFK,aATjB;AAaJC,YAAAA,mBAAmB,EAAC;AAClBC,cAAAA,YAAY,EAAC,IADK;AAElBC,cAAAA,YAAY,EAAC;AAFK,aAbhB;AAiBJC,YAAAA,kBAAkB,EAAC;AACjBC,cAAAA,WAAW,EAAC,IADK;AAEjBC,cAAAA,WAAW,EAAC;AAFK,aAjBf;AAqBJC,YAAAA,iBAAiB,EAAC;AAChBC,cAAAA,UAAU,EAAC,IADK;AAEhBC,cAAAA,UAAU,EAAC;AAFK,aArBd;AAyBJC,YAAAA,eAAe,EAAC;AACdC,cAAAA,QAAQ,EAAC,IADK;AAEdC,cAAAA,QAAQ,EAAC;AAFK,aAzBZ;AA6BJC,YAAAA,oBAAoB,EAAC;AACnBC,cAAAA,aAAa,EAAC,IADK;AAEnBC,cAAAA,aAAa,EAAC;AAFK,aA7BjB;AAiCJC,YAAAA,kBAAkB,EAAC;AACjBC,cAAAA,cAAc,EAAC,IADE;AAEjBC,cAAAA,cAAc,EAAC;AAFE,aAjCf;AAqCJC,YAAAA,wBAAwB,EAAC;AACvBC,cAAAA,iBAAiB,EAAC,IADK;AAEvBC,cAAAA,iBAAiB,EAAC;AAFK,aArCrB;AAyCJC,YAAAA,oBAAoB,EAAC;AACnBC,cAAAA,QAAQ,EAAC,IADU;AAEnBC,cAAAA,QAAQ,EAAE;AAFS,aAzCjB;AA6CJC,YAAAA,qBAAqB,EAAE;AACrBC,cAAAA,cAAc,EAAC,IADM;AAErBC,cAAAA,cAAc,EAAE;AAFK;AA7CnB,WADK;AAmDXC,UAAAA,OAAO,EAAE;AAnDE,SADkB;AAsD/BC,QAAAA,oDAAoD,EAAE;AACpDtC,UAAAA,IAAI,EAAE;AACJuC,YAAAA,MAAM,EAAE,IADJ;AAEJC,YAAAA,MAAM,EAAE,IAFJ;AAGJR,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,QAAQ,EAAE,IAJN;AAKJQ,YAAAA,UAAU,EAAE,IALR;AAMJC,YAAAA,UAAU,EAAE,IANR;AAOJrC,YAAAA,gBAAgB,EAAE,IAPd;AAQJC,YAAAA,gBAAgB,EAAE,IARd;AASJc,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,QAAQ,EAAE,IAVN;AAWJsB,YAAAA,YAAY,EAAE,IAXV;AAYJhC,YAAAA,YAAY,EAAE,IAZV;AAaJiC,YAAAA,aAAa,EAAE,IAbX;AAcJC,YAAAA,aAAa,EAAE,IAdX;AAeJ3C,YAAAA,YAAY,EAAE,IAfV;AAgBJC,YAAAA,YAAY,EAAE;AAhBV,WAD8C;AAmBpDkC,UAAAA,OAAO,EAAE;AAnB2C;AAtDvB;AADjC;AADQ,GAAd;AAgFA,SAAO1C,kBAAkB,CAACE,KAAD,EAAQ;AAAEiD,IAAAA,MAAM,EAAE;AAAV,GAAR,CAAzB;AACD","sourcesContent":["import { jsonToGraphQLQuery } from 'json-to-graphql-query';\n\nexport function getWorkflowMetadata() {\n    const query = {\n      '': {\n          workRequest_getWrkReqMetaAndDefs:{\n            getListItems:{\n              data: {\n                categoryInformation:{\n                  categoryCode: true,\n                  categoryDesc: true,\n                },\n                eqpConditionInformation:{\n                  eqpConditionCode: true,\n                  eqpConditionDesc: true,\n                },\n                Plangroupinformation:{\n                  PlangroupCode:true,\n                  PlangroupDesc:true,\n                },\n                priorityInformation:{\n                  priorityCode:true,\n                  priorityDesc:true,\n                },\n                probleminformation:{\n                  problemCode:true,\n                  problemDesc:true,\n                },\n                statusInformation:{\n                  statusCode:true,\n                  statusDesc:true,\n                },\n                typeInformation:{\n                  typeCode:true,\n                  typeDesc:true,\n                },\n                workgroupinformation:{\n                  workgroupcode:true,\n                  workgroupdesc:true,\n                },\n                workhubinformation:{\n                  workhubcmbcode:true,\n                  workhubcmbdesc:true,\n                },\n                workreqfilterinformation:{\n                  workfiltercmbcode:true,\n                  workfiltercmbdesc:true,\n                },\n                workReqOnInformation:{\n                  wrOnCode:true,\n                  wrOnDesc: true,\n                },\n                reportedbyinformation: {\n                  reportedbycode:true,\n                  reportedbyname: true,\n                }\n              },\n              message: true,\n            },\n            screenLaunchdefaultvaluesUPEassistedforallProperties: {\n              data: {\n                wgCode: true,\n                wgdesc: true,\n                wrOnCode: true,\n                wrOnDesc: true,\n                eqplocCode: true,\n                eqplocDesc: true,\n                eqpConditionCode: true,\n                eqpConditionDesc: true,\n                typeCode: true,\n                typeDesc: true,\n                Prioritydesc: true,\n                priorityCode: true,\n                autoCloseCode: true,\n                autoCloseDesc: true,\n                categoryCode: true,\n                categoryDesc: true,\n              },\n              message: true,\n            }\n          }\n      }\n    }\n    return jsonToGraphQLQuery(query, { pretty: true });\n  }\n\n"]},"metadata":{},"sourceType":"module"}